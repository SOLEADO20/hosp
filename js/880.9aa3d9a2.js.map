{"version":3,"file":"js/880.9aa3d9a2.js","mappings":"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","sources":["webpack://hosp/./src/views/sys/user/EditDialog.vue","webpack://hosp/./src/views/sys/user/EditDialog.vue?555f","webpack://hosp/./src/views/sys/user/GrantRoleDialog.vue","webpack://hosp/./src/views/sys/user/GrantRoleDialog.vue?81e9","webpack://hosp/./src/views/sys/user/index.vue","webpack://hosp/./src/views/sys/user/index.vue?5961"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"editDialogVisible\" :title=\"title\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"用户名\" prop=\"username\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.username\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"姓名\" prop=\"personInfo.name\" v-if=\"id==-1\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.personInfo.name\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"身份证号\" prop=\"personInfo.idNo\" v-if=\"id==-1\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.personInfo.idNo\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"personInfo.tel\" v-if=\"id==-1\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.personInfo.tel\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\" prop=\"personInfo.sex\" v-if=\"id==-1\" style=\"width: 48%;\">\r\n        <el-switch\r\n            v-model=\"editForm.personInfo.sex\"\r\n            style=\"--el-switch-on-color:  #f89898; --el-switch-off-color: #409EFF\"\r\n            :active-icon=\"Female\"\r\n            :inactive-icon=\"Male\"\r\n            :active-value=\"true\"\r\n            :inactive-value=\"false\"\r\n            width=\"50px\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"状态\" prop=\"disabled\" style=\"width: 40%;\">\r\n        <el-switch\r\n            v-model=\"editForm.disabled\"\r\n            style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\"\r\n            active-text=\"正常\"\r\n            inactive-text=\"冻结\"\r\n            :active-value=\"false\"\r\n            :inactive-value=\"true\"\r\n            width=\"50px\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\" style=\"width: 100%;\" v-if=\"id==-1\">\r\n        <el-input v-model=\"editForm.password\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"rePassword\" style=\"width: 100%;\" v-if=\"id==-1\">\r\n        <el-input v-model=\"editForm.rePassword\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"note\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.note\" type=\"textarea\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {Male, Female} from '@element-plus/icons-vue';\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n    default: ''\r\n  }\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  // profile: '',\r\n  username: '',\r\n  password: '',\r\n  rePassword: '',\r\n  disabled: false,\r\n  note: '',\r\n  personInfo: {\r\n    name: '',\r\n    idNo: '',\r\n    tel: undefined,\r\n    sex: false,\r\n    disabled: false,\r\n  },\r\n});\r\n\r\nconst validateUser = async (rule, value, callback) => {\r\n  // console.log(rule.field)\r\n  // console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'username') {\r\n    if (value && value.length > 16) {\r\n      callback(new Error('用户名长度不可超过16位'));\r\n    } else {\r\n      // url = '/api/sys/users/checkUser?username=' + value;\r\n      url = '/api/sys/users/checkUser?id=' + editForm.value.id + '&username=' + value;\r\n    }\r\n  } else if (rule.field == 'personInfo.idNo') {\r\n    let pattern = /^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的身份证号'));\r\n    } else {\r\n      // url = '/api/sys/users/checkUser?idNo=' + value;\r\n      url = '/api/sys/users/checkUser?id=' + editForm.value.id + '&idNo=' + value;\r\n    }\r\n  } else if (rule.field == 'personInfo.tel') {\r\n    let pattern = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的手机号'));\r\n    } else {\r\n      // url = '/api/sys/users/checkUser?tel=' + value;\r\n      url = '/api/sys/users/checkUser?id=' + editForm.value.id + '&tel=' + value;\r\n    }\r\n  } else if (rule.field == 'rePassword') {\r\n    if (value != editForm.value.password) {\r\n      callback(new Error('两次密码输入不一致'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  // console.log(url);\r\n  if (url) {\r\n    // console.log('向后台发送请求');\r\n    let res = await AxiosUtil.post(url);\r\n    // console.log(res.data);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  username: [\r\n    {required: true, message: '用户名不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  password: [\r\n    {required: true, message: '密码不能为空', trigger: 'blur'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'change'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'blur'},\r\n  ],\r\n  rePassword: [\r\n    {required: true, message: '请再次输入密码', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  disabled: [\r\n    {required: true, message: '状态不能为空', trigger: 'blur'},\r\n  ],\r\n  \"personInfo.name\": [\r\n    {required: true, message: '姓名不能为空', trigger: 'blur'},\r\n    {min: 2, max: 16, message: '请输入正确的姓名', trigger: 'change'},\r\n    {min: 2, max: 16, message: '请输入正确的姓名', trigger: 'blur'},\r\n  ],\r\n  \"personInfo.idNo\": [\r\n    {required: true, message: '身份证号不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  \"personInfo.tel\": [\r\n    {required: true, message: '手机号不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  \"personInfo.sex\": [\r\n    {required: true, message: '请输入性别', trigger: 'blur'},\r\n  ],\r\n\r\n  // date: [\r\n  //   {\r\n  //     type: 'date',\r\n  //     required: true,\r\n  //     message: 'Please pick a date',\r\n  //     trigger: 'change',\r\n  //   },\r\n  // ],\r\n  // type: [\r\n  //   {\r\n  //     type: 'array',\r\n  //     required: true,\r\n  //     message: 'Please select at least one activity type',\r\n  //     trigger: 'change',\r\n  //   },\r\n  // ],\r\n  note: [\r\n    {required: false, max: 192, message: '备注信息不可超过192个字符', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  if (id == -1) {\r\n    editForm.value = {\r\n      id: -1,\r\n      // profile: '',\r\n      username: '',\r\n      password: '',\r\n      rePassword: '',\r\n      disabled: false,\r\n      note: '',\r\n      personInfo: {\r\n        name: '',\r\n        idNo: '',\r\n        tel: undefined,\r\n        sex: false,\r\n        disabled: false,\r\n      },\r\n    };\r\n    console.log('清空表单...');\r\n  } else {\r\n    let res = await AxiosUtil.get('/api/sys/users/' + id);\r\n    console.log(res.data);\r\n    if (res.data.code == 20010) {\r\n      let user = res.data.user;\r\n      // 更新表格数据\r\n      editForm.value = user;\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      if (editForm.value.id == -1) {\r\n        console.log('提交新增...');\r\n        url = '/api/sys/users';\r\n        res = await AxiosUtil.post(url, editForm.value);\r\n        console.log(\"新增用户 res.data= \", res.data);\r\n      } else {\r\n        console.log('提交修改...');\r\n        url = '/api/sys/users';\r\n        res = await AxiosUtil.put(url, editForm.value);\r\n        console.log(\"修改用户 res.data= \", res.data);\r\n      }\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-dialog v-model=\"grantRoleDialogVisible\" title=\"分配角色\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form :model=\"grantRoleForm\">\r\n\r\n      <el-form-item>\r\n        <el-checkbox v-model=\"checkAll\" :indeterminate=\"isIndeterminate\" @change=\"handleCheckAllChange\">全选</el-checkbox>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-checkbox-group v-model=\"grantRoleForm.checkedRoleIdList\" @change=\"handleCheckedRoleChange\">\r\n          <el-checkbox v-for=\"role in grantRoleForm.roleList\" :key=\"role.id\" :label=\"role.id\" name=\"roleList\">\r\n            {{ role.name }}\r\n          </el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-form-item>\r\n\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\nimport qs from \"qs\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  grantRoleDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:grantRoleDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst grantRoleDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.grantRoleDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:grantRoleDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst grantRoleForm = ref({\r\n  id: -1,\r\n  roleList: [], // 所有的 角色列表\r\n  roleIdList: [], // 所有的 角色ID列表\r\n  checkedRoleIdList: [], // 已选的 角色ID列表\r\n});\r\n\r\n// 定义是否“全选”\r\nconst checkAll = ref(false);\r\n\r\n// 定义是否“全选”中间状态\r\nconst isIndeterminate = ref(true);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  try {\r\n    let res1 = await AxiosUtil.get('/api/sys/roles');\r\n    let res2 = await AxiosUtil.get('/api/sys/users/' + id);\r\n    console.log(res1.data);\r\n    console.log(res2.data);\r\n    if (res1.data.code == 20010 && res2.data.code == 20010) {\r\n      // 所有的 角色列表、角色ID列表\r\n      let roleList = res1.data.roleList;\r\n      let roleIdList = [];\r\n      roleList.forEach(role => {\r\n        roleIdList.push(role.id);\r\n      });\r\n      // 已选的 角色ID列表\r\n      let checkedRoleIdList = [];\r\n      res2.data.user.roleList.forEach(role => {\r\n        checkedRoleIdList.push(role.id);\r\n      })\r\n      // 更新表格数据\r\n      grantRoleForm.value.id = id;\r\n      grantRoleForm.value.roleList = roleList;\r\n      grantRoleForm.value.roleIdList = roleIdList;\r\n      grantRoleForm.value.checkedRoleIdList = checkedRoleIdList;\r\n      // 更新全选状态\r\n      handleCheckedRoleChange(checkedRoleIdList);\r\n    } else {\r\n      ElMessage({\r\n        message: res1.data.msg,\r\n        type: 'error',\r\n      });\r\n      ElMessage({\r\n        message: res2.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n  }\r\n}\r\n\r\n// 处理选择集的改变\r\nconst handleCheckedRoleChange = (value) => {\r\n  console.log(value);\r\n  let checkedCount = value.length;\r\n\r\n  // 更新全选状态\r\n  checkAll.value = checkedCount === grantRoleForm.value.roleIdList.length;\r\n  isIndeterminate.value = checkedCount > 0 && checkedCount < grantRoleForm.value.roleIdList.length;\r\n}\r\n\r\n// 处理“全选”复选框的变化\r\nconst handleCheckAllChange = (val) => {\r\n  // 更新已选择的列表\r\n  grantRoleForm.value.checkedRoleIdList = val ? grantRoleForm.value.roleIdList : [];\r\n  // 取消“全选”中间状态\r\n  isIndeterminate.value = false;\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  grantRoleDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = async () => {\r\n  let url, res;\r\n  console.log('提交角色分配...');\r\n  url = '/api/sys/users/grantRole/' + grantRoleForm.value.id;\r\n  try {\r\n    res = await AxiosUtil.put(url, grantRoleForm.value.checkedRoleIdList);\r\n    console.log(\"分配用户角色 res.data= \", res.data);\r\n    if (res.data.code == 20030) {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'success',\r\n      });\r\n      emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n      handleCancel(); // 关闭对话框\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n    ElMessage({\r\n      message: '操作失败！' + e,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(grantRoleDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"GrantRoleDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./GrantRoleDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GrantRoleDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-container>\r\n    <!--操作台-->\r\n    <el-header class=\"operatingFloor\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"7\">\r\n          <el-input v-model=\"query\" placeholder=\"请输入用户名...\" @keyup.enter=\"handleQuery\" clearable/>\r\n        </el-col>\r\n        <el-button type=\"primary\" :icon=\"Search\" @click=\"handleQuery\">查询</el-button>\r\n        <el-button type=\"success\" :icon=\"DocumentAdd\" @click=\"handleEdit(null)\" v-if=\"hasAnyAuthority('system:user:add')\">新增</el-button>\r\n        <el-popconfirm title=\"您确定要批量删除这些记录吗？\" @confirm=\"handleDelete(null)\" v-if=\"hasAnyAuthority('system:user:delete')\">\r\n          <template #reference>\r\n            <el-button type=\"danger\" :icon=\"Delete\" :disabled=\"batchDeleteBtnDisabled\">批量删除</el-button>\r\n          </template>\r\n        </el-popconfirm>\r\n        <el-checkbox label=\"显示身份信息\" v-model=\"personInfoEnabled\" style=\"margin-left: 12px;\"/>\r\n      </el-row>\r\n    </el-header>\r\n    <el-main style=\"padding: 5px; background: aliceblue;\" id=\"mainView\">\r\n      <el-table\r\n          :data=\"tableData\"\r\n          :max-height=\"tableMaxHeight\"\r\n          :default-sort=\"{ prop: 'id', order: 'ascending' }\"\r\n          @selection-change=\"handleSelectionChange\"\r\n          style=\"width: 100%\"\r\n          highlight-current-row\r\n          stripe>\r\n        <el-table-column type=\"selection\" width=\"40\" align=\"center\"/>\r\n        <el-table-column prop=\"profile\" label=\"头像\" width=\"70\" align=\"center\" fixed>\r\n          <template #default=\"scope\">\r\n            <el-avatar shape=\"square\" size=\"default\" :src=\"getServerUrl()+'/image/userProfile/'+scope.row.profile\"/>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"id\" label=\"用户ID\" width=\"120\" header-align=\"center\" sortable fixed/>\r\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" header-align=\"center\" sortable fixed/>\r\n        <el-table-column prop=\"roleList\" label=\"拥有角色\" width=\"200\" align=\"center\">\r\n          <template #default=\"scope\">\r\n            <el-tag type=\"warning\" size=\"small\" v-for=\"item in scope.row.roleList\" :key=\"item.id\">{{\r\n                item.name\r\n              }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"disabled\" label=\"状态\" width=\"76\" align=\"center\"\r\n                         :filters=\"[{ text: '正常', value: false },{ text: '冻结', value: true },]\"\r\n                         :filter-method=\"filterState\">\r\n          <template #default=\"{row}\">\r\n            <el-switch\r\n                v-model=\"row.disabled\"\r\n                inline-prompt\r\n                style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\"\r\n                active-text=\"正常\"\r\n                inactive-text=\"冻结\"\r\n                :active-value=\"false\"\r\n                :inactive-value=\"true\"\r\n                width=\"50px\"\r\n                :loading=\"row.loading\"\r\n                @change=\"handleStateChange(row)\"\r\n                :disabled=\"!hasAnyAuthority('system:user:edit')\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"note\" label=\"备注\" width=\"250\" header-align=\"center\"/>\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\" header-align=\"center\" sortable/>\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\" width=\"160\" header-align=\"center\" sortable/>\r\n        <el-table-column prop=\"loginTime\" label=\"最后登录时间\" width=\"160\" header-align=\"center\" sortable/>\r\n        <el-table-column prop=\"personInfo\" label=\"身份信息\" width=\"460\" header-align=\"center\" v-if=\"personInfoEnabled\">\r\n          <el-table-column prop=\"personInfo.name\" label=\"姓名\" width=\"94\" header-align=\"center\"/>\r\n          <el-table-column prop=\"personInfo.idNo\" label=\"身份证号\" width=\"170\" header-align=\"center\"/>\r\n          <el-table-column prop=\"personInfo.sex\" label=\"性别\" width=\"76\" align=\"center\">\r\n            <template #default=\"{row}\">\r\n              <el-switch\r\n                  v-model=\"row.personInfo.sex\"\r\n                  inline-prompt\r\n                  style=\"--el-switch-on-color:  #f89898; --el-switch-off-color: #409EFF\"\r\n                  :active-icon=\"Female\"\r\n                  :inactive-icon=\"Male\"\r\n                  :active-value=\"true\"\r\n                  :inactive-value=\"false\"\r\n                  width=\"50px\"\r\n                  disabled\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"personInfo.tel\" label=\"电话\" min-width=\"114\" align=\"center\"/>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"370\" align=\"right\" header-align=\"center\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" :icon=\"Tools\" @click=\"handleGrantRoles(scope.row.id)\" v-if=\"hasAnyAuthority('system:user:edit')\">分配角色</el-button>\r\n            <el-popconfirm title=\"您确定要对这个用户重置密码吗？\" @confirm=\"handleResetPassword(scope.row.id)\" v-if=\"hasAnyAuthority('system:user:edit')\">\r\n              <template #reference>\r\n                <el-button type=\"warning\" :icon=\"RefreshRight\">重置密码</el-button>\r\n              </template>\r\n            </el-popconfirm>\r\n            <el-button type=\"primary\" :icon=\"Edit\" @click=\"handleEdit(scope.row.id)\" v-if=\"hasAnyAuthority('system:user:edit')\"/>\r\n            <el-popconfirm title=\"您确定要删除这条记录吗？\" @confirm=\"handleDelete(scope.row.id)\" v-if=\"hasAnyAuthority('system:user:delete')\">\r\n              <template #reference>\r\n                <el-button type=\"danger\" :icon=\"Delete\"/>\r\n              </template>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-main>\r\n    <el-footer style=\"background: powderblue;height: 32px;display: flex;align-items: center;justify-content: flex-end;\">\r\n      <el-pagination\r\n          v-model:currentPage=\"queryForm.currentPage\"\r\n          v-model:page-size=\"queryForm.pageSize\"\r\n          :page-sizes=\"[5, 10, 20, 50, 100]\"\r\n          small\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n      />\r\n    </el-footer>\r\n  </el-container>\r\n  <EditDialog v-model:edit-dialog-visible=\"editDialogVisible\" :id=\"editId\" :title=\"editTitle\"\r\n              @handleSubmit=\"fetchData\"/>\r\n  <GrantRoleDialog v-model:grant-role-dialog-visible=\"grantRoleDialogVisible\" :id=\"editId\" @handleSubmit=\"fetchData\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport {Search, DocumentAdd, Delete, Tools, RefreshRight, Edit, Male, Female} from '@element-plus/icons-vue'\r\nimport {onMounted, reactive, ref, watch} from \"vue\";\r\nimport AxiosUtil, {getServerUrl} from \"@/utils/AxiosUtil\";\r\nimport EditDialog from \"./EditDialog\";\r\nimport GrantRoleDialog from \"./GrantRoleDialog\";\r\nimport qs from \"qs\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\n/*====以下为一些数据的定义====*/\r\n\r\n// 定义表单的查询查询条件\r\nconst queryForm = reactive({\r\n  query: '', // 查找的字符\r\n  currentPage: 1, // 当前页数\r\n  pageSize: 10, // 页面记录容量\r\n});\r\n\r\n// 定义临时的查询关键词\r\nconst query = ref('');\r\n\r\n// 定义从分页组件的总记录数\r\nconst total = ref(400);\r\n\r\n// 定义批量删除按钮是否禁用\r\nconst batchDeleteBtnDisabled = ref(true);\r\n\r\n// 定义已选择的记录\r\nconst multipleSelection = ref([]);\r\n\r\n// 定义表格的最大高度\r\nconst tableMaxHeight = ref(400);\r\n\r\n// 定义身份信息是否显示\r\nconst personInfoEnabled = ref(false);\r\n\r\n// 定义表格数据\r\nconst tableData = ref([\r\n  {\r\n    id: 10075286712,\r\n    personId: 1,\r\n    username: 'oyxm',\r\n    profile: 'cxy.jpg',\r\n    note: '擅长包扎、伤口处理、高精度手术等等。',\r\n    personInfo: {\r\n      name: '欧阳修米',\r\n      idNo: '430111200012310089',\r\n      tel: 18877776666,\r\n      sex: true,\r\n    },\r\n    roleList: [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"超级管理员\",\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"name\": \"科室管理员\",\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"name\": \"系统管理员\",\r\n      }\r\n    ],\r\n    disabled: false,\r\n    createTime: '2022-09-23 20:10:01',\r\n    updateTime: '2022-10-18 18:16:18',\r\n    loginTime: '2022-10-18 18:16:18'\r\n  },\r\n  {\r\n    id: 1007448077,\r\n    personId: 2,\r\n    username: 'oyxm',\r\n    profile: 'lhy.jpg',\r\n    note: '擅长帮助客户提高睡眠质量，充实每一天。',\r\n    personInfo: {\r\n      name: '陈嘉乐',\r\n      idNo: '43302720001231008X',\r\n      tel: 13177771111,\r\n      sex: false,\r\n    },\r\n    roleList: [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"超级管理员\",\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"name\": \"系统管理员\",\r\n      }\r\n    ],\r\n    disabled: true,\r\n    createTime: '2022-09-23 20:10:01',\r\n    updateTime: '2022-10-18 18:16:18',\r\n    loginTime: '2022-10-18 18:16:18'\r\n  },\r\n]);\r\n\r\n// 定义编辑对话框的显示状态\r\nconst editDialogVisible = ref(false);\r\n\r\n// 定义角色分配对话框的显示状态\r\nconst grantRoleDialogVisible = ref(false);\r\n\r\n// 定义传入编辑对话框（或分配角色对话框）的id值\r\nconst editId = ref(-1);\r\n\r\n// 定义传入编辑对话框的title值\r\nconst editTitle = ref('');\r\n\r\n\r\n/*====以下为各按钮的点击事件====*/\r\n\r\n// 处理通过关键字查询\r\nconst handleQuery = () => {\r\n  // 设置当前页码为1\r\n  queryForm.currentPage = 1;\r\n  // 由于设置了当queryForm发生变化时才从后台重新拉取数据，\r\n  // 因此若查找的字符实际上未发生变化则需要手动刷新数据\r\n  // 即先点查询按钮，再进行翻页等操作\r\n  if (queryForm.query == query.value) {\r\n    console.log('手动刷新：关键字不变...');\r\n    fetchData();\r\n  } else {\r\n    queryForm.query = query.value;\r\n  }\r\n}\r\n\r\n// 处理删除记录\r\nconst handleDelete = async (id) => {\r\n  if (!id) {\r\n    // 不传入参数时，为批量删除\r\n    id = [];\r\n    multipleSelection.value.forEach(item => {\r\n      id.push(item.id);\r\n    });\r\n  } else {\r\n    // 不传入参数时，为单个删除\r\n    id = [id];\r\n  }\r\n  console.log('删除...', id);\r\n  let url = '/api/sys/users/' + id.join(',');\r\n  console.log('url=', url);\r\n  let res = await AxiosUtil.del(url);\r\n  console.log('res=', res);\r\n  if (res.data.code == 20040) {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'success',\r\n    });\r\n    await fetchData();\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 处理分配角色\r\nconst handleGrantRoles = (id) => {\r\n  console.log('分配角色...', id);\r\n  editId.value = id;\r\n  grantRoleDialogVisible.value = true;\r\n}\r\n\r\n// 处理重置密码\r\nconst handleResetPassword = async (id) => {\r\n  console.log('重置密码...', id);\r\n  let url = '/api/sys/users/resetPassword/' + id;\r\n  console.log(url);\r\n  // 为保证程序能正常走完，发送请求要用 try...catch 包围\r\n  try {\r\n    let res = await AxiosUtil.put(url);\r\n    if (res.data.code == 20030) {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'info',\r\n        duration: 0,\r\n        showClose: true,\r\n      });\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n    ElMessage({\r\n      message: '操作失败！' + e,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 处理新增、编辑\r\nconst handleEdit = (id) => {\r\n  if (id) {\r\n    console.log('修改...', id);\r\n    editId.value = id;\r\n    editTitle.value = '用户修改';\r\n  } else {\r\n    console.log('新增...', id);\r\n    editId.value = -1;\r\n    editTitle.value = '用户添加';\r\n  }\r\n  editDialogVisible.value = true;\r\n}\r\n\r\n\r\n/*====以下为一些监听以及其他函数====*/\r\n\r\n// 处理页面容量的改变\r\nconst handleSizeChange = (val) => {\r\n  console.log(`${val} items per page`);\r\n}\r\n\r\n// 处理页码的改变\r\nconst handleCurrentChange = (val) => {\r\n  console.log(`current page: ${val}`);\r\n}\r\n\r\n// 处理选择集的改变\r\nconst handleSelectionChange = (list) => {\r\n  multipleSelection.value = list;\r\n  // 更新批量删除按钮的可用状态\r\n  batchDeleteBtnDisabled.value = list.length == 0;\r\n  console.log('新选择= ', list);\r\n}\r\n\r\n// 处理状态的改变\r\nconst handleStateChange = async (row) => {\r\n  // console.log('状态变化...', row.id);\r\n\r\n  // 先设置元素为加载状态\r\n  row.loading = true;\r\n  let url = '/api/sys/users/updateDisabled/' + row.id + '/' + row.disabled;\r\n  // console.log(url);\r\n\r\n  // 为保证程序能正常走完，发送请求要用 try...catch 包围\r\n  try {\r\n    let res = await AxiosUtil.put(url);\r\n    if (res.data.code == 20030) {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'success',\r\n      });\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n      row.disabled = !row.disabled; // 恢复显示为修改前的状态\r\n    }\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n    ElMessage({\r\n      message: '操作失败！' + e,\r\n      type: 'error',\r\n    });\r\n    row.disabled = !row.disabled; // 恢复显示为修改前的状态\r\n  }\r\n\r\n  // 请求结束后取消元素的加载状态\r\n  row.loading = false;\r\n}\r\n\r\n// 处理按状态筛选记录\r\nconst filterState = (value, row) => {\r\n  return row.disabled === value;\r\n}\r\n\r\n// 从后台获取数据\r\nconst fetchData = async () => {\r\n  let url = '/api/sys/users?' + qs.stringify(queryForm);\r\n  // let url = '/api/sys/users/1';\r\n  console.log('url=', url);\r\n  // 从后台获取数据\r\n  let res = await AxiosUtil.get(url);\r\n  console.log(\"更新用户列表 res= \", res);\r\n  if (res.data.code == 20010) {\r\n    // 更新表格数据\r\n    tableData.value = res.data.userList;\r\n    // 更新分页组件总记录数\r\n    total.value = res.data.total;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\nfetchData();\r\n\r\n// 当表单的查询查询条件发生变化时，重新拉取数据\r\nwatch(queryForm, async (newForm, oldForm) => {\r\n  // 如果改变每页容量，则确保当前页的第一条记录在新的结果中仍然出现\r\n  if (newForm.pageSize != oldForm.pageSize) {\r\n    let currentItem = oldForm.pageSize * (oldForm.currentPage - 1) + 1;\r\n    newForm.currentPage = Math.ceil(currentItem / newForm.pageSize);\r\n  }\r\n  console.log(Date.now() + ' 重新拉取数据...');\r\n  console.log(queryForm);\r\n  await fetchData();\r\n});\r\n\r\n// 新建一个ResizeObserver用于监视表格容器尺寸的变化\r\nconst resizeObserver = new ResizeObserver((entries) => {\r\n  for (const entry of entries) {\r\n    // 仅对指定id的元素生效\r\n    if (entry.target.id == 'mainView') {\r\n      let mainViewHeight;\r\n      // 由于兼容性问题，获取元素高度时需谨慎\r\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver\r\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserverEntry\r\n      if (entry.contentBoxSize) {\r\n        // Firefox implements `contentBoxSize` as a single content rect, rather than an array\r\n        const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\r\n        mainViewHeight = contentBoxSize.blockSize;\r\n      } else {\r\n        mainViewHeight = entry.contentRect.height;\r\n      }\r\n      // 设置表格的最大高度为表格容器的高度\r\n      tableMaxHeight.value = mainViewHeight;\r\n      // console.log('mainViewHeight= ', mainViewHeight);\r\n    }\r\n  }\r\n});\r\n\r\n// 在组件完成初始渲染并创建 DOM 节点后开始监视表格容器\r\nonMounted(() => {\r\n  const mainView = document.getElementById('mainView');\r\n  resizeObserver.observe(mainView);\r\n});\r\n\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"index\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*操作台*/\r\n.operatingFloor {\r\n  /*display: flex;*/\r\n  /*align-items: center; !*align-items 属性可以使元素在交叉轴方向对齐*!*/\r\n  /*justify-content: flex-start; !*justify-content属性用来使元素在主轴方向上对齐*!*/\r\n  height: 48px;\r\n  padding: 8px 10px;\r\n\r\n}\r\n\r\n.el-tag--small {\r\n  margin-left: 5px;\r\n}\r\n\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=a5a4d7fa&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a5a4d7fa\"]])\n\nexport default __exports__"],"names":["name","editDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","username","password","rePassword","disabled","note","personInfo","idNo","tel","undefined","sex","validateUser","async","rule","value","callback","url","field","length","Error","pattern","test","res","AxiosUtil","data","code","msg","editFormRules","reactive","required","message","trigger","validator","min","max","editFormRef","handleReset","console","log","user","ElMessage","type","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","watch","__exports__","grantRoleDialogVisible","grantRoleForm","roleList","roleIdList","checkedRoleIdList","checkAll","isIndeterminate","res1","res2","forEach","role","push","handleCheckedRoleChange","e","checkedCount","handleCheckAllChange","val","queryForm","query","currentPage","pageSize","total","batchDeleteBtnDisabled","multipleSelection","tableMaxHeight","personInfoEnabled","tableData","personId","profile","createTime","updateTime","loginTime","editId","editTitle","handleQuery","fetchData","handleDelete","item","join","handleGrantRoles","handleResetPassword","duration","showClose","handleEdit","handleSizeChange","handleCurrentChange","handleSelectionChange","list","handleStateChange","row","loading","filterState","qs","userList","newForm","oldForm","currentItem","Math","ceil","Date","now","resizeObserver","ResizeObserver","entries","entry","target","mainViewHeight","contentBoxSize","Array","isArray","blockSize","contentRect","height","onMounted","mainView","document","getElementById","observe"],"sourceRoot":""}