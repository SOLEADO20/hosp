{"version":3,"file":"js/671.a78c5753.js","mappings":"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","sources":["webpack://hosp/./src/views/clinic/schedule/index.vue","webpack://hosp/./src/views/clinic/schedule/index.vue?ca62"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <!--操作台-->\r\n    <el-header class=\"operatingFloor\">\r\n      <el-row :gutter=\"20\">\r\n        <el-date-picker\r\n            v-model=\"queryForm.selectedDate\"\r\n            type=\"week\"\r\n            format=\"[第] ww [周]\"\r\n            placeholder=\"选择一周\"\r\n            :clearable=\"false\"\r\n            style=\"margin: 0 10px;\"\r\n        />\r\n      </el-row>\r\n    </el-header>\r\n    <el-main style=\"padding: 5px; background: aliceblue;\" id=\"mainView\">\r\n      <el-scrollbar>\r\n        <el-calendar v-model=\"queryForm.selectedDate\" :range=\"dateRange\" ref=\"calendar\">\r\n          <template #header=\"{ date }\">\r\n            <span>{{ date }}</span>\r\n            <span></span>\r\n            <el-button-group>\r\n              <el-button size=\"small\" @click=\"handlePreviousWeek\">\r\n                上一周\r\n              </el-button>\r\n              <el-button size=\"small\" @click=\"selectDate('today')\">今天</el-button>\r\n              <el-button size=\"small\" @click=\"handleNextWeek\">\r\n                下一周\r\n              </el-button>\r\n            </el-button-group>\r\n          </template>\r\n          <template #date-cell=\"{ data }\">\r\n            <p :class=\"data.isSelected ? 'is-selected' : ''\">\r\n              {{ data.day.split('-').slice(1).join('-') }}\r\n            </p>\r\n            <div style=\"height: 265px; border: 1px solid #95d475; border-radius: 5px;\">\r\n              <el-divider>上午</el-divider>\r\n              <el-scrollbar height=\"210px\">\r\n                <el-card v-for=\"schedule in getDateData(data.date, 0)\" :key=\"schedule.id\"\r\n                         style=\"font-size: xx-small\">\r\n                  {{ schedule.departmentInfo.name }}\r\n                  <el-tag>{{ schedule.roomInfo.roomNo }}诊室</el-tag>\r\n                </el-card>\r\n              </el-scrollbar>\r\n            </div>\r\n            <div style=\"height: 265px; border: 1px solid #95d475; border-radius: 5px;margin-top: 5px;\">\r\n              <el-divider>下午</el-divider>\r\n              <el-scrollbar height=\"210px\">\r\n                <el-card v-for=\"schedule in getDateData(data.date, 1)\" :key=\"schedule.id\"\r\n                         style=\"font-size: xx-small\">\r\n                  {{ schedule.departmentInfo.name }}\r\n                  <el-tag>{{ schedule.roomInfo.roomNo }}诊室</el-tag>\r\n                </el-card>\r\n              </el-scrollbar>\r\n            </div>\r\n          </template>\r\n        </el-calendar>\r\n      </el-scrollbar>\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref, watch} from \"vue\";\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport qs from \"qs\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport store from \"@/store\";\r\n\r\n/*====以下为一些数据的定义====*/\r\n\r\n// 定义本地用户信息\r\nconst userInfo = ref(store.getters.GET_USERINFO);\r\n\r\n// 定义视图数据\r\nlet scheduleData = ref([]);\r\n\r\n// 定义表单的查询条件\r\nconst queryForm = reactive({\r\n  doctorId: userInfo.value.personId, // 医生身份ID\r\n  selectedDate: new Date(), // 选定的日期\r\n});\r\n\r\n// 定义日历显示的起止日期\r\nlet nowDate = new Date();\r\nconst dateRange = ref([new Date(nowDate.getTime() - 1000 * 60 * 60 * 24 * nowDate.getDay()), new Date(nowDate.getTime() + 1000 * 60 * 60 * 24 * (6 - nowDate.getDay()))]);\r\n\r\n// 定义日历组件的引用\r\nconst calendar = ref()\r\n\r\n/*====以下为各按钮的点击事件====*/\r\n\r\n// 处理切换上一周视图\r\nconst handlePreviousWeek = () => {\r\n  queryForm.selectedDate = new Date(queryForm.selectedDate.getTime() - 1000 * 60 * 60 * 24 * 7);\r\n}\r\n\r\n// 处理切换下一周视图\r\nconst handleNextWeek = () => {\r\n  queryForm.selectedDate = new Date(queryForm.selectedDate.getTime() + 1000 * 60 * 60 * 24 * 7);\r\n}\r\n\r\n// 处理点击上个月、今天、下个月\r\nconst selectDate = (val) => {\r\n  calendar.value.selectDate(val)\r\n}\r\n\r\n/*====以下为一些监听以及其他函数====*/\r\n\r\n// 获取指定日期、班次的排班\r\nconst getDateData = (date, time) => {\r\n  let curYear = date.getFullYear();\r\n  let curMonth = date.getMonth();\r\n  let curDate = date.getDate();\r\n  let dateData = [];\r\n  for (const schedule of scheduleData.value) {\r\n    if (schedule.date.getFullYear() == curYear && schedule.date.getMonth() == curMonth && schedule.date.getDate() == curDate && (time == null || schedule.time == time)) {\r\n      dateData.push(schedule);\r\n    }\r\n  }\r\n  return dateData;\r\n}\r\n\r\n// 转换日期为字符串\r\nconst dateToStr = (dateDate) => {\r\n  let year = dateDate.getFullYear();\r\n  let month = (dateDate.getMonth() + 1);\r\n  let date = dateDate.getDate();\r\n  let dateStr = year + '-' + (month < 10 ? '0' + month : month) + '-' + (date < 10 ? '0' + date : date);\r\n  console.log('dateToStr dateDate=', dateDate, ', dateStr=', dateStr);\r\n  return dateStr;\r\n}\r\n\r\n// 转换字符串为日期\r\nconst strToDate = (dateStr) => {\r\n  let year = parseInt(dateStr.substring(0, 4));\r\n  let month = parseInt(dateStr.substring(5, 7));\r\n  let date = parseInt(dateStr.substring(8, 10));\r\n  // console.log(year, month, date);\r\n  let dateDate = new Date(year, month - 1, date, 0, 0, 0, 0);\r\n  console.log('strToDate dateStr=', dateStr, ', dateDate=', dateDate);\r\n  return dateDate;\r\n}\r\n\r\n// 从后台获取数据\r\nconst fetchData = async () => {\r\n  // 转换日期为字符串\r\n  let dateStr = dateToStr(queryForm.selectedDate);\r\n  let realQueryForm = {\r\n    doctorId: queryForm.doctorId,\r\n    selectedDate: dateStr,\r\n  }\r\n  let url = '/api/bsns/schedules/listByDoctorId?' + qs.stringify(realQueryForm);\r\n  console.log('url=', url);\r\n  // 从后台获取数据\r\n  let res = await AxiosUtil.get(url);\r\n  console.log(\"更新排班列表 res= \", res);\r\n  if (res.data.code == 20010) {\r\n    // 转换字符串为日期\r\n    let scheduleList = [];\r\n    res.data.scheduleList.forEach(schedule => {\r\n      schedule.date = strToDate(schedule.date);\r\n      scheduleList.push(schedule);\r\n    });\r\n    // 更新日历数据\r\n    scheduleData.value = scheduleList;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\nfetchData();\r\n\r\n// 当选定日期变化时，重新计算日历的起止日期\r\nwatch(queryForm, (newValue, oldValue) => {\r\n  console.log('watch queryForm.selectedDate=', newValue.selectedDate);\r\n  let start = new Date(newValue.selectedDate.getTime() - 1000 * 60 * 60 * 24 * newValue.selectedDate.getDay());\r\n  let end = new Date(newValue.selectedDate.getTime() + 1000 * 60 * 60 * 24 * (6 - newValue.selectedDate.getDay()));\r\n  // 更新日历的起止日期\r\n  dateRange.value = [start, end];\r\n  console.log(Date.now() + ' 重新拉取数据...');\r\n  console.log(queryForm);\r\n  fetchData();\r\n}, {deep: true});\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"index\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*操作台*/\r\n.operatingFloor {\r\n  /*display: flex;*/\r\n  /*align-items: center; !*align-items 属性可以使元素在交叉轴方向对齐*!*/\r\n  /*justify-content: flex-start; !*justify-content属性用来使元素在主轴方向上对齐*!*/\r\n  height: 48px;\r\n  padding: 8px 10px;\r\n\r\n}\r\n\r\n.el-tag--small {\r\n  margin-left: 5px;\r\n}\r\n\r\n.is-selected {\r\n  color: #1989fa;\r\n}\r\n\r\n.weekViewCellHeight {\r\n  color: #ff4949;\r\n}\r\n\r\n#mainView :deep(.el-calendar-table .el-calendar-day) {\r\n  /*height: var(--el-calendar-cell-width);*/\r\n  height: auto;\r\n  /*height: 200px;*/\r\n  cursor: auto;\r\n}\r\n\r\n#mainView :deep(.el-card) {\r\n  /*margin-top: 1px;*/\r\n  margin: 5px 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n#mainView :deep(.el-card__body) {\r\n  /*padding: var(--el-card-padding);*/\r\n  padding: 5px 5px;\r\n  text-align: center;\r\n}\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=0fc50e16&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0fc50e16\"]])\n\nexport default __exports__"],"names":["name","userInfo","ref","store","scheduleData","queryForm","reactive","doctorId","value","personId","selectedDate","Date","nowDate","dateRange","getTime","getDay","calendar","handlePreviousWeek","handleNextWeek","selectDate","val","getDateData","date","time","curYear","getFullYear","curMonth","getMonth","curDate","getDate","dateData","schedule","push","dateToStr","dateDate","year","month","dateStr","console","log","strToDate","parseInt","substring","fetchData","async","realQueryForm","url","qs","res","AxiosUtil","data","code","scheduleList","forEach","ElMessage","message","msg","type","watch","newValue","oldValue","start","end","now","deep","__exports__"],"sourceRoot":""}