{"version":3,"file":"js/783.475a1c12.js","mappings":"8PA8PA,EAAe,CACbA,KAAM,c,6MA3LFC,GAAoBC,EAAAA,EAAAA,IAAS,CAEjCC,MACE,OAAOC,EAAMH,iBACd,EACDI,IAAIC,GACFC,EAAK,2BAA4BD,EAClC,IAIGE,GAAWC,EAAAA,EAAAA,IAAI,CACnBC,IAAK,EACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,UAAU,EACVC,KAAM,GACNC,WAAY,CACVjB,KAAM,GACNkB,KAAM,GACNC,SAAKC,EACLC,KAAK,EACLN,UAAU,KAKRO,GAAUb,EAAAA,EAAAA,IAAI,CAClBc,MAAOC,EAAAA,EAAAA,QAAAA,YAIHC,EAAeC,MAAOC,EAAMC,EAAOC,KAIvC,IAAIC,EAEJ,GAAkB,YAAdH,EAAKI,MACHH,GAASA,EAAMI,OAAS,GAC1BH,EAAS,IAAII,MAAM,iBAEnBH,EAAM,kCAAoCtB,EAASoB,MAAMlB,GAAK,aAAekB,OAE1E,GAAkB,kBAAdD,EAAKI,MAA2B,CACzC,IAAIG,EAAU,+EACTA,EAAQC,KAAKP,GAGhBE,EAAM,kCAAoCtB,EAASoB,MAAMlB,GAAK,QAAUkB,EAFxEC,EAAS,IAAII,MAAM,aAItB,CAED,GAAIH,EAAK,CACP,IAAIM,QAAYC,EAAAA,GAAAA,KAAeP,GACV,GAAjBM,EAAIE,KAAKC,KACXV,EAAS,IAAII,MAAMG,EAAIE,KAAKE,MAE5BX,GAEH,GAIGY,GAAgBC,EAAAA,EAAAA,IAAS,CAC7B9B,SAAU,CACR,CAAC+B,UAAU,EAAMC,QAAS,UAAWC,QAAS,QAC9C,CAACC,UAAWrB,EAAcoB,QAAS,UACnC,CAACC,UAAWrB,EAAcoB,QAAS,SAErC,iBAAkB,CAChB,CAACF,UAAU,EAAMC,QAAS,UAAWC,QAAS,QAC9C,CAACC,UAAWrB,EAAcoB,QAAS,UACnC,CAACC,UAAWrB,EAAcoB,QAAS,SAErC7B,KAAM,CACJ,CAAC2B,UAAU,EAAOI,IAAK,IAAKH,QAAS,iBAAkBC,QAAS,WAK9DG,GAAcvC,EAAAA,EAAAA,IAAI,MAGlBwC,EAAsB,CAACb,EAAKc,KAGhCC,QAAQC,IAAI,cAAeF,GAC3BC,QAAQC,IAAI,OAAQhB,GACJ,GAAZA,EAAIG,KACN/B,EAASoB,MAAMjB,QAAUyB,EAAIiB,aAE7BC,EAAAA,EAAAA,IAAU,CACRV,QAASR,EAAII,IACbe,KAAM,SAET,EAIGC,EAAsBC,IAC1BN,QAAQC,IAAI,WAAYK,GACH,eAAjBA,EAAQF,MAA0C,cAAjBE,EAAQF,MAC3CD,EAAAA,GAAAA,MAAgB,0BACT,KACEG,EAAQC,KAAO,KAAO,OAC/BJ,EAAAA,GAAAA,MAAgB,oBACT,IAMLK,EAAcjC,UAClB,IAAIU,QAAYC,EAAAA,GAAAA,IAAc,qBAAuB3B,GAErD,GADAyC,QAAQC,IAAIhB,EAAIE,MACK,OAAjBF,EAAIE,KAAKC,KAAe,CAC1B,IAAIqB,EAAOxB,EAAIE,KAAKsB,KAEpBpD,EAASoB,MAAQgC,CAClB,MACCN,EAAAA,EAAAA,IAAU,CACRV,QAASR,EAAIE,KAAKE,IAClBe,KAAM,UAGVJ,QAAQC,IAAI,WAAZ,EAIIS,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,oBAChBC,MAAK,KACJF,GAAM,IAEPG,OAAM,QAJX,EAUIC,EAAe,KACnBjE,EAAkB2B,OAAQ,CAA1B,EAIIuC,EAAgB,KAEpBnB,EAAYpB,MAAMwC,UAAS1C,UACzB,GAAI2C,EAAO,CAET,IAAIvC,EAAKM,EACTe,QAAQC,IAAI,WACZtB,EAAM,oBACNM,QAAYC,EAAAA,GAAAA,IAAcP,EAAKtB,EAASoB,OACxCuB,QAAQC,IAAI,kBAAmBhB,EAAIE,MACd,OAAjBF,EAAIE,KAAKC,MAAkC,OAAjBH,EAAIE,KAAKC,OACrCe,EAAAA,EAAAA,IAAU,CACRV,QAASR,EAAIE,KAAKE,IAClBe,KAAM,YAERhD,EAAK,gBACL2D,MAEAZ,EAAAA,EAAAA,IAAU,CACRV,QAASR,EAAIE,KAAKE,IAClBe,KAAM,SAGX,IArBH,E,OA0BFe,EAAAA,EAAAA,IAAMrE,GAAoBK,IACR,GAAZA,GACFqD,EAAYvD,EAAMM,GACnB,I,86DChPH,MAAM6D,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://hosp/./src/views/center/info/EditDialog.vue","webpack://hosp/./src/views/center/info/EditDialog.vue?d0ea"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"editDialogVisible\" title=\"编辑用户信息\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"头像\" prop=\"profile\" style=\"width: 48%;\">\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            :headers=\"headers\"\r\n            :action=\"getServerUrl()+'/api/center/users/uploadProfile'\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n        >\r\n          <img :src=\"getServerUrl()+'/image/userProfile/'+editForm.profile\" class=\"avatar\"/>\r\n          <!--          <el-icon v-else class=\"avatar-uploader-icon\"><Plus /></el-icon>-->\r\n        </el-upload>\r\n        <!--        <el-input v-model=\"editForm.profile\"/>-->\r\n      </el-form-item>\r\n      <el-form-item label=\"用户名\" prop=\"username\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.username\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"personInfo.tel\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.personInfo.tel\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"note\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.note\" type=\"textarea\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil, {getServerUrl} from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\nimport store from '@/store';\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  profile: '',\r\n  username: '',\r\n  password: '',\r\n  rePassword: '',\r\n  disabled: false,\r\n  note: '',\r\n  personInfo: {\r\n    name: '',\r\n    idNo: '',\r\n    tel: undefined,\r\n    sex: false,\r\n    disabled: false,\r\n  },\r\n});\r\n\r\n// 定义头像组件上传的请求头部（否则在后端无法正常拦截请求，导致直接认证失败）\r\nconst headers = ref({\r\n  token: store.getters.GET_TOKEN\r\n})\r\n\r\n// 定义自定义表单验证规则\r\nconst validateUser = async (rule, value, callback) => {\r\n  // console.log(rule.field)\r\n  // console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'username') {\r\n    if (value && value.length > 16) {\r\n      callback(new Error('用户名长度不可超过16位'));\r\n    } else {\r\n      url = '/api/center/users/checkUser?id=' + editForm.value.id + '&username=' + value;\r\n    }\r\n  } else if (rule.field == 'personInfo.tel') {\r\n    let pattern = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的手机号'));\r\n    } else {\r\n      url = '/api/center/users/checkUser?id=' + editForm.value.id + '&tel=' + value;\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  if (url) {\r\n    let res = await AxiosUtil.post(url);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  username: [\r\n    {required: true, message: '用户名不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  \"personInfo.tel\": [\r\n    {required: true, message: '手机号不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  note: [\r\n    {required: false, max: 192, message: '备注信息不可超过192个字符', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 文件上传成功时的钩子\r\nconst handleAvatarSuccess = (res, uploadFile) => {\r\n  // console.log(uploadFile.raw);\r\n  // console.log(URL.createObjectURL(uploadFile.raw));\r\n  console.log('uploadFile=', uploadFile);\r\n  console.log('res=', res);\r\n  if (res.code == 0) {\r\n    editForm.value.profile = res.newFileName;\r\n  } else {\r\n    ElMessage({\r\n      message: res.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 上传文件之前的钩子，参数为上传的文件， 若返回false或者返回 Promise 且被 reject，则停止上传。\r\nconst beforeAvatarUpload = (rawFile) => {\r\n  console.log('rawFile=', rawFile);\r\n  if (rawFile.type !== 'image/jpeg' && rawFile.type !== 'image/png') {\r\n    ElMessage.error('图片格式必须为 JPG 或 PNG 格式！');\r\n    return false;\r\n  } else if (rawFile.size / 1024 > 500) {\r\n    ElMessage.error('文件大小不能超过 500KB！');\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  let res = await AxiosUtil.get('/api/center/users/' + id);\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let user = res.data.user;\r\n    // 更新表格数据\r\n    editForm.value = user;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n  console.log('从后台填充...');\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交修改...');\r\n      url = '/api/center/users';\r\n      res = await AxiosUtil.put(url, editForm.value);\r\n      console.log(\"修改用户 res.data= \", res.data);\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.avatar-uploader .avatar {\r\n  width: 96px;\r\n  height: 96px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed var(--el-border-color);\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n</style>\r\n","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditDialog.vue?vue&type=style&index=0&id=bf29f8d0&lang=scss&scoped=true\"\nimport \"./EditDialog.vue?vue&type=style&index=1&id=bf29f8d0&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bf29f8d0\"]])\n\nexport default __exports__"],"names":["name","editDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","profile","username","password","rePassword","disabled","note","personInfo","idNo","tel","undefined","sex","headers","token","store","validateUser","async","rule","value","callback","url","field","length","Error","pattern","test","res","AxiosUtil","data","code","msg","editFormRules","reactive","required","message","trigger","validator","max","editFormRef","handleAvatarSuccess","uploadFile","console","log","newFileName","ElMessage","type","beforeAvatarUpload","rawFile","size","handleReset","user","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","watch","__exports__"],"sourceRoot":""}