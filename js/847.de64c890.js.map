{"version":3,"file":"js/847.de64c890.js","mappings":"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","sources":["webpack://hosp/./src/views/RegisterDialog.vue","webpack://hosp/./src/views/RegisterDialog.vue?7d11"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"registerDialogVisible\" title=\"用户注册\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"用户名\" prop=\"username\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.username\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"姓名\" prop=\"personInfo.name\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.personInfo.name\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"身份证号\" prop=\"personInfo.idNo\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.personInfo.idNo\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"personInfo.tel\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.personInfo.tel\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\" prop=\"personInfo.sex\" style=\"width: 48%;\">\r\n        <el-switch\r\n            v-model=\"editForm.personInfo.sex\"\r\n            style=\"--el-switch-on-color:  #f89898; --el-switch-off-color: #409EFF\"\r\n            :active-icon=\"Female\"\r\n            :inactive-icon=\"Male\"\r\n            :active-value=\"true\"\r\n            :inactive-value=\"false\"\r\n            width=\"50px\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.password\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"rePassword\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.rePassword\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {Male, Female} from '@element-plus/icons-vue';\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  registerDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:registerDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“注册”对话框的显示状态\r\nconst registerDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.registerDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:registerDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  // profile: '',\r\n  username: '',\r\n  password: '',\r\n  rePassword: '',\r\n  disabled: false,\r\n  note: '',\r\n  personInfo: {\r\n    name: '',\r\n    idNo: '',\r\n    tel: undefined,\r\n    sex: false,\r\n    disabled: false,\r\n  },\r\n});\r\n\r\nconst validateUser = async (rule, value, callback) => {\r\n  // console.log(rule.field)\r\n  // console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'username') {\r\n    if (value && value.length > 16) {\r\n      callback(new Error('用户名长度不可超过16位'));\r\n    } else {\r\n      url = '/api/center/users/checkUser?id=' + editForm.value.id + '&username=' + value;\r\n    }\r\n  } else if (rule.field == 'personInfo.idNo') {\r\n    let pattern = /^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的身份证号'));\r\n    } else {\r\n      url = '/api/center/users/checkUser?id=' + editForm.value.id + '&idNo=' + value;\r\n    }\r\n  } else if (rule.field == 'personInfo.tel') {\r\n    let pattern = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的手机号'));\r\n    } else {\r\n      url = '/api/center/users/checkUser?id=' + editForm.value.id + '&tel=' + value;\r\n    }\r\n  } else if (rule.field == 'rePassword') {\r\n    if (value != editForm.value.password) {\r\n      callback(new Error('两次密码输入不一致'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  // console.log(url);\r\n  if (url) {\r\n    // console.log('向后台发送请求');\r\n    let res = await AxiosUtil.post(url);\r\n    // console.log(res.data);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  username: [\r\n    {required: true, message: '用户名不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  password: [\r\n    {required: true, message: '密码不能为空', trigger: 'blur'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'change'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'blur'},\r\n  ],\r\n  rePassword: [\r\n    {required: true, message: '请再次输入密码', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  disabled: [\r\n    {required: true, message: '状态不能为空', trigger: 'blur'},\r\n  ],\r\n  \"personInfo.name\": [\r\n    {required: true, message: '姓名不能为空', trigger: 'blur'},\r\n    {min: 2, max: 16, message: '请输入正确的姓名', trigger: 'change'},\r\n    {min: 2, max: 16, message: '请输入正确的姓名', trigger: 'blur'},\r\n  ],\r\n  \"personInfo.idNo\": [\r\n    {required: true, message: '身份证号不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  \"personInfo.tel\": [\r\n    {required: true, message: '手机号不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  \"personInfo.sex\": [\r\n    {required: true, message: '请输入性别', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async () => {\r\n  editForm.value = {\r\n    id: -1,\r\n    // profile: '',\r\n    username: '',\r\n    password: '',\r\n    rePassword: '',\r\n    disabled: false,\r\n    note: '',\r\n    personInfo: {\r\n      name: '',\r\n      idNo: '',\r\n      tel: undefined,\r\n      sex: false,\r\n      disabled: false,\r\n    },\r\n  };\r\n  console.log('清空表单...');\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  registerDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交新增...');\r\n      url = '/api/center/users/register';\r\n      res = await AxiosUtil.post(url, editForm.value);\r\n      console.log(\"新增用户 res.data= \", res.data);\r\n\r\n      if (res.data.code == 20020) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(registerDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset();\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"RegisterDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./RegisterDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RegisterDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","registerDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","username","password","rePassword","disabled","note","personInfo","idNo","tel","undefined","sex","validateUser","async","rule","value","callback","url","field","length","Error","pattern","test","res","AxiosUtil","data","code","msg","editFormRules","reactive","required","message","trigger","validator","min","max","editFormRef","handleReset","console","log","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","ElMessage","type","watch","__exports__"],"sourceRoot":""}