{"version":3,"file":"js/871.3665ee33.js","mappings":"gQA6IA,EAAe,CACbA,KAAM,c,6MA5FFC,GAAoBC,EAAAA,EAAAA,IAAS,CAEjCC,MACE,OAAOC,EAAMH,iBACd,EACDI,IAAIC,GACFC,EAAK,2BAA4BD,EAClC,IAIGE,GAAWC,EAAAA,EAAAA,IAAI,CACnBC,IAAK,EACLC,OAAQ,KAIJC,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BF,OAAQ,CACN,CAACG,UAAU,EAAMC,QAAS,QAASC,QAAS,QAC5C,CAACC,IAAK,IAAKF,QAAS,iBAAkBC,QAAS,WAK7CE,GAAcT,EAAAA,EAAAA,IAAI,MAGlBU,EAAcC,UAClB,IAAIC,QAAYC,EAAAA,GAAAA,IAAc,4BAA8BlB,EAAMM,IAElE,GADAa,QAAQC,IAAIH,EAAII,MACK,OAAjBJ,EAAII,KAAKC,KAAe,CAC1B,IAAIC,EAAcN,EAAII,KAAKE,YAE3BnB,EAASoB,MAAQ,CACflB,GAAIN,EAAMM,GACVC,OAAQgB,EAAYhB,OAEvB,MACCkB,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,UAGVR,QAAQC,IAAI,WAAZ,EAIIQ,EAAe,KACnB/B,EAAkB2B,OAAQ,CAA1B,EAIIK,EAAgB,KAEpBf,EAAYU,MAAMM,UAASd,UACzB,GAAIe,EAAO,CAET,IAAIC,EAAKf,EACTE,QAAQC,IAAI,WACZY,EAAM,2BACNf,QAAYC,EAAAA,GAAAA,IAAcc,EAAK5B,EAASoB,OACxCL,QAAQC,IAAI,oBAAqBH,EAAII,MAChB,OAAjBJ,EAAII,KAAKC,OACXG,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,YAERxB,EAAK,gBACLyB,MAEAH,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,SAGX,IArBH,E,OA0BFM,EAAAA,EAAAA,IAAMpC,GAAoBK,IACR,GAAZA,GACFa,GACD,I,66BCnIH,MAAMmB,EAAc,EAEpB,O,8eCuMA,EAAe,CACbtC,KAAM,S,gCA7DR,MAAMuC,GAAW9B,EAAAA,EAAAA,IAAI+B,EAAAA,EAAAA,QAAAA,cAGfC,GAAkBhC,EAAAA,EAAAA,IAAI,IAGtBiC,GAASjC,EAAAA,EAAAA,KAAK,GAGdR,GAAoBQ,EAAAA,EAAAA,KAAI,GAGxBkC,EAAcjC,IAClBa,QAAQC,IAAI,UAAWd,GACvBT,EAAkB2B,OAAQ,EAC1Bc,EAAOd,MAAQlB,CAAf,EAIIkC,EAAexB,UACnBG,QAAQC,IAAI,UAAWd,GACvB,IAAI0B,EAAM,4BAA8B1B,EACxCa,QAAQC,IAAI,OAAQY,GACpB,IAAIf,QAAYC,EAAAA,GAAAA,IAAcc,GAC9Bb,QAAQC,IAAI,OAAQH,GACC,OAAjBA,EAAII,KAAKC,OACXG,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,kBAEFc,MAENhB,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,SAET,EAIGc,EAAYzB,UAEhB,IAAIC,QAAYC,EAAAA,GAAAA,IAAc,mCAAqCiB,EAASX,MAAMlB,IAClFa,QAAQC,IAAI,eAAgBH,GACP,OAAjBA,EAAII,KAAKC,KAEXe,EAAgBb,MAAQP,EAAII,KAAKgB,iBAEjCZ,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,SAET,E,OAGHc,I,ikICjMA,MAAMP,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://hosp/./src/views/center/appointment/EditDrawer.vue","webpack://hosp/./src/views/center/appointment/EditDrawer.vue?f025","webpack://hosp/./src/views/center/appointment/index.vue","webpack://hosp/./src/views/center/appointment/index.vue?abd9"],"sourcesContent":["<template>\r\n  <el-drawer v-model=\"editDrawerVisible\" direction=\"rtl\">\r\n    <template #header>\r\n      <h4>写评价</h4>\r\n    </template>\r\n    <template #default>\r\n      <el-form\r\n          ref=\"editFormRef\"\r\n          :model=\"editForm\"\r\n          :rules=\"editFormRules\"\r\n          label-width=\"0px\"\r\n          label-position=\"right\"\r\n      >\r\n        <el-form-item label=\"\" prop=\"remark\" style=\"width: 100%;\">\r\n          <el-input v-model=\"editForm.remark\" type=\"textarea\" :rows=\"5\"/>\r\n        </el-form-item>\r\n      </el-form>\r\n    </template>\r\n    <template #footer>\r\n      <div style=\"flex: auto\">\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">评价</el-button>\r\n      </div>\r\n    </template>\r\n  </el-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDrawerVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDrawerVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”抽屉的显示状态\r\nconst editDrawerVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDrawerVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDrawerVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  remark: '',\r\n});\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  remark: [\r\n    {required: true, message: '请填写评价', trigger: 'blur'},\r\n    {max: 255, message: '评价信息不可超过255个字符', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async () => {\r\n  let res = await AxiosUtil.get('/api/center/appointments/' + props.id);\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let appointment = res.data.appointment;\r\n    // 更新表格数据\r\n    editForm.value = {\r\n      id: props.id,\r\n      remark: appointment.remark,\r\n    };\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n  console.log('从后台填充...');\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDrawerVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交修改...');\r\n      url = '/api/center/appointments';\r\n      res = await AxiosUtil.put(url, editForm.value);\r\n      console.log(\"修改预约订单 res.data= \", res.data);\r\n      if (res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDrawerVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset();\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDrawer\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-container>\r\n    <el-main style=\"padding: 5px; background: aliceblue;\" id=\"mainView\">\r\n      <el-scrollbar>\r\n        <el-card v-for=\"appointment in appointmentList\" :key=\"appointment.id\"\r\n                 style=\"margin: 20px 0 0 20px;width: 700px;\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>{{ appointment.doctorInfo.name }} {{ appointment.departmentInfo.name }}</span>\r\n              <el-popconfirm title=\"您确定要取消该预约吗？\" @confirm=\"handleDelete(appointment.id)\"\r\n                             v-if=\"hasAnyAuthority('center:appointment:delete') && appointment.status==0\">\r\n                <template #reference>\r\n                  <el-button type=\"warning\">取消预约</el-button>\r\n                </template>\r\n              </el-popconfirm>\r\n              <el-button type=\"primary\" v-else-if=\"hasAnyAuthority('center:appointment:edit') && appointment.status==1\"\r\n                         @click=\"handleEdit(appointment.id)\">\r\n                写评价\r\n              </el-button>\r\n            </div>\r\n          </template>\r\n          <el-descriptions\r\n              :column=\"2\"\r\n              size=\"default\"\r\n              border\r\n          >\r\n            <el-descriptions-item>\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <User/>\r\n                  </el-icon>\r\n                  就诊人\r\n                </div>\r\n              </template>\r\n              {{ appointment.patientInfo.name }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item>\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <QuestionFilled/>\r\n                  </el-icon>\r\n                  就诊序号\r\n                </div>\r\n              </template>\r\n              {{ appointment.sequence }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item>\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <Clock/>\r\n                  </el-icon>\r\n                  就诊时间\r\n                </div>\r\n              </template>\r\n              {{ appointment.scheduleInfo.date }}\r\n              {{ appointment.scheduleInfo.time == 0 ? '上午 08:00-12:00' : '下午 14:00-19:00' }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item>\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <Location/>\r\n                  </el-icon>\r\n                  就诊地点\r\n                </div>\r\n              </template>\r\n              {{ appointment.roomInfo.roomNo }}\r\n              {{ appointment.roomInfo.note }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item>\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <InfoFilled/>\r\n                  </el-icon>\r\n                  提交时间\r\n                </div>\r\n              </template>\r\n              {{ appointment.createTime }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item>\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <InfoFilled/>\r\n                  </el-icon>\r\n                  订单状态\r\n                </div>\r\n              </template>\r\n              <span v-if=\"appointment.status==0\" style=\"color: #E6A23C;\">待就诊</span>\r\n              <span v-else-if=\"appointment.status==1\" style=\"color: #67C23A;\">已就诊</span>\r\n              <span v-else-if=\"appointment.status==2\" style=\"color: #F56C6C;\">已取消</span>\r\n              <span v-else-if=\"appointment.status==3\" style=\"color: #909399;\">已过期</span>\r\n            </el-descriptions-item>\r\n            <el-descriptions-item v-if=\"appointment.status==0 && appointment.scheduleInfo.currentSequence>0\">\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <Bicycle/>\r\n                  </el-icon>\r\n                  当前就诊\r\n                </div>\r\n              </template>\r\n              {{ appointment.scheduleInfo.currentSequence }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item v-if=\"appointment.status==1\">\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <EditPen/>\r\n                  </el-icon>\r\n                  详情\r\n                </div>\r\n              </template>\r\n              <el-collapse>\r\n                <el-collapse-item title=\"诊断结果\" name=\"1\">\r\n                  {{ appointment.prescription }}\r\n                </el-collapse-item>\r\n                <el-collapse-item title=\"我的评价\" name=\"2\">\r\n                  {{ appointment.remark }}\r\n                </el-collapse-item>\r\n              </el-collapse>\r\n            </el-descriptions-item>\r\n          </el-descriptions>\r\n        </el-card>\r\n      </el-scrollbar>\r\n    </el-main>\r\n  </el-container>\r\n  <EditDrawer :id=\"editId\" v-model:edit-drawer-visible=\"editDrawerVisible\" @handleSubmit=\"fetchData\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from 'vue'\r\nimport store from '@/store';\r\nimport {User, Clock, Location, QuestionFilled, EditPen, InfoFilled, Bicycle} from '@element-plus/icons-vue'\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport EditDrawer from \"./EditDrawer\";\r\n\r\n\r\n// 定义本地用户信息\r\nconst userInfo = ref(store.getters.GET_USERINFO);\r\n\r\n// 定义预约列表\r\nconst appointmentList = ref([]);\r\n\r\n// 定义传入编辑抽屉的id值\r\nconst editId = ref(-1);\r\n\r\n// 定义编辑抽屉的显示状态\r\nconst editDrawerVisible = ref(false);\r\n\r\n// 处理编辑评价\r\nconst handleEdit = (id) => {\r\n  console.log('编辑评价...', id);\r\n  editDrawerVisible.value = true;\r\n  editId.value = id;\r\n}\r\n\r\n// 处理删除(取消预约)\r\nconst handleDelete = async (id) => {\r\n  console.log('取消预约...', id);\r\n  let url = '/api/center/appointments/' + id;\r\n  console.log('url=', url);\r\n  let res = await AxiosUtil.del(url);\r\n  console.log('res=', res);\r\n  if (res.data.code == 20040) {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'success',\r\n    });\r\n    await fetchData();\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 从后台获取数据\r\nconst fetchData = async () => {\r\n  // 从后台获取数据\r\n  let res = await AxiosUtil.get('/api/center/appointments?userId=' + userInfo.value.id);\r\n  console.log(\"更新预约信息 res= \", res);\r\n  if (res.data.code == 20010) {\r\n    // 更新预约列表\r\n    appointmentList.value = res.data.appointmentList;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\nfetchData();\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"index\"\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n/*操作台*/\r\n.operatingFloor {\r\n  /*display: flex;*/\r\n  /*align-items: center; !*align-items 属性可以使元素在交叉轴方向对齐*!*/\r\n  /*justify-content: flex-start; !*justify-content属性用来使元素在主轴方向上对齐*!*/\r\n  height: 48px;\r\n  padding: 8px 10px;\r\n\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.cell-item {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 110px;\r\n}\r\n\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=685c925a&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-685c925a\"]])\n\nexport default __exports__"],"names":["name","editDrawerVisible","computed","get","props","set","newValue","emit","editForm","ref","id","remark","editFormRules","reactive","required","message","trigger","max","editFormRef","handleReset","async","res","AxiosUtil","console","log","data","code","appointment","value","ElMessage","msg","type","handleCancel","handleConfirm","validate","valid","url","watch","__exports__","userInfo","store","appointmentList","editId","handleEdit","handleDelete","fetchData"],"sourceRoot":""}