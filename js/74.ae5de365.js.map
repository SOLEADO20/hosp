{"version":3,"file":"js/74.ae5de365.js","mappings":"2PA6IA,EAAe,CACbA,KAAM,c,6MA5FFC,GAAoBC,EAAAA,EAAAA,IAAS,CAEjCC,MACE,OAAOC,EAAMH,iBACd,EACDI,IAAIC,GACFC,EAAK,2BAA4BD,EAClC,IAIGE,GAAWC,EAAAA,EAAAA,IAAI,CACnBC,IAAK,EACLC,OAAQ,KAIJC,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BF,OAAQ,CACN,CAACG,UAAU,EAAMC,QAAS,QAASC,QAAS,QAC5C,CAACC,IAAK,IAAKF,QAAS,iBAAkBC,QAAS,WAK7CE,GAAcT,EAAAA,EAAAA,IAAI,MAGlBU,EAAcC,UAClB,IAAIC,QAAYC,EAAAA,GAAAA,IAAc,4BAA8BlB,EAAMM,IAElE,GADAa,QAAQC,IAAIH,EAAII,MACK,OAAjBJ,EAAII,KAAKC,KAAe,CAC1B,IAAIC,EAAcN,EAAII,KAAKE,YAE3BnB,EAASoB,MAAQ,CACflB,GAAIN,EAAMM,GACVC,OAAQgB,EAAYhB,OAEvB,MACCkB,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,UAGVR,QAAQC,IAAI,WAAZ,EAIIQ,EAAe,KACnB/B,EAAkB2B,OAAQ,CAA1B,EAIIK,EAAgB,KAEpBf,EAAYU,MAAMM,UAASd,UACzB,GAAIe,EAAO,CAET,IAAIC,EAAKf,EACTE,QAAQC,IAAI,WACZY,EAAM,2BACNf,QAAYC,EAAAA,GAAAA,IAAcc,EAAK5B,EAASoB,OACxCL,QAAQC,IAAI,oBAAqBH,EAAII,MAChB,OAAjBJ,EAAII,KAAKC,OACXG,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,YAERxB,EAAK,gBACLyB,MAEAH,EAAAA,EAAAA,IAAU,CACRd,QAASM,EAAII,KAAKK,IAClBC,KAAM,SAGX,IArBH,E,OA0BFM,EAAAA,EAAAA,IAAMpC,GAAoBK,IACR,GAAZA,GACFa,GACD,I,66BCnIH,MAAMmB,EAAc,EAEpB,O","sources":["webpack://hosp/./src/views/clinic/appointment/EditDrawer.vue","webpack://hosp/./src/views/clinic/appointment/EditDrawer.vue?082f"],"sourcesContent":["<template>\r\n  <el-drawer v-model=\"editDrawerVisible\" direction=\"rtl\">\r\n    <template #header>\r\n      <h4>写评价</h4>\r\n    </template>\r\n    <template #default>\r\n      <el-form\r\n          ref=\"editFormRef\"\r\n          :model=\"editForm\"\r\n          :rules=\"editFormRules\"\r\n          label-width=\"0px\"\r\n          label-position=\"right\"\r\n      >\r\n        <el-form-item label=\"\" prop=\"remark\" style=\"width: 100%;\">\r\n          <el-input v-model=\"editForm.remark\" type=\"textarea\" :rows=\"5\"/>\r\n        </el-form-item>\r\n      </el-form>\r\n    </template>\r\n    <template #footer>\r\n      <div style=\"flex: auto\">\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">评价</el-button>\r\n      </div>\r\n    </template>\r\n  </el-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDrawerVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDrawerVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”抽屉的显示状态\r\nconst editDrawerVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDrawerVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDrawerVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  remark: '',\r\n});\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  remark: [\r\n    {required: true, message: '请填写评价', trigger: 'blur'},\r\n    {max: 255, message: '评价信息不可超过255个字符', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async () => {\r\n  let res = await AxiosUtil.get('/api/center/appointments/' + props.id);\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let appointment = res.data.appointment;\r\n    // 更新表格数据\r\n    editForm.value = {\r\n      id: props.id,\r\n      remark: appointment.remark,\r\n    };\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n  console.log('从后台填充...');\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDrawerVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交修改...');\r\n      url = '/api/center/appointments';\r\n      res = await AxiosUtil.put(url, editForm.value);\r\n      console.log(\"修改预约订单 res.data= \", res.data);\r\n      if (res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDrawerVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset();\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDrawer\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","editDrawerVisible","computed","get","props","set","newValue","emit","editForm","ref","id","remark","editFormRules","reactive","required","message","trigger","max","editFormRef","handleReset","async","res","AxiosUtil","console","log","data","code","appointment","value","ElMessage","msg","type","handleCancel","handleConfirm","validate","valid","url","watch","__exports__"],"sourceRoot":""}