{"version":3,"file":"js/294.a4aaa3d3.js","mappings":"uWAuQA,EAAe,CACbA,KAAM,c,6gBAnHFC,GAAoBC,EAAAA,EAAAA,IAAS,CAEjCC,MACE,OAAOC,EAAMH,iBACd,EACDI,IAAIC,GACFC,EAAK,2BAA4BD,EAClC,IAIGE,GAAWC,EAAAA,EAAAA,IAAIC,EAAAA,EAAAA,QAAAA,cAGfC,GAAcF,EAAAA,EAAAA,IAAI,IAGlBG,GAAWH,EAAAA,EAAAA,IAAI,CACnBI,IAAK,EACLC,WAAY,EACZC,WAAYX,EAAMY,aAAaH,GAC/BI,OAAQT,EAASU,MAAML,KAInBM,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BN,UAAW,CACT,CAACO,UAAU,EAAMC,QAAS,SAAUC,QAAS,WAK3CC,GAAcf,EAAAA,EAAAA,IAAI,MAGlBgB,EAAcC,UAElB,IAAIC,QAAaC,EAAAA,GAAAA,IAAc,qBAAuBpB,EAASU,MAAML,IACjEgB,QAAaD,EAAAA,GAAAA,IAAc,+BAAiCpB,EAASU,MAAML,IAG/E,GAFAiB,QAAQC,IAAI,eAAgBJ,GAC5BG,QAAQC,IAAI,gBAAiBF,GACP,OAAlBF,EAAKK,KAAKC,MAAmC,OAAlBJ,EAAKG,KAAKC,KAAe,CAEtD,IAAIC,EAAaP,EAAKK,KAAKG,KAAKD,WAC5BE,EAAU,CACZvB,IAAK,EACLI,OAAQU,EAAKK,KAAKG,KAAKtB,GACvBC,UAAWoB,EAAWrB,GACtBwB,SAAU,KACVC,KAAM,IACNC,YAAaL,GAGfvB,EAAYO,MAAQW,EAAKG,KAAKrB,YAC9BA,EAAYO,MAAMsB,QAAQJ,GAE1BxB,EAASM,MAAQ,CACfL,IAAK,EACLC,UAAWoB,EAAWrB,GACtBE,WAAYX,EAAMY,aAAaH,GAC/BI,OAAQT,EAASU,MAAML,GAE1B,MACC4B,EAAAA,EAAAA,IAAU,CACRnB,QAASK,EAAKK,KAAKU,IACnBC,KAAM,SAET,EAIGC,EAAe,KACnB3C,EAAkBiB,OAAQ,CAA1B,EAII2B,EAAgB,KAEpBrB,EAAYN,MAAM4B,UAASpB,UACzB,GAAIqB,EAAO,CAET,IAAIC,EAAKC,EACTnB,QAAQC,IAAI,WACZiB,EAAM,2BACNC,QAAYrB,EAAAA,GAAAA,KAAeoB,EAAKpC,EAASM,OACzCY,QAAQC,IAAI,kBAAmBkB,EAAIjB,MACd,OAAjBiB,EAAIjB,KAAKC,OACXQ,EAAAA,EAAAA,IAAU,CACRnB,QAAS2B,EAAIjB,KAAKU,IAClBC,KAAM,YAERpC,EAAK,gBACLqC,MAEAH,EAAAA,EAAAA,IAAU,CACRnB,QAAS2B,EAAIjB,KAAKU,IAClBC,KAAM,SAGX,IArBH,E,OA0BFO,EAAAA,EAAAA,IAAMjD,GAAoBK,IACR,GAAZA,GACFmB,GACD,I,4tFC1PH,MAAM0B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://hosp/./src/views/center/booking/EditDrawer.vue","webpack://hosp/./src/views/center/booking/EditDrawer.vue?173f"],"sourcesContent":["<template>\r\n  <el-drawer v-model=\"editDrawerVisible\" direction=\"rtl\">\r\n    <template #header>\r\n      <h4>预约 {{ scheduleInfo.departmentInfo.name }} {{ scheduleInfo.doctorInfo.name }}医生</h4>\r\n    </template>\r\n    <template #default>\r\n      <el-descriptions\r\n          title=\"医生信息卡\"\r\n          :column=\"2\"\r\n          size=\"default\"\r\n          border\r\n      >\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <InfoFilled/>\r\n              </el-icon>\r\n              工号\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.workerId }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <InfoFilled/>\r\n              </el-icon>\r\n              姓名\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.doctorInfo.name }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <QuestionFilled/>\r\n              </el-icon>\r\n              性别\r\n            </div>\r\n          </template>\r\n          {{ (scheduleInfo.doctorInfo.sex) == '0' ? '男' : '女' }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <Iphone/>\r\n              </el-icon>\r\n              电话\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.doctorInfo.tel }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <EditPen/>\r\n              </el-icon>\r\n              特长\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.doctorInfo.note }}\r\n        </el-descriptions-item>\r\n      </el-descriptions>\r\n    </template>\r\n    <template #footer>\r\n      <el-form\r\n          ref=\"editFormRef\"\r\n          :model=\"editForm\"\r\n          :rules=\"editFormRules\"\r\n          label-width=\"100px\"\r\n          label-position=\"right\"\r\n          style=\"margin-bottom: 25%;\"\r\n      >\r\n        <el-form-item label=\"选择就诊人\" prop=\"patientId\">\r\n          <el-radio-group v-model=\"editForm.patientId\">\r\n            <el-radio v-for=\"patient in patientList\" :key=\"patient.patientId\" :label=\"patient.patientId\">\r\n              {{ patient.relation }} {{ patient.patientInfo.name }}\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"flex: auto\">\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">预约</el-button>\r\n      </div>\r\n    </template>\r\n  </el-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport store from \"@/store\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDrawerVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  scheduleInfo: {\r\n    type: Object,\r\n    required: true,\r\n    default: () => {\r\n      return {\r\n        id: 6,\r\n        date: \"2022-11-08T16:00:00.000Z\",\r\n        time: 0,\r\n        departmentId: 17,\r\n        roomId: 20,\r\n        workerId: 14,\r\n        capacity: 24,\r\n        departmentInfo: {\r\n          name: \"体检科\",\r\n          id: 17\r\n        },\r\n        roomInfo: {\r\n          id: 20,\r\n          disabled: false,\r\n          deleted: false,\r\n          roomNo: 205,\r\n          departmentId: 17,\r\n          note: \"体检科诊室\",\r\n          departmentInfo: null\r\n        },\r\n        doctorInfo: {\r\n          id: 15,\r\n          name: \"付玉琳\",\r\n          idNo: null,\r\n          sex: true,\r\n          tel: 17788889997,\r\n          note: \"擅长健康检查\"\r\n        }\r\n      };\r\n    }\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDrawerVisible', 'handleSubmit']);\r\n\r\n// 定义“预约”抽屉的显示状态\r\nconst editDrawerVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDrawerVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDrawerVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义本地用户信息\r\nconst userInfo = ref(store.getters.GET_USERINFO);\r\n\r\n// 定义就诊人列表\r\nconst patientList = ref([]);\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  patientId: -1,\r\n  scheduleId: props.scheduleInfo.id,\r\n  userId: userInfo.value.id,\r\n});\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  patientId: [\r\n    {required: true, message: '请选择就诊人', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async () => {\r\n  // 从后台获取数据\r\n  let res1 = await AxiosUtil.get('/api/center/users/' + userInfo.value.id);\r\n  let res2 = await AxiosUtil.get('/api/center/patients?userId=' + userInfo.value.id);\r\n  console.log(\"更新用户信息 res= \", res1);\r\n  console.log(\"更新就诊人信息 res= \", res2);\r\n  if (res1.data.code == 20010 && res2.data.code == 20010) {\r\n    // 为本人构造就诊人数据\r\n    let personInfo = res1.data.user.personInfo;\r\n    let patient = {\r\n      id: -1,\r\n      userId: res1.data.user.id,\r\n      patientId: personInfo.id,\r\n      relation: '本人',\r\n      note: '无',\r\n      patientInfo: personInfo,\r\n    };\r\n    // 更新就诊人列表\r\n    patientList.value = res2.data.patientList;\r\n    patientList.value.unshift(patient);\r\n    // 更新表单数据\r\n    editForm.value = {\r\n      id: -1,\r\n      patientId: personInfo.id,\r\n      scheduleId: props.scheduleInfo.id,\r\n      userId: userInfo.value.id,\r\n    };\r\n  } else {\r\n    ElMessage({\r\n      message: res1.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDrawerVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交新增...');\r\n      url = '/api/center/appointments';\r\n      res = await AxiosUtil.post(url, editForm.value);\r\n      console.log(\"新增预约 res.data= \", res.data);\r\n      if (res.data.code == 20020) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDrawerVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset();\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDrawer\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cell-item {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 42px;\r\n}\r\n</style>","import script from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditDrawer.vue?vue&type=style&index=0&id=34e27b16&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-34e27b16\"]])\n\nexport default __exports__"],"names":["name","editDrawerVisible","computed","get","props","set","newValue","emit","userInfo","ref","store","patientList","editForm","id","patientId","scheduleId","scheduleInfo","userId","value","editFormRules","reactive","required","message","trigger","editFormRef","handleReset","async","res1","AxiosUtil","res2","console","log","data","code","personInfo","user","patient","relation","note","patientInfo","unshift","ElMessage","msg","type","handleCancel","handleConfirm","validate","valid","url","res","watch","__exports__"],"sourceRoot":""}