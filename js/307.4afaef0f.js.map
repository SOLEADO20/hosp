{"version":3,"file":"js/307.4afaef0f.js","mappings":"0OAqKA,EAAe,CACbA,KAAM,wB,iOAjHFC,GAA8BC,EAAAA,EAAAA,IAAS,CAE3CC,MACE,OAAOC,EAAMH,2BACd,EACDI,IAAIC,GACFC,EAAK,qCAAsCD,EAC5C,IAIGE,GAAWC,EAAAA,EAAAA,IAAI,CACnBC,GAAIN,EAAMM,GACVC,YAAa,GACbC,SAAU,GACVC,WAAY,KAGRC,EAAmBC,MAAOC,EAAMC,EAAOC,KACvCD,GAAST,EAASS,MAAML,SAC1BM,EAAS,IAAIC,MAAM,cAEnBD,GACD,EAIGE,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BV,YAAa,CACX,CAACW,UAAU,EAAMC,QAAS,UAAWC,QAAS,SAEhDZ,SAAU,CACR,CAACU,UAAU,EAAMC,QAAS,SAAUC,QAAS,QAC7C,CAACC,IAAK,EAAGC,IAAK,GAAIH,QAAS,mBAAoBC,QAAS,UACxD,CAACC,IAAK,EAAGC,IAAK,GAAIH,QAAS,mBAAoBC,QAAS,SAE1DX,WAAY,CACV,CAACS,UAAU,EAAMC,QAAS,UAAWC,QAAS,QAC9C,CAACG,UAAWb,EAAkBU,QAAS,UACvC,CAACG,UAAWb,EAAkBU,QAAS,WAKrCI,GAAcnB,EAAAA,EAAAA,IAAI,MAGlBoB,EAAcd,UAClBP,EAASS,MAAQ,CACfP,GAAIN,EAAMM,GACVC,YAAa,GACbC,SAAU,GACVC,WAAY,IAEdiB,QAAQC,IAAI,UAAZ,EAIIC,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,oBAChBC,MAAK,KACJF,GAAM,IAEPG,OAAM,QAJX,EAUIC,EAAe,KACnBpC,EAA4BgB,OAAQ,CAApC,EAIIqB,EAAgB,KAEpBV,EAAYX,MAAMsB,UAASxB,UACzB,GAAIyB,EAAO,CAET,IAAIC,EAAKC,EACTZ,QAAQC,IAAI,WACZU,EAAM,mCACNC,QAAYC,EAAAA,GAAAA,IAAcF,EAAKjC,EAASS,OACxCa,QAAQC,IAAI,kBAAmBW,EAAIE,MACd,OAAjBF,EAAIE,KAAKC,MAAkC,OAAjBH,EAAIE,KAAKC,OACrCC,EAAAA,EAAAA,IAAU,CACRvB,QAASmB,EAAIE,KAAKG,IAClBC,KAAM,YAERzC,EAAK,gBACL8B,MAEAS,EAAAA,EAAAA,IAAU,CACRvB,QAASmB,EAAIE,KAAKG,IAClBC,KAAM,SAGX,IArBH,E,OA0BFC,EAAAA,EAAAA,IAAMhD,GAA8BK,IAClB,GAAZA,GACFuB,EAAYzB,EAAMM,GACnB,I,4iDC3JH,MAAMwC,EAAc,EAEpB,O","sources":["webpack://hosp/./src/views/center/info/ChangePasswordDialog.vue","webpack://hosp/./src/views/center/info/ChangePasswordDialog.vue?8c62"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"changePasswordDialogVisible\" title=\"修改密码\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"原密码\" prop=\"oldPassword\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.oldPassword\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"password\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.password\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"rePassword\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.rePassword\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  changePasswordDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:changePasswordDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst changePasswordDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.changePasswordDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:changePasswordDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: props.id,\r\n  oldPassword: '',\r\n  password: '',\r\n  rePassword: '',\r\n});\r\n\r\nconst validatePassword = async (rule, value, callback) => {\r\n  if (value != editForm.value.password) {\r\n    callback(new Error('两次密码输入不一致'));\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  oldPassword: [\r\n    {required: true, message: '原密码不能为空', trigger: 'blur'},\r\n  ],\r\n  password: [\r\n    {required: true, message: '密码不能为空', trigger: 'blur'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'change'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'blur'},\r\n  ],\r\n  rePassword: [\r\n    {required: true, message: '请再次输入密码', trigger: 'blur'},\r\n    {validator: validatePassword, trigger: 'change'},\r\n    {validator: validatePassword, trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  editForm.value = {\r\n    id: props.id,\r\n    oldPassword: '',\r\n    password: '',\r\n    rePassword: '',\r\n  };\r\n  console.log('清空表单...');\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  changePasswordDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交修改...');\r\n      url = '/api/center/users/updatePassword';\r\n      res = await AxiosUtil.put(url, editForm.value);\r\n      console.log(\"修改用户 res.data= \", res.data);\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(changePasswordDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"ChangePasswordDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./ChangePasswordDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChangePasswordDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","changePasswordDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","oldPassword","password","rePassword","validatePassword","async","rule","value","callback","Error","editFormRules","reactive","required","message","trigger","min","max","validator","editFormRef","handleReset","console","log","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","url","res","AxiosUtil","data","code","ElMessage","msg","type","watch","__exports__"],"sourceRoot":""}