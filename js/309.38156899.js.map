{"version":3,"file":"js/309.38156899.js","mappings":"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","sources":["webpack://hosp/./src/views/bsns/worker/EditDialog.vue","webpack://hosp/./src/views/bsns/worker/EditDialog.vue?dc21"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"editDialogVisible\" :title=\"title\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"科室\" prop=\"departmentId\" style=\"width: 48%;\">\r\n        <el-select v-model=\"editForm.departmentId\" placeholder=\"请选择科室\">\r\n          <el-option label=\"顶级科室\" :value=\"0\"/>\r\n          <el-option v-for=\"department in departmentList\" :key=\"department.id\" :label=\"department.name\"\r\n                     :value=\"department.id\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n<!--      <el-form-item label=\"状态\" prop=\"disabled\" style=\"width: 40%;\">-->\r\n<!--        <el-switch-->\r\n<!--            v-model=\"editForm.disabled\"-->\r\n<!--            style=\"&#45;&#45;el-switch-on-color: #13ce66; &#45;&#45;el-switch-off-color: #ff4949\"-->\r\n<!--            active-text=\"启用\"-->\r\n<!--            inactive-text=\"禁用\"-->\r\n<!--            :active-value=\"false\"-->\r\n<!--            :inactive-value=\"true\"-->\r\n<!--            width=\"50px\"-->\r\n<!--            disabled-->\r\n<!--        />-->\r\n<!--      </el-form-item>-->\r\n      <el-form-item label=\"人员\" prop=\"doctorId\" style=\"width: 100%;\">\r\n        <el-autocomplete\r\n            v-model=\"text\"\r\n            :fetch-suggestions=\"querySearchAsync\"\r\n            @select=\"handleSelect\"\r\n            placeholder=\"搜索人员...\"\r\n            :debounce=\"300\"\r\n            highlight-first-item\r\n            clearable\r\n            style=\"width: 100%;\"\r\n        />\r\n      </el-form-item>\r\n      <el-divider content-position=\"center\">所选人员信息</el-divider>\r\n      <el-form-item label=\"姓名\" prop=\"doctorInfo.name\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.name\" disabled/>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"doctorInfo.tel\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.tel\" disabled/>\r\n      </el-form-item>\r\n      <el-form-item label=\"身份证号\" prop=\"doctorInfo.idNo\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.idNo\" disabled/>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\" prop=\"doctorInfo.sex\" style=\"width: 48%;\">\r\n        <el-switch\r\n            v-model=\"editForm.doctorInfo.sex\"\r\n            style=\"--el-switch-on-color:  #f89898; --el-switch-off-color: #409EFF\"\r\n            :active-icon=\"Female\"\r\n            :inactive-icon=\"Male\"\r\n            :active-value=\"true\"\r\n            :inactive-value=\"false\"\r\n            width=\"50px\"\r\n            disabled\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"状态\" prop=\"doctorInfo.disabled\" style=\"width: 40%;\">\r\n        <el-switch\r\n            v-model=\"editForm.doctorInfo.disabled\"\r\n            style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\"\r\n            active-text=\"启用\"\r\n            inactive-text=\"禁用\"\r\n            :active-value=\"false\"\r\n            :inactive-value=\"true\"\r\n            width=\"50px\"\r\n            disabled\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"doctorInfo.note\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.note\" type=\"textarea\" :rows=\"5\" disabled/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\nimport {Male, Female} from '@element-plus/icons-vue'\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n    default: ''\r\n  }\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  departmentId: 0,\r\n  doctorId: -1,\r\n  doctorInfo: {\r\n    id: -1,\r\n    name: '',\r\n    idNo: '',\r\n    sex: false,\r\n    tel: '',\r\n    disabled: false,\r\n    note: '',\r\n  },\r\n  disabled: false,\r\n});\r\n\r\n// 定义临时的查询关键词\r\nconst query = ref('');\r\n\r\n// 定义自动补全输入框内的文本\r\nconst text = ref('');\r\n\r\n// 定义科室列表\r\nconst departmentList = ref([]);\r\n\r\nconst validateWorker = async (rule, value, callback) => {\r\n  console.log(rule.field)\r\n  console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'departmentId') {\r\n    url = '/api/bsns/workers/checkWorker?id=' + editForm.value.id + '&departmentId=' + value + '&doctorId=' + editForm.value.doctorId;\r\n  } else if (rule.field == 'doctorId') {\r\n    if (value && value == -1) {\r\n      callback(new Error('请选择人员'));\r\n    } else {\r\n      url = '/api/bsns/workers/checkWorker?id=' + editForm.value.id + '&departmentId=' + editForm.value.departmentId + '&doctorId=' + value;\r\n    }\r\n  } else if (rule.field == 'doctorInfo.disabled') {\r\n    if (value) {\r\n      callback(new Error('黑名单人员，禁止入职'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  console.log(url);\r\n  if (url) {\r\n    // console.log('向后台发送请求');\r\n    let res = await AxiosUtil.post(url);\r\n    // console.log(res.data);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  departmentId: [\r\n    {required: true, message: '科室不能为空', trigger: 'blur'},\r\n    {validator: validateWorker, trigger: 'change'},\r\n    {validator: validateWorker, trigger: 'blur'},\r\n  ],\r\n  doctorId: [\r\n    {required: true, message: '人员不能为空', trigger: 'blur'},\r\n    {validator: validateWorker, trigger: 'blur'},\r\n  ],\r\n  disabled: [\r\n    {required: true, message: '状态不能为空', trigger: 'blur'},\r\n  ],\r\n  'doctorInfo.disabled': [\r\n    {validator: validateWorker, trigger: 'change'},\r\n    {validator: validateWorker, trigger: 'blur'},\r\n  ]\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  if (id == -1) {\r\n    editForm.value = {\r\n      id: -1,\r\n      departmentId: 0,\r\n      doctorId: -1,\r\n      doctorInfo: {\r\n        id: -1,\r\n        name: '',\r\n        idNo: '',\r\n        sex: false,\r\n        tel: '',\r\n        disabled: false,\r\n        note: '',\r\n      },\r\n      disabled: false,\r\n    };\r\n    console.log('清空表单...');\r\n  } else {\r\n    let res = await AxiosUtil.get('/api/bsns/workers/' + id);\r\n    console.log(res.data);\r\n    if (res.data.code == 20010) {\r\n      let worker = res.data.worker;\r\n      // 更新表单数据\r\n      editForm.value = worker;\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  }\r\n  // 重置查询关键词\r\n  query.value = '';\r\n  text.value = '';\r\n  // 无论是新增还是编辑，都需要向后台请求科室列表\r\n  let res = await AxiosUtil.get('/api/bsns/departments');\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let departments = [];\r\n    res.data.departmentList.forEach(item => {\r\n      item.name = \"+ \" + item.name;\r\n      departments.push(item);\r\n      item.children.forEach(child => {\r\n        child.name = \"••• \" + child.name;\r\n        departments.push(child);\r\n      })\r\n    });\r\n    // 更新科室列表\r\n    departmentList.value = departments;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n    // 清空科室列表\r\n    departmentList.value = [];\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      if (editForm.value.id == -1) {\r\n        console.log('提交新增...');\r\n        url = '/api/bsns/workers';\r\n        res = await AxiosUtil.post(url, editForm.value);\r\n        console.log(\"新增岗位 res.data= \", res.data);\r\n      } else {\r\n        console.log('提交修改...');\r\n        url = '/api/bsns/workers';\r\n        res = await AxiosUtil.put(url, editForm.value);\r\n        console.log(\"修改岗位 res.data= \", res.data);\r\n      }\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// 处理自动补全输入框的选择事件\r\nconst handleSelect = (item) => {\r\n  console.log(item);\r\n  // 还原自动补全输入框内的文本\r\n  text.value = query.value;\r\n  // 更新表单数据中的医生身份ID\r\n  editForm.value.doctorId = item.personInfo.id;\r\n  // 更新已选择身份的预览信息\r\n  editForm.value.doctorInfo = item.personInfo;\r\n  console.log(editForm.value);\r\n}\r\n\r\n// 当输入的查询关键词发生变化时，重新从后台拉取身份信息\r\nlet timeout = null; // 定义计时器\r\nconst querySearchAsync = (queryString, callback) => {\r\n  console.log('queryString=', queryString);\r\n  // 重置计时器\r\n  clearTimeout(timeout);\r\n  // 延迟返回结果，减轻服务器压力\r\n  timeout = setTimeout(async () => {\r\n    try {\r\n      // 备份查询关键词\r\n      query.value = queryString;\r\n      // 拉取身份信息\r\n      let res = await AxiosUtil.get('/api/sys/persons?pageSize=50&currentPage=1&query=' + queryString);\r\n      console.log(res.data);\r\n      if (res.data.code == 20010) {\r\n        let personList = [];\r\n        res.data.personList.forEach(item => {\r\n          let person = {\r\n            value: item.name + ' . ' + (item.sex == '0' ? '男' : '女') + ' . ' + item.tel + ' . ' + item.idNo,\r\n            personInfo: item,\r\n          };\r\n          personList.push(person);\r\n        });\r\n        callback(personList);\r\n      } else {\r\n        callback();\r\n      }\r\n    } catch (e) {\r\n      ElMessage({\r\n        message: e,\r\n        type: 'error',\r\n      });\r\n      callback();\r\n    }\r\n  }, 300 * Math.random());\r\n}\r\n\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","editDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","departmentId","doctorId","doctorInfo","idNo","sex","tel","disabled","note","query","text","departmentList","validateWorker","async","rule","value","callback","url","console","log","field","Error","res","AxiosUtil","data","code","msg","editFormRules","reactive","required","message","trigger","validator","editFormRef","handleReset","worker","ElMessage","type","departments","forEach","item","push","children","child","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","handleSelect","personInfo","timeout","querySearchAsync","queryString","clearTimeout","setTimeout","personList","person","e","Math","random","watch","__exports__"],"sourceRoot":""}