{"version":3,"file":"js/89.cf67d0ad.js","mappings":"6eA2NA,EAAe,CACbA,KAAM,e,iCAtJMC,EAAAA,EAAAA,MAAd,MAGMC,GAAqBC,EAAAA,EAAAA,KAAI,GAIzBC,GAAYC,EAAAA,EAAAA,IAAS,CACzBC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,YAAY,EACZC,KAAM,KAIFC,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,SAChBC,MAAK,KACJF,IACAG,EAAAA,EAAAA,QAAe,CAACC,KAAMC,EAAAA,EAAAA,MAAAA,mBAAtB,IAEDC,OAAM,QALX,EAWF,IAAIC,GAAqBhB,EAAAA,EAAAA,IAAI,IAG7B,MAAMiB,GAAiBf,EAAAA,EAAAA,IAAS,CAC9BC,SAAU,CAAC,CAACe,UAAU,EAAMC,QAAS,UAAWC,QAAS,SACzDhB,SAAU,CAAC,CAACc,UAAU,EAAMC,QAAS,UAAWC,QAAS,SACzDf,aAAc,CAAC,CAACa,UAAU,EAAMC,QAAS,SAAUC,QAAS,aAIxDC,EAAkBC,UACtB,IAAIC,QAAYC,EAAAA,GAAAA,IAAc,YAC9BC,QAAQC,IAAI,gBAAiBH,GAC7BtB,EAAUM,KAAOgB,EAAII,KAAKpB,KAC1BN,EAAUI,aAAe,GACzBW,EAAmBY,MAAQL,EAAII,KAAKE,SAApC,EAIIC,GAAe9B,EAAAA,EAAAA,IAAI,MAGnB+B,GAAwB/B,EAAAA,EAAAA,KAAI,GAG5BgC,EAAc,KAClBP,QAAQC,IAAI,UACZD,QAAQC,IAAI,uBAAwBI,EAAaF,OAGjDE,EAAaF,MAAMK,UAASX,UAG1B,GAFAG,QAAQC,IAAI,UAAWQ,GAEnBA,EAAO,CACTT,QAAQC,IAAI,UAERzB,EAAUK,YACZmB,QAAQC,IAAI,QACZS,EAAAA,EAAAA,IAAY,WAAYlC,EAAUE,SAAU,CAACiC,QAAS,IACtDD,EAAAA,EAAAA,IAAY,YAAYE,EAAAA,EAAAA,GAAQpC,EAAUG,SAAU,CAACgC,QAAS,KAC9DD,EAAAA,EAAAA,IAAY,aAAclC,EAAUK,WAAY,CAAC8B,QAAS,MAE1DX,QAAQC,IAAI,SACZS,EAAAA,EAAAA,OAAe,YACfA,EAAAA,EAAAA,OAAe,YACfA,EAAAA,EAAAA,OAAe,eAIjB,IACE,IAAIZ,QAAYC,EAAAA,GAAAA,KAAe,QAASc,IAAAA,UAAarC,IACrD,GAAqB,KAAjBsB,EAAII,KAAKY,KAAa,CACxBd,QAAQC,IAAI,aAAcH,EAAII,MAC9B,MAAMa,EAAQjB,EAAII,KAAKc,cACjBC,EAAWnB,EAAII,KAAKe,SACpBC,EAAQpB,EAAII,KAAKgB,MACjBC,EAAcrB,EAAII,KAAKiB,YAE7B9B,EAAAA,EAAAA,OAAa,YAAa0B,GAC1B1B,EAAAA,EAAAA,OAAa,eAAgB4B,GAC7B5B,EAAAA,EAAAA,OAAa,YAAa6B,GAC1B7B,EAAAA,EAAAA,OAAa,eAAgB8B,GAK7BhC,EAAAA,EAAAA,QAAe,CAACC,KAAMC,EAAAA,EAAAA,MAAAA,qBACtB+B,EAAAA,EAAAA,IAAU,CACR1B,QAAS,QACT2B,KAAM,WAET,MACCD,EAAAA,EAAAA,IAAU,CACRE,WAAW,EACX5B,QAASI,EAAII,KAAKqB,IAClBF,KAAM,gBAEFzB,GAUT,CARC,MAAO4B,GACPxB,QAAQC,IAAI,YAAauB,IACzBJ,EAAAA,EAAAA,IAAU,CACRE,WAAW,EACX5B,QAAS,cAAgB8B,EACzBH,KAAM,gBAEFzB,GACP,CACF,MACCI,QAAQC,IAAI,YACZmB,EAAAA,EAAAA,IAAU,CACR1B,QAAS,WACT2B,KAAM,WAET,GAhEH,EAqEII,EAAiB,KACrBzB,QAAQC,IAAI,aACZK,EAAsBH,OAAQ,CAA9B,EAIIuB,EAAe,KACnB,MAAMhD,EAAWgC,EAAAA,EAAAA,IAAY,YACvB/B,EAAW+B,EAAAA,EAAAA,IAAY,YACvB7B,EAAa6B,EAAAA,EAAAA,IAAY,cAC/BlC,EAAUE,cAAuBiD,GAAZjD,EAAwBF,EAAUE,SAAWA,EAClEF,EAAUG,cAAuBgD,GAAZhD,EAAwBH,EAAUG,UAAWiD,EAAAA,EAAAA,GAAQjD,GAC1EH,EAAUK,gBAA2B8C,GAAd9C,EAA0BL,EAAUK,WAAaA,CAAxE,E,OAIFe,IACA8B,I,63EChNA,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://hosp/./src/views/LoginDialog.vue","webpack://hosp/./src/views/LoginDialog.vue?3661"],"sourcesContent":["<template>\r\n  <!--TODO <el-dialog v-model=\"loginDialogVisible\" title=\"请登录\" :before-close=\"handleClose\" width=\"700px\" center draggable>-->\r\n  <el-dialog v-model=\"loginDialogVisible\" title=\"请登录\" :before-close=\"handleClose\" width=\"750px\" center draggable>\r\n    <div class=\"loginPage\">\r\n      <el-form :model=\"loginForm\" :rules=\"loginFormRules\" ref=\"loginFormRef\" class=\"loginForm\">\r\n\r\n        <h3 class=\"formTitle\">科旺医院 门诊服务</h3>\r\n\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginForm.username\" type=\"text\" size=\"large\" autocomplete=\"off\"\r\n                    placeholder=\"用户名 / 手机号 / 身份证号\" :prefix-icon=\"User\"/>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginForm.password\" type=\"password\" size=\"large\" autocomplete=\"off\" placeholder=\"密码\"\r\n                    :prefix-icon=\"Lock\" @keyup.enter=\"handleLogin\" show-password/>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"securityCode\">\r\n          <el-input v-model=\"loginForm.securityCode\" type=\"text\" size=\"large\" autocomplete=\"off\" placeholder=\"验证码\"\r\n                    :prefix-icon=\"CircleCheck\" @keyup.enter=\"handleLogin\" style=\"width: 67%;\"/>\r\n          <div class=\"securityCodeWrapper\">\r\n            <img :src=\"securityCodeImgUrl\" @click=\"getSecurityCode\" alt=\"刷新验证码\"/>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-checkbox label=\"记住密码\" v-model=\"loginForm.rememberMe\"/>\r\n        </el-form-item>\r\n\r\n        <el-form-item style=\"width: 100%;\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleRegister\"\r\n                     style=\"width: auto; margin: auto; letter-spacing: 1px;\" text>&gt;&gt;注\r\n            册&lt;&lt;\r\n          </el-button>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" size=\"large\" @click=\"handleLogin\" style=\"width: 100%;\">登 录</el-button>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <Footer class=\"loginPageFooter\"/>\r\n    </div>\r\n    <!--    <template #footer>-->\r\n    <!--      <span class=\"dialog-footer\">-->\r\n    <!--        <el-button @click=\"handleReset(id)\">重置</el-button>-->\r\n    <!--        <el-button @click=\"handleCancel\">取消</el-button>-->\r\n    <!--        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>-->\r\n    <!--      </span>-->\r\n    <!--    </template>-->\r\n  </el-dialog>\r\n  <RegisterDialog v-model:register-dialog-visible=\"registerDialogVisible\"/>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref} from 'vue'\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport Footer from \"@/components/layout/Footer\";\r\nimport Cookies from 'js-cookie';\r\nimport {User, Lock, CircleCheck} from '@element-plus/icons-vue'\r\nimport {encrypt, decrypt} from \"@/utils/JSEncryptUtil\";\r\nimport qs from \"qs\";\r\nimport store from '@/store'\r\nimport router from \"@/router\";\r\nimport {ElMessage, ElMessageBox} from \"element-plus\";\r\nimport {useRoute} from \"vue-router\";\r\nimport RegisterDialog from \"@/views/RegisterDialog\";\r\n\r\nconst route = useRoute();\r\n\r\n// 定义“登录”对话框的显示状态\r\nconst loginDialogVisible = ref(true);\r\n\r\n// 表单数据对象\r\n// do not use same name with ref\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  securityCode: '',\r\n  rememberMe: false, //是否记住密码\r\n  uuid: '', //后台传来的验证码字符串值\r\n});\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('暂不登录？')\r\n      .then(() => {\r\n        done()\r\n        router.replace({path: store.state.editableTabsValue}); // 导航到上一步\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 验证码图片地址\r\nlet securityCodeImgUrl = ref('');\r\n\r\n// 表单验证规则\r\nconst loginFormRules = reactive({\r\n  username: [{required: true, message: '请输入您的账号', trigger: 'blur',},],\r\n  password: [{required: true, message: '请输入您的密码', trigger: 'blur',},],\r\n  securityCode: [{required: true, message: '请输入验证码', trigger: 'change',},],\r\n});\r\n\r\n// 刷新验证码\r\nconst getSecurityCode = async () => {\r\n  let res = await AxiosUtil.get('/captcha');\r\n  console.log('captcha res= ', res);\r\n  loginForm.uuid = res.data.uuid;\r\n  loginForm.securityCode = '';\r\n  securityCodeImgUrl.value = res.data.base64Img;\r\n}\r\n\r\n// 定义表单引用\r\nconst loginFormRef = ref(null);\r\n\r\n// 定义“注册”对话框的显示状态\r\nconst registerDialogVisible = ref(false);\r\n\r\n// 处理登录按钮事件\r\nconst handleLogin = () => {\r\n  console.log('login!');\r\n  console.log('loginFormRef.value= ', loginFormRef.value);\r\n\r\n  // 表单验证\r\n  loginFormRef.value.validate(async (valid) => {\r\n    console.log('valid= ', valid);\r\n    // 表单验证通过\r\n    if (valid) {\r\n      console.log('表单验证通过');\r\n      // 如勾选了记住密码，则将登录信息保存到Cookie，否则在Cookie中移除\r\n      if (loginForm.rememberMe) {\r\n        console.log('记住密码');\r\n        Cookies.set('username', loginForm.username, {expires: 7});\r\n        Cookies.set('password', encrypt(loginForm.password, {expires: 7}));\r\n        Cookies.set('rememberMe', loginForm.rememberMe, {expires: 7});\r\n      } else {\r\n        console.log('不记住密码');\r\n        Cookies.remove('username');\r\n        Cookies.remove('password');\r\n        Cookies.remove('rememberMe');\r\n      }\r\n\r\n      // console.log('stringify loginForm=', qs.stringify(loginForm));\r\n      try {\r\n        let res = await AxiosUtil.post('login', qs.stringify(loginForm));\r\n        if (res.data.code == 200) {\r\n          console.log('res.data= ', res.data);\r\n          const token = res.data.authorization;\r\n          const menuList = res.data.menuList;\r\n          const perms = res.data.perms;\r\n          const currentUser = res.data.currentUser;\r\n\r\n          store.commit('SET_TOKEN', token);\r\n          store.commit('SET_MENULIST', menuList);\r\n          store.commit('SET_PERMS', perms);\r\n          store.commit('SET_USERINFO', currentUser);\r\n\r\n          // router.replace({path: '/'}); // 导航到首页\r\n          // router.go(-1); // 回退一步\r\n          // store.commit('RELOAD_ROUTE'); // 重新加载路由\r\n          router.replace({path: store.state.editableTabsValue}); // 导航到上一步\r\n          ElMessage({\r\n            message: '登录成功.',\r\n            type: 'success',\r\n          });\r\n        } else {\r\n          ElMessage({\r\n            showClose: true,\r\n            message: res.data.msg,\r\n            type: 'error',\r\n          });\r\n          await getSecurityCode();\r\n        }\r\n      } catch (e) {\r\n        console.log('login e= ', e);\r\n        ElMessage({\r\n          showClose: true,\r\n          message: '哎呀呀~出错了嚯！\\n' + e,\r\n          type: 'error',\r\n        });\r\n        await getSecurityCode();\r\n      }\r\n    } else {\r\n      console.log('表单验证不通过');\r\n      ElMessage({\r\n        message: '请将信息填写完整',\r\n        type: 'warning',\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// 处理注册按钮事件\r\nconst handleRegister = () => {\r\n  console.log('register!');\r\n  registerDialogVisible.value = true;\r\n}\r\n\r\n// 从Cookie中加载登录信息\r\nconst getLoginInfo = () => {\r\n  const username = Cookies.get('username');\r\n  const password = Cookies.get('password');\r\n  const rememberMe = Cookies.get('rememberMe');\r\n  loginForm.username = username == undefined ? loginForm.username : username;\r\n  loginForm.password = password == undefined ? loginForm.password : decrypt(password);\r\n  loginForm.rememberMe = rememberMe == undefined ? loginForm.rememberMe : rememberMe;\r\n}\r\n\r\n// 加载一次验证码和登录信息\r\ngetSecurityCode();\r\ngetLoginInfo();\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"LoginDialog\"\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n//登录页整页\r\n.loginPage {\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  /*TODO 增加高度*/\r\n  //height: 500px;\r\n  height: 520px;\r\n  align-items: center; /*align-items 属性可以使元素在交叉轴方向对齐*/\r\n  justify-content: center; /*justify-content属性用来使元素在主轴方向上对齐*/\r\n  //background-image: url(\"../assets/image/login-background.jpg\");\r\n  //background-size: cover; /*缩放背景图片以完全覆盖背景区*/\r\n  background: linear-gradient(45deg, lavender, lightskyblue);\r\n}\r\n\r\n//登录表单\r\n.loginForm {\r\n  /*box-sizing: border-box;*/\r\n  width: 400px;\r\n  /*height: 300px;*/\r\n  padding: 25px 25px 5px 25px;\r\n  background: #ffffff;\r\n  border-radius: 5px;\r\n\r\n  .formTitle {\r\n    margin: 0 auto 30px auto;\r\n    text-align: center;\r\n    color: #707070;\r\n    font-size: medium;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .el-input {\r\n    height: 40px;\r\n  }\r\n}\r\n\r\n.securityCodeWrapper {\r\n  width: 33%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end; /*justify-content属性用来使元素在主轴方向上对齐*/\r\n\r\n  img {\r\n    cursor: pointer;\r\n    //width: 1000px;\r\n    height: 40px;\r\n    right: 0;\r\n    border-radius: var(--el-border-radius-base);\r\n  }\r\n}\r\n\r\n.loginPageFooter {\r\n  position: absolute;\r\n  bottom: 0;\r\n  //color: #ffffff;\r\n  color: #6b778c; /* TODO 登录窗口页脚颜色 */\r\n  background: transparent; /*仅供测试*/\r\n}\r\n\r\n\r\n</style>","import script from \"./LoginDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoginDialog.vue?vue&type=style&index=0&id=e1e1e1b4&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e1e1e1b4\"]])\n\nexport default __exports__"],"names":["name","useRoute","loginDialogVisible","ref","loginForm","reactive","username","password","securityCode","rememberMe","uuid","handleClose","done","ElMessageBox","then","router","path","store","catch","securityCodeImgUrl","loginFormRules","required","message","trigger","getSecurityCode","async","res","AxiosUtil","console","log","data","value","base64Img","loginFormRef","registerDialogVisible","handleLogin","validate","valid","Cookies","expires","encrypt","qs","code","token","authorization","menuList","perms","currentUser","ElMessage","type","showClose","msg","e","handleRegister","getLoginInfo","undefined","decrypt","__exports__"],"sourceRoot":""}