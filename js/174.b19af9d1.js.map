{"version":3,"file":"js/174.b19af9d1.js","mappings":"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","sources":["webpack://hosp/./src/views/sys/person/EditDialog.vue","webpack://hosp/./src/views/sys/person/EditDialog.vue?c9b8"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"editDialogVisible\" :title=\"title\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"姓名\" prop=\"name\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.name\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"tel\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.tel\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"身份证号\" prop=\"idNo\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.idNo\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\" prop=\"sex\" style=\"width: 48%;\">\r\n        <el-switch\r\n            v-model=\"editForm.sex\"\r\n            style=\"--el-switch-on-color:  #f89898; --el-switch-off-color: #409EFF\"\r\n            :active-icon=\"Female\"\r\n            :inactive-icon=\"Male\"\r\n            :active-value=\"true\"\r\n            :inactive-value=\"false\"\r\n            width=\"50px\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"状态\" prop=\"disabled\" style=\"width: 40%;\">\r\n        <el-switch\r\n            v-model=\"editForm.disabled\"\r\n            style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\"\r\n            active-text=\"启用\"\r\n            inactive-text=\"禁用\"\r\n            :active-value=\"false\"\r\n            :inactive-value=\"true\"\r\n            width=\"50px\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"note\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.note\" type=\"textarea\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\nimport {Male, Female} from '@element-plus/icons-vue'\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n    default: ''\r\n  }\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  name: '',\r\n  idNo: '',\r\n  sex: false,\r\n  tel: '',\r\n  disabled: false,\r\n  note: '',\r\n});\r\n\r\n\r\nconst validatePerson = async (rule, value, callback) => {\r\n  // console.log(rule.field)\r\n  // console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'idNo') {\r\n    let pattern = /^[1-9]\\d{5}(18|19|20)\\d{2}((0[1-9])|(1[0-2]))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的身份证号'));\r\n    } else {\r\n      url = '/api/sys/persons/checkPerson?id=' + editForm.value.id + '&idNo=' + value;\r\n    }\r\n  } else if (rule.field == 'tel') {\r\n    let pattern = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的手机号'));\r\n    } else {\r\n      url = '/api/sys/persons/checkPerson?id=' + editForm.value.id + '&tel=' + value;\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  // console.log(url);\r\n  if (url) {\r\n    // console.log('向后台发送请求');\r\n    let res = await AxiosUtil.post(url);\r\n    // console.log(res.data);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  name: [\r\n    {required: true, message: '姓名不能为空', trigger: 'blur'},\r\n    {min: 2, max: 16, message: '请输入正确的姓名', trigger: 'change'},\r\n    {min: 2, max: 16, message: '请输入正确的姓名', trigger: 'blur'},\r\n  ],\r\n  idNo: [\r\n    {required: true, message: '身份证号不能为空', trigger: 'blur'},\r\n    {validator: validatePerson, trigger: 'change'},\r\n    {validator: validatePerson, trigger: 'blur'},\r\n  ],\r\n  tel: [\r\n    {required: true, message: '手机号不能为空', trigger: 'blur'},\r\n    {validator: validatePerson, trigger: 'change'},\r\n    {validator: validatePerson, trigger: 'blur'},\r\n  ],\r\n  disabled: [\r\n    {required: true, message: '状态不能为空', trigger: 'blur'},\r\n  ],\r\n  note: [\r\n    {required: false, max: 192, message: '备注信息不可超过192个字符', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  if (id == -1) {\r\n    editForm.value = {\r\n      id: -1,\r\n      name: '',\r\n      idNo: '',\r\n      sex: false,\r\n      tel: '',\r\n      disabled: false,\r\n      note: '',\r\n    };\r\n    console.log('清空表单...');\r\n  } else {\r\n    let res = await AxiosUtil.get('/api/sys/persons/' + id);\r\n    console.log(res.data);\r\n    if (res.data.code == 20010) {\r\n      let person = res.data.person;\r\n      // 更新表格数据\r\n      editForm.value = person;\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      if (editForm.value.id == -1) {\r\n        console.log('提交新增...');\r\n        url = '/api/sys/persons';\r\n        res = await AxiosUtil.post(url, editForm.value);\r\n        console.log(\"新增身份 res.data= \", res.data);\r\n      } else {\r\n        console.log('提交修改...');\r\n        url = '/api/sys/persons';\r\n        res = await AxiosUtil.put(url, editForm.value);\r\n        console.log(\"修改身份 res.data= \", res.data);\r\n      }\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","editDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","idNo","sex","tel","disabled","note","validatePerson","async","rule","value","callback","url","field","pattern","test","Error","res","AxiosUtil","data","code","msg","editFormRules","reactive","required","message","trigger","min","max","validator","editFormRef","handleReset","console","log","person","ElMessage","type","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","watch","__exports__"],"sourceRoot":""}