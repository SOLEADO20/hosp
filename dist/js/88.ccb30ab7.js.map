{"version":3,"file":"js/88.ccb30ab7.js","mappings":"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","sources":["webpack://hosp/./src/views/bsns/worker/ChangeDepartmentDialog.vue","webpack://hosp/./src/views/bsns/worker/ChangeDepartmentDialog.vue?eafe","webpack://hosp/./src/views/bsns/worker/EditDialog.vue","webpack://hosp/./src/views/bsns/worker/EditDialog.vue?dc21","webpack://hosp/./src/views/bsns/worker/index.vue","webpack://hosp/./src/views/bsns/worker/index.vue?cf6d"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"changeDepartmentDialogVisible\" title=\"批量变更科室\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"科室\" prop=\"departmentId\" style=\"width: 48%;\">\r\n        <el-select v-model=\"editForm.departmentId\" placeholder=\"请选择科室\">\r\n          <el-option label=\"顶级科室\" :value=\"0\"/>\r\n          <el-option v-for=\"department in departmentList\" :key=\"department.id\" :label=\"department.name\"\r\n                     :value=\"department.id\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  changeDepartmentDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  // 医生身份列表\r\n  doctorList: {\r\n    type: Array,\r\n    required: true,\r\n    default: () => []\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:changeDepartmentDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst changeDepartmentDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.changeDepartmentDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:changeDepartmentDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: [],\r\n  departmentId: 0,\r\n});\r\n\r\n// 定义科室列表\r\nconst departmentList = ref([]);\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  departmentId: [\r\n    {required: true, message: '科室不能为空', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  let doctorIdList = [];\r\n  for (const doctor of props.doctorList) {\r\n    doctorIdList.push(doctor.id);\r\n  }\r\n  editForm.value = {\r\n    id: doctorIdList,\r\n    departmentId: 0,\r\n  };\r\n  console.log('清空表单...');\r\n  // 后台请求科室列表\r\n  let res = await AxiosUtil.get('/api/bsns/departments');\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let departments = [];\r\n    res.data.departmentList.forEach(item => {\r\n      item.name = \"+ \" + item.name;\r\n      departments.push(item);\r\n      item.children.forEach(child => {\r\n        child.name = \"••• \" + child.name;\r\n        departments.push(child);\r\n      })\r\n    });\r\n    // 更新科室列表\r\n    departmentList.value = departments;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  changeDepartmentDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交修改...');\r\n      url = '/api/bsns/workers/updateDepartment/' + editForm.value.id.join(',') + '/' + editForm.value.departmentId;\r\n      console.log('url=', url);\r\n      res = await AxiosUtil.put(url, editForm.value);\r\n      console.log(\"修改岗位科室 res.data= \", res.data);\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(changeDepartmentDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset();\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./ChangeDepartmentDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChangeDepartmentDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-dialog v-model=\"editDialogVisible\" :title=\"title\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"科室\" prop=\"departmentId\" style=\"width: 48%;\">\r\n        <el-select v-model=\"editForm.departmentId\" placeholder=\"请选择科室\">\r\n          <el-option label=\"顶级科室\" :value=\"0\"/>\r\n          <el-option v-for=\"department in departmentList\" :key=\"department.id\" :label=\"department.name\"\r\n                     :value=\"department.id\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n<!--      <el-form-item label=\"状态\" prop=\"disabled\" style=\"width: 40%;\">-->\r\n<!--        <el-switch-->\r\n<!--            v-model=\"editForm.disabled\"-->\r\n<!--            style=\"&#45;&#45;el-switch-on-color: #13ce66; &#45;&#45;el-switch-off-color: #ff4949\"-->\r\n<!--            active-text=\"启用\"-->\r\n<!--            inactive-text=\"禁用\"-->\r\n<!--            :active-value=\"false\"-->\r\n<!--            :inactive-value=\"true\"-->\r\n<!--            width=\"50px\"-->\r\n<!--            disabled-->\r\n<!--        />-->\r\n<!--      </el-form-item>-->\r\n      <el-form-item label=\"人员\" prop=\"doctorId\" style=\"width: 100%;\">\r\n        <el-autocomplete\r\n            v-model=\"text\"\r\n            :fetch-suggestions=\"querySearchAsync\"\r\n            @select=\"handleSelect\"\r\n            placeholder=\"搜索人员...\"\r\n            :debounce=\"300\"\r\n            highlight-first-item\r\n            clearable\r\n            style=\"width: 100%;\"\r\n        />\r\n      </el-form-item>\r\n      <el-divider content-position=\"center\">所选人员信息</el-divider>\r\n      <el-form-item label=\"姓名\" prop=\"doctorInfo.name\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.name\" disabled/>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"doctorInfo.tel\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.tel\" disabled/>\r\n      </el-form-item>\r\n      <el-form-item label=\"身份证号\" prop=\"doctorInfo.idNo\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.idNo\" disabled/>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\" prop=\"doctorInfo.sex\" style=\"width: 48%;\">\r\n        <el-switch\r\n            v-model=\"editForm.doctorInfo.sex\"\r\n            style=\"--el-switch-on-color:  #f89898; --el-switch-off-color: #409EFF\"\r\n            :active-icon=\"Female\"\r\n            :inactive-icon=\"Male\"\r\n            :active-value=\"true\"\r\n            :inactive-value=\"false\"\r\n            width=\"50px\"\r\n            disabled\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"状态\" prop=\"doctorInfo.disabled\" style=\"width: 40%;\">\r\n        <el-switch\r\n            v-model=\"editForm.doctorInfo.disabled\"\r\n            style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\"\r\n            active-text=\"启用\"\r\n            inactive-text=\"禁用\"\r\n            :active-value=\"false\"\r\n            :inactive-value=\"true\"\r\n            width=\"50px\"\r\n            disabled\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"doctorInfo.note\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.doctorInfo.note\" type=\"textarea\" :rows=\"5\" disabled/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\nimport {Male, Female} from '@element-plus/icons-vue'\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n    default: ''\r\n  }\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  departmentId: 0,\r\n  doctorId: -1,\r\n  doctorInfo: {\r\n    id: -1,\r\n    name: '',\r\n    idNo: '',\r\n    sex: false,\r\n    tel: '',\r\n    disabled: false,\r\n    note: '',\r\n  },\r\n  disabled: false,\r\n});\r\n\r\n// 定义临时的查询关键词\r\nconst query = ref('');\r\n\r\n// 定义自动补全输入框内的文本\r\nconst text = ref('');\r\n\r\n// 定义科室列表\r\nconst departmentList = ref([]);\r\n\r\nconst validateWorker = async (rule, value, callback) => {\r\n  console.log(rule.field)\r\n  console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'departmentId') {\r\n    url = '/api/bsns/workers/checkWorker?id=' + editForm.value.id + '&departmentId=' + value + '&doctorId=' + editForm.value.doctorId;\r\n  } else if (rule.field == 'doctorId') {\r\n    if (value && value == -1) {\r\n      callback(new Error('请选择人员'));\r\n    } else {\r\n      url = '/api/bsns/workers/checkWorker?id=' + editForm.value.id + '&departmentId=' + editForm.value.departmentId + '&doctorId=' + value;\r\n    }\r\n  } else if (rule.field == 'doctorInfo.disabled') {\r\n    if (value) {\r\n      callback(new Error('黑名单人员，禁止入职'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  console.log(url);\r\n  if (url) {\r\n    // console.log('向后台发送请求');\r\n    let res = await AxiosUtil.post(url);\r\n    // console.log(res.data);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  departmentId: [\r\n    {required: true, message: '科室不能为空', trigger: 'blur'},\r\n    {validator: validateWorker, trigger: 'change'},\r\n    {validator: validateWorker, trigger: 'blur'},\r\n  ],\r\n  doctorId: [\r\n    {required: true, message: '人员不能为空', trigger: 'blur'},\r\n    {validator: validateWorker, trigger: 'blur'},\r\n  ],\r\n  disabled: [\r\n    {required: true, message: '状态不能为空', trigger: 'blur'},\r\n  ],\r\n  'doctorInfo.disabled': [\r\n    {validator: validateWorker, trigger: 'change'},\r\n    {validator: validateWorker, trigger: 'blur'},\r\n  ]\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  if (id == -1) {\r\n    editForm.value = {\r\n      id: -1,\r\n      departmentId: 0,\r\n      doctorId: -1,\r\n      doctorInfo: {\r\n        id: -1,\r\n        name: '',\r\n        idNo: '',\r\n        sex: false,\r\n        tel: '',\r\n        disabled: false,\r\n        note: '',\r\n      },\r\n      disabled: false,\r\n    };\r\n    console.log('清空表单...');\r\n  } else {\r\n    let res = await AxiosUtil.get('/api/bsns/workers/' + id);\r\n    console.log(res.data);\r\n    if (res.data.code == 20010) {\r\n      let worker = res.data.worker;\r\n      // 更新表单数据\r\n      editForm.value = worker;\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  }\r\n  // 重置查询关键词\r\n  query.value = '';\r\n  text.value = '';\r\n  // 无论是新增还是编辑，都需要向后台请求科室列表\r\n  let res = await AxiosUtil.get('/api/bsns/departments');\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let departments = [];\r\n    res.data.departmentList.forEach(item => {\r\n      item.name = \"+ \" + item.name;\r\n      departments.push(item);\r\n      item.children.forEach(child => {\r\n        child.name = \"••• \" + child.name;\r\n        departments.push(child);\r\n      })\r\n    });\r\n    // 更新科室列表\r\n    departmentList.value = departments;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n    // 清空科室列表\r\n    departmentList.value = [];\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      if (editForm.value.id == -1) {\r\n        console.log('提交新增...');\r\n        url = '/api/bsns/workers';\r\n        res = await AxiosUtil.post(url, editForm.value);\r\n        console.log(\"新增岗位 res.data= \", res.data);\r\n      } else {\r\n        console.log('提交修改...');\r\n        url = '/api/bsns/workers';\r\n        res = await AxiosUtil.put(url, editForm.value);\r\n        console.log(\"修改岗位 res.data= \", res.data);\r\n      }\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// 处理自动补全输入框的选择事件\r\nconst handleSelect = (item) => {\r\n  console.log(item);\r\n  // 还原自动补全输入框内的文本\r\n  text.value = query.value;\r\n  // 更新表单数据中的医生身份ID\r\n  editForm.value.doctorId = item.personInfo.id;\r\n  // 更新已选择身份的预览信息\r\n  editForm.value.doctorInfo = item.personInfo;\r\n  console.log(editForm.value);\r\n}\r\n\r\n// 当输入的查询关键词发生变化时，重新从后台拉取身份信息\r\nlet timeout = null; // 定义计时器\r\nconst querySearchAsync = (queryString, callback) => {\r\n  console.log('queryString=', queryString);\r\n  // 重置计时器\r\n  clearTimeout(timeout);\r\n  // 延迟返回结果，减轻服务器压力\r\n  timeout = setTimeout(async () => {\r\n    try {\r\n      // 备份查询关键词\r\n      query.value = queryString;\r\n      // 拉取身份信息\r\n      let res = await AxiosUtil.get('/api/sys/persons?pageSize=50&currentPage=1&query=' + queryString);\r\n      console.log(res.data);\r\n      if (res.data.code == 20010) {\r\n        let personList = [];\r\n        res.data.personList.forEach(item => {\r\n          let person = {\r\n            value: item.name + ' . ' + (item.sex == '0' ? '男' : '女') + ' . ' + item.tel + ' . ' + item.idNo,\r\n            personInfo: item,\r\n          };\r\n          personList.push(person);\r\n        });\r\n        callback(personList);\r\n      } else {\r\n        callback();\r\n      }\r\n    } catch (e) {\r\n      ElMessage({\r\n        message: e,\r\n        type: 'error',\r\n      });\r\n      callback();\r\n    }\r\n  }, 300 * Math.random());\r\n}\r\n\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-container>\r\n    <!--操作台-->\r\n    <el-header class=\"operatingFloor\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"7\">\r\n          <el-input v-model=\"query\" placeholder=\"搜索岗位...\" @keyup.enter=\"handleQuery\" clearable/>\r\n        </el-col>\r\n        <el-button type=\"primary\" :icon=\"Search\" @click=\"handleQuery\">查询</el-button>\r\n        <el-button type=\"success\" :icon=\"DocumentAdd\" @click=\"handleEdit(null)\"\r\n                   v-if=\"hasAnyAuthority('business:worker:add')\">新增\r\n        </el-button>\r\n        <el-button type=\"warning\" :icon=\"Paperclip\" @click=\"handleChangeDepartment\" :disabled=\"batchDeleteBtnDisabled\"\r\n                   v-if=\"hasAnyAuthority('business:worker:edit')\">批量更改科室\r\n        </el-button>\r\n        <el-popconfirm title=\"您确定要批量删除这些记录吗？\" @confirm=\"handleDelete(null)\"\r\n                       v-if=\"hasAnyAuthority('business:worker:delete')\">\r\n          <template #reference>\r\n            <el-button type=\"danger\" :icon=\"Delete\" :disabled=\"batchDeleteBtnDisabled\">批量删除</el-button>\r\n          </template>\r\n        </el-popconfirm>\r\n      </el-row>\r\n    </el-header>\r\n    <el-main style=\"padding: 5px; background: aliceblue;\" id=\"mainView\">\r\n      <el-table\r\n          :data=\"tableData\"\r\n          :max-height=\"tableMaxHeight\"\r\n          :default-sort=\"{ prop: 'id', order: 'ascending' }\"\r\n          size=\"default\"\r\n          @selection-change=\"handleSelectionChange\"\r\n          style=\"width: 100%\"\r\n          highlight-current-row\r\n          default-expand-all\r\n          stripe>\r\n        <el-table-column type=\"selection\" width=\"40\" align=\"center\"/>\r\n        <el-table-column prop=\"departmentInfo.name\" label=\"科室\" width=\"120\" header-align=\"center\" sortable fixed/>\r\n        <el-table-column prop=\"doctorInfo.name\" label=\"姓名\" width=\"94\" header-align=\"center\" sortable fixed/>\r\n        <el-table-column prop=\"doctorInfo.sex\" label=\"性别\" width=\"76\" align=\"center\" sortable>\r\n          <template #default=\"{row}\">\r\n            <el-switch\r\n                v-model=\"row.doctorInfo.sex\"\r\n                inline-prompt\r\n                style=\"--el-switch-on-color:  #f89898; --el-switch-off-color: #409EFF\"\r\n                :active-icon=\"Female\"\r\n                :inactive-icon=\"Male\"\r\n                :active-value=\"true\"\r\n                :inactive-value=\"false\"\r\n                width=\"50px\"\r\n                disabled\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"doctorInfo.tel\" label=\"电话\" width=\"114\" align=\"center\"/>\r\n        <el-table-column prop=\"doctorInfo.idNo\" label=\"身份证号\" width=\"170\" header-align=\"center\" sortable/>\r\n<!--        <el-table-column prop=\"disabled\" label=\"状态\" width=\"76\" align=\"center\"-->\r\n<!--                         :filters=\"[{ text: '启用', value: false },{ text: '禁用', value: true },]\"-->\r\n<!--                         :filter-method=\"filterState\">-->\r\n<!--          <template #default=\"{row}\">-->\r\n<!--            <el-switch-->\r\n<!--                v-model=\"row.disabled\"-->\r\n<!--                inline-prompt-->\r\n<!--                style=\"&#45;&#45;el-switch-on-color: #13ce66; &#45;&#45;el-switch-off-color: #ff4949\"-->\r\n<!--                active-text=\"启用\"-->\r\n<!--                inactive-text=\"禁用\"-->\r\n<!--                :active-value=\"false\"-->\r\n<!--                :inactive-value=\"true\"-->\r\n<!--                width=\"50px\"-->\r\n<!--                :loading=\"row.loading\"-->\r\n<!--                @change=\"handleStateChange(row)\"-->\r\n<!--                :disabled=\"!hasAnyAuthority('business:worker:edit')\"-->\r\n<!--            />-->\r\n<!--          </template>-->\r\n<!--        </el-table-column>-->\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\" header-align=\"center\" sortable/>\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\" min-width=\"160\" header-align=\"left\" sortable/>\r\n        <el-table-column label=\"操作\" width=\"130\" align=\"right\" header-align=\"center\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" :icon=\"Edit\" @click=\"handleEdit(scope.row.id)\"\r\n                       v-if=\"hasAnyAuthority('business:worker:edit')\"/>\r\n            <el-popconfirm title=\"您确定要删除这条记录吗？\" @confirm=\"handleDelete(scope.row.id)\"\r\n                           v-if=\"hasAnyAuthority('business:worker:delete')\">\r\n              <template #reference>\r\n                <el-button type=\"danger\" :icon=\"Delete\"/>\r\n              </template>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-main>\r\n    <el-footer style=\"background: powderblue;height: 32px;display: flex;align-items: center;justify-content: flex-end;\">\r\n      <el-pagination\r\n          v-model:currentPage=\"queryForm.currentPage\"\r\n          v-model:page-size=\"queryForm.pageSize\"\r\n          :page-sizes=\"[15, 20, 50, 100]\"\r\n          small\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n      />\r\n    </el-footer>\r\n  </el-container>\r\n  <EditDialog v-model:edit-dialog-visible=\"editDialogVisible\" :id=\"editId\" :title=\"editTitle\"\r\n              @handleSubmit=\"fetchData\"/>\r\n  <ChangeDepartmentDialog v-model:change-department-dialog-visible=\"changeDepartmentDialogVisible\"\r\n                          :doctor-list=\"multipleSelection\" @handleSubmit=\"fetchData\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport {Search, DocumentAdd, Paperclip, Delete, Edit, Male, Female} from '@element-plus/icons-vue'\r\nimport {onMounted, reactive, ref, watch} from \"vue\";\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport EditDialog from \"./EditDialog\";\r\nimport ChangeDepartmentDialog from \"./ChangeDepartmentDialog\";\r\nimport qs from \"qs\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\n/*====以下为一些数据的定义====*/\r\n\r\n// 定义表单的查询条件\r\nconst queryForm = reactive({\r\n  query: '', // 查找的字符\r\n  currentPage: 1, // 当前页数\r\n  pageSize: 15, // 页面记录容量\r\n});\r\n\r\n// 定义临时的查询关键词\r\nconst query = ref('');\r\n\r\n// 定义从分页组件的总记录数\r\nconst total = ref(40);\r\n\r\n// 定义批量删除按钮是否禁用\r\nconst batchDeleteBtnDisabled = ref(true);\r\n\r\n// 定义已选择的记录\r\nconst multipleSelection = ref([]);\r\n\r\n// 定义表格的最大高度\r\nconst tableMaxHeight = ref(400);\r\n\r\n// 定义表格数据\r\nconst tableData = ref([\r\n  {\r\n    id: 10075286712,\r\n    departmentId: 0,\r\n    doctorId: 10075286712,\r\n    departmentInfo: {\r\n      id: 0,\r\n      name: '顶级科室',\r\n    },\r\n    doctorInfo: {\r\n      name: '欧阳修米',\r\n      idNo: '430111200012310089',\r\n      tel: 18877776666,\r\n      sex: true,\r\n    },\r\n    disabled: false,\r\n    createTime: '2022-09-23 20:10:01',\r\n    updateTime: '2022-10-18 18:16:18',\r\n  },\r\n  {\r\n    id: 1007448077,\r\n    departmentId: 0,\r\n    doctorId: 1007448077,\r\n    departmentInfo: {\r\n      id: 0,\r\n      name: '顶级科室',\r\n    },\r\n    doctorInfo: {\r\n      name: '陈嘉乐',\r\n      idNo: '43302720001231008X',\r\n      tel: 13177771111,\r\n      sex: false,\r\n    },\r\n    disabled: false,\r\n    createTime: '2022-09-23 20:10:01',\r\n    updateTime: '2022-10-18 18:16:18',\r\n  },\r\n]);\r\n\r\n// 定义编辑对话框的显示状态\r\nconst editDialogVisible = ref(false);\r\n\r\n// 定义批量修改科室对话框的显示状态\r\nconst changeDepartmentDialogVisible = ref(false);\r\n\r\n// 定义传入编辑对话框的id值\r\nconst editId = ref(-1);\r\n\r\n// 定义传入编辑对话框的title值\r\nconst editTitle = ref('');\r\n\r\n\r\n/*====以下为各按钮的点击事件====*/\r\n\r\n// 处理通过关键字查询\r\nconst handleQuery = () => {\r\n  // 设置当前页码为1\r\n  queryForm.currentPage = 1;\r\n  // 由于设置了当queryForm发生变化时才从后台重新拉取数据，\r\n  // 因此若查找的字符实际上未发生变化则需要手动刷新数据\r\n  // 即先点查询按钮，再进行翻页等操作\r\n  if (queryForm.query == query.value) {\r\n    console.log('手动刷新：关键字不变...');\r\n    fetchData();\r\n  } else {\r\n    queryForm.query = query.value;\r\n  }\r\n}\r\n\r\n// 处理删除记录\r\nconst handleDelete = async (id) => {\r\n  if (!id) {\r\n    // 不传入参数时，为批量删除\r\n    id = [];\r\n    multipleSelection.value.forEach(item => {\r\n      id.push(item.id);\r\n    });\r\n  } else {\r\n    // 不传入参数时，为单个删除\r\n    id = [id];\r\n  }\r\n  console.log('删除...', id);\r\n  let url = '/api/bsns/workers/' + id.join(',');\r\n  console.log('url=', url);\r\n  let res = await AxiosUtil.del(url);\r\n  console.log('res=', res);\r\n  if (res.data.code == 20040) {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'success',\r\n    });\r\n    await fetchData();\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 处理新增、编辑\r\nconst handleEdit = (id) => {\r\n  if (id) {\r\n    console.log('修改...', id);\r\n    editId.value = id;\r\n    editTitle.value = '岗位变更';\r\n  } else {\r\n    console.log('新增...', id);\r\n    editId.value = -1;\r\n    editTitle.value = '岗位添加';\r\n  }\r\n  editDialogVisible.value = true;\r\n}\r\n\r\n// 处理批量修改科室\r\nconst handleChangeDepartment = (id) => {\r\n  console.log('批量更改科室...', multipleSelection);\r\n  changeDepartmentDialogVisible.value = true;\r\n}\r\n\r\n\r\n/*====以下为一些监听以及其他函数====*/\r\n\r\n// 处理页面容量的改变\r\nconst handleSizeChange = (val) => {\r\n  console.log(`${val} items per page`);\r\n}\r\n\r\n// 处理页码的改变\r\nconst handleCurrentChange = (val) => {\r\n  console.log(`current page: ${val}`);\r\n}\r\n\r\n// 处理选择集的改变\r\nconst handleSelectionChange = (list) => {\r\n  multipleSelection.value = list;\r\n  // 更新批量删除按钮的可用状态\r\n  batchDeleteBtnDisabled.value = list.length == 0;\r\n  console.log('新选择= ', list);\r\n}\r\n\r\n// 处理状态的改变\r\nconst handleStateChange = async (row) => {\r\n  // console.log('状态变化...', row.id);\r\n\r\n  // 先设置元素为加载状态\r\n  row.loading = true;\r\n  let url = '/api/bsns/workers/updateDisabled/' + row.id + '/' + row.disabled;\r\n  // console.log(url);\r\n\r\n  // 为保证程序能正常走完，发送请求要用 try...catch 包围\r\n  try {\r\n    let res = await AxiosUtil.put(url);\r\n    if (res.data.code == 20030) {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'success',\r\n      });\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n      row.disabled = !row.disabled; // 恢复显示为修改前的状态\r\n    }\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n    ElMessage({\r\n      message: '操作失败！' + e,\r\n      type: 'error',\r\n    });\r\n    row.disabled = !row.disabled; // 恢复显示为修改前的状态\r\n  }\r\n\r\n  // 请求结束后取消元素的加载状态\r\n  row.loading = false;\r\n}\r\n\r\n// 处理按状态筛选记录\r\nconst filterState = (value, row) => {\r\n  return row.disabled === value;\r\n}\r\n\r\n// 从后台获取数据\r\nconst fetchData = async () => {\r\n  let url = '/api/bsns/workers?' + qs.stringify(queryForm);\r\n  console.log('url=', url);\r\n  // 从后台获取数据\r\n  let res = await AxiosUtil.get(url);\r\n  console.log(\"更新岗位列表 res= \", res);\r\n  if (res.data.code == 20010) {\r\n    // 更新表格数据\r\n    tableData.value = res.data.workerList;\r\n    // 更新分页组件总记录数\r\n    total.value = res.data.total;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\nfetchData();\r\n\r\n// 当表单的查询查询条件发生变化时，重新拉取数据\r\nwatch(queryForm, async (newForm, oldForm) => {\r\n  // 如果改变每页容量，则确保当前页的第一条记录在新的结果中仍然出现\r\n  if (newForm.pageSize != oldForm.pageSize) {\r\n    let currentItem = oldForm.pageSize * (oldForm.currentPage - 1) + 1;\r\n    newForm.currentPage = Math.ceil(currentItem / newForm.pageSize);\r\n  }\r\n  console.log(Date.now() + ' 重新拉取数据...');\r\n  console.log(queryForm);\r\n  await fetchData();\r\n});\r\n\r\n// 新建一个ResizeObserver用于监视表格容器尺寸的变化\r\nconst resizeObserver = new ResizeObserver((entries) => {\r\n  for (const entry of entries) {\r\n    // 仅对指定id的元素生效\r\n    if (entry.target.id == 'mainView') {\r\n      let mainViewHeight;\r\n      // 由于兼容性问题，获取元素高度时需谨慎\r\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver\r\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserverEntry\r\n      if (entry.contentBoxSize) {\r\n        // Firefox implements `contentBoxSize` as a single content rect, rather than an array\r\n        const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\r\n        mainViewHeight = contentBoxSize.blockSize;\r\n      } else {\r\n        mainViewHeight = entry.contentRect.height;\r\n      }\r\n      // 设置表格的最大高度为表格容器的高度\r\n      tableMaxHeight.value = mainViewHeight;\r\n      // console.log('mainViewHeight= ', mainViewHeight);\r\n    }\r\n  }\r\n});\r\n\r\n// 在组件完成初始渲染并创建 DOM 节点后开始监视表格容器\r\nonMounted(() => {\r\n  const mainView = document.getElementById('mainView');\r\n  resizeObserver.observe(mainView);\r\n});\r\n\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"index\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*操作台*/\r\n.operatingFloor {\r\n  /*display: flex;*/\r\n  /*align-items: center; !*align-items 属性可以使元素在交叉轴方向对齐*!*/\r\n  /*justify-content: flex-start; !*justify-content属性用来使元素在主轴方向上对齐*!*/\r\n  height: 48px;\r\n  padding: 8px 10px;\r\n\r\n}\r\n\r\n.el-tag--small {\r\n  margin-left: 5px;\r\n}\r\n\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=09589758&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-09589758\"]])\n\nexport default __exports__"],"names":["name","changeDepartmentDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","departmentId","departmentList","editFormRules","reactive","required","message","trigger","editFormRef","handleReset","async","doctorIdList","doctor","doctorList","push","value","console","log","res","AxiosUtil","data","code","departments","forEach","item","children","child","ElMessage","msg","type","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","url","join","watch","__exports__","editDialogVisible","doctorId","doctorInfo","idNo","sex","tel","disabled","note","query","text","validateWorker","rule","callback","field","Error","validator","worker","handleSelect","personInfo","timeout","querySearchAsync","queryString","clearTimeout","setTimeout","personList","person","e","Math","random","queryForm","currentPage","pageSize","total","batchDeleteBtnDisabled","multipleSelection","tableMaxHeight","tableData","departmentInfo","createTime","updateTime","editId","editTitle","handleQuery","fetchData","handleDelete","handleEdit","handleChangeDepartment","handleSizeChange","val","handleCurrentChange","handleSelectionChange","list","length","qs","workerList","newForm","oldForm","currentItem","ceil","Date","now","resizeObserver","ResizeObserver","entries","entry","target","mainViewHeight","contentBoxSize","Array","isArray","blockSize","contentRect","height","onMounted","mainView","document","getElementById","observe"],"sourceRoot":""}