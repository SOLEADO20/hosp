{"version":3,"file":"js/722.6595ba91.js","mappings":"kPA6KA,EAAe,CACbA,KAAM,mB,uNA7HFC,GAAyBC,EAAAA,EAAAA,IAAS,CAEtCC,MACE,OAAOC,EAAMH,sBACd,EACDI,IAAIC,GACFC,EAAK,gCAAiCD,EACvC,IAIGE,GAAgBC,EAAAA,EAAAA,IAAI,CACxBC,IAAK,IAIDC,EAAY,CAChBC,MAAO,OACPC,SAAU,YAINC,GAAWL,EAAAA,EAAAA,IAAI,IAGfM,GAAUN,EAAAA,EAAAA,IAAI,MAGdO,EAAoB,CAACC,EAAMC,EAASC,KAAhB,EAKpBC,EAAcC,UAClB,IACE,IAAIC,QAAaC,EAAAA,GAAAA,IAAc,kBAC3BC,QAAaD,EAAAA,GAAAA,IAAc,kBAAoBb,GAGnD,GAFAe,QAAQC,IAAIJ,EAAKL,MACjBQ,QAAQC,IAAIF,EAAKP,MACK,OAAlBK,EAAKL,KAAKU,MAAmC,OAAlBH,EAAKP,KAAKU,KAAe,CAEtDb,EAASc,MAAQN,EAAKL,KAAKY,aAE3B,IAAIC,EAAoB,GACxBN,EAAKP,KAAKc,KAAKC,SAASC,SAAQC,IAC9BJ,EAAkBK,KAAKD,EAAKxB,GAA5B,IAEFK,EAAQa,MAAMQ,eAAeN,GAE7BtB,EAAcoB,MAAQJ,EAAKP,KAAKc,IACjC,MACCM,EAAAA,EAAAA,IAAU,CACRC,QAAShB,EAAKL,KAAKsB,IACnBC,KAAM,WAERH,EAAAA,EAAAA,IAAU,CACRC,QAASd,EAAKP,KAAKsB,IACnBC,KAAM,UAGVf,QAAQC,IAAI,WAGb,CAFC,MAAOe,GACPhB,QAAQC,IAAI,KAAMe,EACnB,GAIGC,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,oBAChBC,MAAK,KACJF,GAAM,IAEPG,OAAM,QAJX,EAUIC,EAAe,KACnB9C,EAAuB2B,OAAQ,CAA/B,EAIIoB,EAAgB3B,UACpB,IAAI4B,EAAKC,EACTzB,QAAQC,IAAI,aACZuB,EAAM,4BAA8BzC,EAAcoB,MAAMlB,GACxD,IACEwC,QAAY3B,EAAAA,GAAAA,IAAc0B,EAAKlC,EAAQa,MAAMuB,kBAC7C1B,QAAQC,IAAI,uBAAwBwB,EAAIjC,MACnB,OAAjBiC,EAAIjC,KAAKU,OACXU,EAAAA,EAAAA,IAAU,CACRC,QAASY,EAAIjC,KAAKsB,IAClBC,KAAM,YAERjC,EAAK,gBACLwC,MAEAV,EAAAA,EAAAA,IAAU,CACRC,QAASY,EAAIjC,KAAKsB,IAClBC,KAAM,SASX,CANC,MAAOC,GACPhB,QAAQC,IAAI,KAAMe,IAClBJ,EAAAA,EAAAA,IAAU,CACRC,QAAS,QAAUG,EACnBD,KAAM,SAET,G,OAIHY,EAAAA,EAAAA,IAAMnD,GAAyBK,IACb,GAAZA,GACFc,EAAYhB,EAAMM,GACnB,I,k7BClKH,MAAM2C,EAAc,EAEpB,O","sources":["webpack://hosp/./src/views/sys/role/GrantMenuDialog.vue","webpack://hosp/./src/views/sys/role/GrantMenuDialog.vue?81ec"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"grantMenuDialogVisible\" title=\"分配权限\" :before-close=\"handleClose\" width=\"30%\" draggable>\r\n    <el-form :model=\"grantMenuForm\">\r\n      <el-form-item>\r\n        <el-tree\r\n            :props=\"treeProps\"\r\n            :data=\"treeData\"\r\n            ref=\"treeRef\"\r\n            node-key=\"id\"\r\n            show-checkbox\r\n            default-expand-all\r\n            check-strictly\r\n            @check-change=\"handleCheckChange\"\r\n        />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  grantMenuDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:grantMenuDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“分配权限”对话框的显示状态\r\nconst grantMenuDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.grantMenuDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:grantMenuDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst grantMenuForm = ref({\r\n  id: -1,\r\n});\r\n\r\n// 定义Tree树形组件属性\r\nconst treeProps = {\r\n  label: 'name',\r\n  children: 'children',\r\n}\r\n\r\n// 定义Tree树形组件的展示数据（即所有可选项）\r\nconst treeData = ref([]);\r\n\r\n// 定义Tree树形组件引用\r\nconst treeRef = ref(null);\r\n\r\n// 处理选择集的变化\r\nconst handleCheckChange = (data, checked, indeterminate) => {\r\n  // console.log(data, checked, indeterminate)\r\n}\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  try {\r\n    let res1 = await AxiosUtil.get('/api/sys/menus');\r\n    let res2 = await AxiosUtil.get('/api/sys/roles/' + id);\r\n    console.log(res1.data);\r\n    console.log(res2.data);\r\n    if (res1.data.code == 20010 && res2.data.code == 20010) {\r\n      // 更新树形组件的数据源\r\n      treeData.value = res1.data.menuListTree;\r\n      // 更新树形组件的已选项\r\n      let checkedMenuIdList = [];\r\n      res2.data.role.menuList.forEach(menu => {\r\n        checkedMenuIdList.push(menu.id);\r\n      });\r\n      treeRef.value.setCheckedKeys(checkedMenuIdList);\r\n      // 更新表单数据\r\n      grantMenuForm.value = res2.data.role;\r\n    } else {\r\n      ElMessage({\r\n        message: res1.data.msg,\r\n        type: 'error',\r\n      });\r\n      ElMessage({\r\n        message: res2.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  grantMenuDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = async () => {\r\n  let url, res;\r\n  console.log('提交权限分配...');\r\n  url = '/api/sys/roles/grantMenu/' + grantMenuForm.value.id;\r\n  try {\r\n    res = await AxiosUtil.put(url, treeRef.value.getCheckedKeys());\r\n    console.log(\"分配给角色权限菜单 res.data= \", res.data);\r\n    if (res.data.code == 20030) {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'success',\r\n      });\r\n      emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n      handleCancel(); // 关闭对话框\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n    ElMessage({\r\n      message: '操作失败！' + e,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(grantMenuDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"GrantMenuDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./GrantMenuDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GrantMenuDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","grantMenuDialogVisible","computed","get","props","set","newValue","emit","grantMenuForm","ref","id","treeProps","label","children","treeData","treeRef","handleCheckChange","data","checked","indeterminate","handleReset","async","res1","AxiosUtil","res2","console","log","code","value","menuListTree","checkedMenuIdList","role","menuList","forEach","menu","push","setCheckedKeys","ElMessage","message","msg","type","e","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","url","res","getCheckedKeys","watch","__exports__"],"sourceRoot":""}