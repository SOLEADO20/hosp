{"version":3,"file":"js/979.5aaa5ae1.js","mappings":"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","sources":["webpack://hosp/./src/views/center/info/ChangePasswordDialog.vue","webpack://hosp/./src/views/center/info/ChangePasswordDialog.vue?8c62","webpack://hosp/./src/views/center/info/EditDialog.vue","webpack://hosp/./src/views/center/info/EditDialog.vue?d0ea","webpack://hosp/./src/views/center/info/index.vue","webpack://hosp/./src/views/center/info/index.vue?bbf0"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"changePasswordDialogVisible\" title=\"修改密码\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"原密码\" prop=\"oldPassword\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.oldPassword\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"password\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.password\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"rePassword\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.rePassword\" type=\"password\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  changePasswordDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:changePasswordDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst changePasswordDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.changePasswordDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:changePasswordDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: props.id,\r\n  oldPassword: '',\r\n  password: '',\r\n  rePassword: '',\r\n});\r\n\r\nconst validatePassword = async (rule, value, callback) => {\r\n  if (value != editForm.value.password) {\r\n    callback(new Error('两次密码输入不一致'));\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  oldPassword: [\r\n    {required: true, message: '原密码不能为空', trigger: 'blur'},\r\n  ],\r\n  password: [\r\n    {required: true, message: '密码不能为空', trigger: 'blur'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'change'},\r\n    {min: 6, max: 16, message: '密码长度不低于6位，不超过16位', trigger: 'blur'},\r\n  ],\r\n  rePassword: [\r\n    {required: true, message: '请再次输入密码', trigger: 'blur'},\r\n    {validator: validatePassword, trigger: 'change'},\r\n    {validator: validatePassword, trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  editForm.value = {\r\n    id: props.id,\r\n    oldPassword: '',\r\n    password: '',\r\n    rePassword: '',\r\n  };\r\n  console.log('清空表单...');\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  changePasswordDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交修改...');\r\n      url = '/api/center/users/updatePassword';\r\n      res = await AxiosUtil.put(url, editForm.value);\r\n      console.log(\"修改用户 res.data= \", res.data);\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(changePasswordDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"ChangePasswordDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./ChangePasswordDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChangePasswordDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-dialog v-model=\"editDialogVisible\" title=\"编辑用户信息\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"头像\" prop=\"profile\" style=\"width: 48%;\">\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            :headers=\"headers\"\r\n            :action=\"getServerUrl()+'/api/center/users/uploadProfile'\"\r\n            :show-file-list=\"false\"\r\n            :on-success=\"handleAvatarSuccess\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n        >\r\n          <img :src=\"getServerUrl()+'/image/userProfile/'+editForm.profile\" class=\"avatar\"/>\r\n          <!--          <el-icon v-else class=\"avatar-uploader-icon\"><Plus /></el-icon>-->\r\n        </el-upload>\r\n        <!--        <el-input v-model=\"editForm.profile\"/>-->\r\n      </el-form-item>\r\n      <el-form-item label=\"用户名\" prop=\"username\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.username\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\" prop=\"personInfo.tel\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.personInfo.tel\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"note\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.note\" type=\"textarea\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil, {getServerUrl} from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\nimport store from '@/store';\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  profile: '',\r\n  username: '',\r\n  password: '',\r\n  rePassword: '',\r\n  disabled: false,\r\n  note: '',\r\n  personInfo: {\r\n    name: '',\r\n    idNo: '',\r\n    tel: undefined,\r\n    sex: false,\r\n    disabled: false,\r\n  },\r\n});\r\n\r\n// 定义头像组件上传的请求头部（否则在后端无法正常拦截请求，导致直接认证失败）\r\nconst headers = ref({\r\n  token: store.getters.GET_TOKEN\r\n})\r\n\r\n// 定义自定义表单验证规则\r\nconst validateUser = async (rule, value, callback) => {\r\n  // console.log(rule.field)\r\n  // console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'username') {\r\n    if (value && value.length > 16) {\r\n      callback(new Error('用户名长度不可超过16位'));\r\n    } else {\r\n      url = '/api/center/users/checkUser?id=' + editForm.value.id + '&username=' + value;\r\n    }\r\n  } else if (rule.field == 'personInfo.tel') {\r\n    let pattern = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n    if (!pattern.test(value)) {\r\n      callback(new Error('请输入正确的手机号'));\r\n    } else {\r\n      url = '/api/center/users/checkUser?id=' + editForm.value.id + '&tel=' + value;\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  if (url) {\r\n    let res = await AxiosUtil.post(url);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  username: [\r\n    {required: true, message: '用户名不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  \"personInfo.tel\": [\r\n    {required: true, message: '手机号不能为空', trigger: 'blur'},\r\n    {validator: validateUser, trigger: 'change'},\r\n    {validator: validateUser, trigger: 'blur'},\r\n  ],\r\n  note: [\r\n    {required: false, max: 192, message: '备注信息不可超过192个字符', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 文件上传成功时的钩子\r\nconst handleAvatarSuccess = (res, uploadFile) => {\r\n  // console.log(uploadFile.raw);\r\n  // console.log(URL.createObjectURL(uploadFile.raw));\r\n  console.log('uploadFile=', uploadFile);\r\n  console.log('res=', res);\r\n  if (res.code == 0) {\r\n    editForm.value.profile = res.newFileName;\r\n  } else {\r\n    ElMessage({\r\n      message: res.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 上传文件之前的钩子，参数为上传的文件， 若返回false或者返回 Promise 且被 reject，则停止上传。\r\nconst beforeAvatarUpload = (rawFile) => {\r\n  console.log('rawFile=', rawFile);\r\n  if (rawFile.type !== 'image/jpeg' && rawFile.type !== 'image/png') {\r\n    ElMessage.error('图片格式必须为 JPG 或 PNG 格式！');\r\n    return false;\r\n  } else if (rawFile.size / 1024 > 500) {\r\n    ElMessage.error('文件大小不能超过 500KB！');\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  let res = await AxiosUtil.get('/api/center/users/' + id);\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let user = res.data.user;\r\n    // 更新表格数据\r\n    editForm.value = user;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n  console.log('从后台填充...');\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交修改...');\r\n      url = '/api/center/users';\r\n      res = await AxiosUtil.put(url, editForm.value);\r\n      console.log(\"修改用户 res.data= \", res.data);\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.avatar-uploader .avatar {\r\n  width: 96px;\r\n  height: 96px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed var(--el-border-color);\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n</style>\r\n","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditDialog.vue?vue&type=style&index=0&id=bf29f8d0&lang=scss&scoped=true\"\nimport \"./EditDialog.vue?vue&type=style&index=1&id=bf29f8d0&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bf29f8d0\"]])\n\nexport default __exports__","<template>\r\n  <el-descriptions\r\n      title=\"用户信息\"\r\n      :column=\"3\"\r\n      size=\"default\"\r\n      border\r\n      style=\"margin: 20px;\"\r\n  >\r\n    <template #extra>\r\n      <el-button type=\"warning\" plain @click=\"handleChangePassword\">修改密码</el-button>\r\n      <el-button type=\"primary\" plain @click=\"handleEdit\">编辑</el-button>\r\n    </template>\r\n    <el-descriptions-item>\r\n      <template #label>\r\n        <div class=\"cell-item\">\r\n          <el-icon>\r\n            <PictureRounded/>\r\n          </el-icon>\r\n          头像\r\n        </div>\r\n      </template>\r\n      <el-avatar shape=\"square\" size=\"default\" :src=\"getServerUrl()+'/image/userProfile/'+userInfoOnline.profile\"/>\r\n    </el-descriptions-item>\r\n    <el-descriptions-item>\r\n      <template #label>\r\n        <div class=\"cell-item\">\r\n          <el-icon>\r\n            <User/>\r\n          </el-icon>\r\n          用户名\r\n        </div>\r\n      </template>\r\n      {{ userInfoOnline.username }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item>\r\n      <template #label>\r\n        <div class=\"cell-item\">\r\n          <el-icon>\r\n            <EditPen/>\r\n          </el-icon>\r\n          备注\r\n        </div>\r\n      </template>\r\n      {{ userInfoOnline.note }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item>\r\n      <template #label>\r\n        <div class=\"cell-item\">\r\n          <el-icon>\r\n            <InfoFilled/>\r\n          </el-icon>\r\n          姓名\r\n        </div>\r\n      </template>\r\n      {{ userInfoOnline.personInfo.name }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item>\r\n      <template #label>\r\n        <div class=\"cell-item\">\r\n          <el-icon>\r\n            <Iphone/>\r\n          </el-icon>\r\n          电话\r\n        </div>\r\n      </template>\r\n      {{ userInfoOnline.personInfo.tel }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item>\r\n      <template #label>\r\n        <div class=\"cell-item\">\r\n          <el-icon>\r\n            <QuestionFilled/>\r\n          </el-icon>\r\n          性别\r\n        </div>\r\n      </template>\r\n      {{ (userInfoOnline.personInfo.sex) == '0' ? '男' : '女' }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item>\r\n      <template #label>\r\n        <div class=\"cell-item\">\r\n          <el-icon>\r\n            <InfoFilled/>\r\n          </el-icon>\r\n          身份证号\r\n        </div>\r\n      </template>\r\n      {{ userInfoOnline.personInfo.idNo }}\r\n    </el-descriptions-item>\r\n  </el-descriptions>\r\n  <EditDialog :id=\"userInfoOnline.id\" v-model:edit-dialog-visible=\"editDialogVisible\" @handleSubmit=\"fetchData\"/>\r\n  <ChangePasswordDialog :id=\"userInfoOnline.id\" v-model:change-password-dialog-visible=\"changePasswordDialogVisible\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from 'vue'\r\nimport store from '@/store';\r\nimport {Iphone, User, PictureRounded, EditPen, InfoFilled,} from '@element-plus/icons-vue'\r\nimport AxiosUtil, {getServerUrl} from \"@/utils/AxiosUtil\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport EditDialog from \"./EditDialog\";\r\nimport ChangePasswordDialog from \"./ChangePasswordDialog\";\r\n\r\n\r\n// 定义本地用户信息\r\nconst userInfo = ref(store.getters.GET_USERINFO);\r\n\r\n// 定义在线用户信息\r\nconst userInfoOnline = ref({\r\n  id: -1,\r\n  profile: 'default.jpg',\r\n  username: '',\r\n  password: '',\r\n  rePassword: '',\r\n  disabled: false,\r\n  note: '',\r\n  personInfo: {\r\n    name: '',\r\n    idNo: '',\r\n    tel: undefined,\r\n    sex: false,\r\n    disabled: false,\r\n  },\r\n});\r\n\r\n// 定义编辑对话框的显示状态\r\nconst editDialogVisible = ref(false);\r\n\r\n// 定义修改密码对话框的显示状态\r\nconst changePasswordDialogVisible = ref(false);\r\n\r\n// 处理编辑\r\nconst handleEdit = () => {\r\n  editDialogVisible.value = true;\r\n}\r\n\r\n// 处理修改密码\r\nconst handleChangePassword = () => {\r\n  changePasswordDialogVisible.value = true;\r\n}\r\n\r\n// 从后台获取数据\r\nconst fetchData = async () => {\r\n  let res = await AxiosUtil.get('/api/center/users/' + userInfo.value.id);\r\n  console.log(res.data);\r\n  if (res.data.code == 20010) {\r\n    let user = res.data.user;\r\n    // 更新表格数据\r\n    userInfoOnline.value = user;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n  console.log('从后台填充...');\r\n}\r\n\r\nfetchData();\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"index\"\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.cell-item {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=ff815286&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ff815286\"]])\n\nexport default __exports__"],"names":["name","changePasswordDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","oldPassword","password","rePassword","validatePassword","async","rule","value","callback","Error","editFormRules","reactive","required","message","trigger","min","max","validator","editFormRef","handleReset","console","log","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","url","res","AxiosUtil","data","code","ElMessage","msg","type","watch","__exports__","editDialogVisible","profile","username","disabled","note","personInfo","idNo","tel","undefined","sex","headers","token","store","validateUser","field","length","pattern","test","handleAvatarSuccess","uploadFile","newFileName","beforeAvatarUpload","rawFile","size","user","userInfo","userInfoOnline","handleEdit","handleChangePassword","fetchData"],"sourceRoot":""}