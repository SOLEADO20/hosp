{"version":3,"file":"js/120.09a0a483.js","mappings":"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","sources":["webpack://hosp/./src/views/bsns/schedule/EditDialog.vue","webpack://hosp/./src/views/bsns/schedule/EditDialog.vue?2304"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"editDialogVisible\" :title=\"title\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"科室\" prop=\"departmentId\" style=\"width: 48%;\">\r\n        <el-select v-model=\"editForm.departmentId\" placeholder=\"请选择科室\" disabled>\r\n          <el-option label=\"顶级科室\" :value=\"0\"/>\r\n          <el-option v-for=\"department in departmentList\" :key=\"department.id\" :label=\"department.name\"\r\n                     :value=\"department.id\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"诊室\" prop=\"roomId\" style=\"width: 40%;\">\r\n        <el-select v-model=\"editForm.roomId\" placeholder=\"请选择诊室\">\r\n          <el-option v-for=\"room in roomList\" :key=\"room.id\" :label=\"room.roomNo+' . '+room.note\"\r\n                     :value=\"room.id\"/>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"日期\" prop=\"date\" style=\"width: 48%;\">\r\n        <el-date-picker\r\n            v-model=\"editForm.date\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            :clearable=\"false\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"班次\" prop=\"time\" style=\"width: 40%;\">\r\n        <el-radio-group v-model=\"editForm.time\">\r\n          <el-radio :label=\"0\" size=\"large\">上午</el-radio>\r\n          <el-radio :label=\"1\" size=\"large\">下午</el-radio>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n      <el-form-item label=\"值班人员\" prop=\"workerId\" style=\"width: 100%;\">\r\n        <el-select\r\n            v-model=\"editForm.workerId\"\r\n            filterable\r\n            default-first-option\r\n            placeholder=\"搜索人员\"\r\n            style=\"width: 100%;\"\r\n        >\r\n          <el-option\r\n              v-for=\"worker in workerList\"\r\n              :key=\"worker.id\"\r\n              :label=\"worker.doctorInfo.name + ' . ' + (worker.doctorInfo.sex == '0' ? '男' : '女') + ' . ' + worker.doctorInfo.tel + ' . ' + worker.doctorInfo.idNo\"\r\n              :value=\"worker.id\"\r\n          />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"接纳人数\" prop=\"capacity\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.capacity\" type=\"number\"/>\r\n      </el-form-item>\r\n<!--      <el-form-item label=\"状态\" prop=\"disabled\" style=\"width: 40%;\">-->\r\n<!--        <el-switch-->\r\n<!--            v-model=\"editForm.disabled\"-->\r\n<!--            style=\"&#45;&#45;el-switch-on-color: #13ce66; &#45;&#45;el-switch-off-color: #ff4949\"-->\r\n<!--            active-text=\"启用\"-->\r\n<!--            inactive-text=\"禁用\"-->\r\n<!--            :active-value=\"false\"-->\r\n<!--            :inactive-value=\"true\"-->\r\n<!--            width=\"50px\"-->\r\n<!--            disabled-->\r\n<!--        />-->\r\n<!--      </el-form-item>-->\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-popconfirm title=\"您确定要删除这条记录吗？\" @confirm=\"handleDelete(editProps.id)\"\r\n                       v-if=\"hasAnyAuthority('business:schedule:delete') && editProps.id!=-1\">\r\n          <template #reference>\r\n            <el-button type=\"danger\" :icon=\"Delete\"/>\r\n          </template>\r\n        </el-popconfirm>\r\n        <el-button @click=\"handleReset(editProps)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\nimport {Delete} from '@element-plus/icons-vue'\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  editProps: {\r\n    type: Object,\r\n    required: true,\r\n    default: () => {\r\n      return {\r\n        id: -1, // 排班id\r\n        date: new Date(), // 日期\r\n        time: 0, // 班次\r\n        departmentId: 0, //科室id\r\n      }\r\n    }\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n    default: ''\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  date: '',\r\n  time: 0,\r\n  departmentId: 0,\r\n  roomId: '',\r\n  workerId: '',\r\n  capacity: 25,\r\n  disabled: false,\r\n});\r\n\r\n// 定义科室列表\r\nconst departmentList = ref([]);\r\n\r\n// 定义诊室列表\r\nconst roomList = ref([]);\r\n\r\n// 定义岗位列表\r\nconst workerList = ref([]);\r\n\r\n// 转换日期为字符串\r\nconst dateToStr = (dateDate) => {\r\n  let year = dateDate.getFullYear();\r\n  let month = (dateDate.getMonth() + 1);\r\n  let date = dateDate.getDate();\r\n  let dateStr = year + '-' + (month < 10 ? '0' + month : month) + '-' + (date < 10 ? '0' + date : date);\r\n  console.log('dateToStr dateDate=', dateDate, ', dateStr=', dateStr);\r\n  return dateStr;\r\n}\r\n\r\n// 转换字符串为日期\r\nconst strToDate = (dateStr) => {\r\n  let year = parseInt(dateStr.substring(0, 4));\r\n  let month = parseInt(dateStr.substring(5, 7));\r\n  let date = parseInt(dateStr.substring(8, 10));\r\n  // console.log(year, month, date);\r\n  let dateDate = new Date(year, month - 1, date, 0, 0, 0, 0);\r\n  console.log('strToDate dateStr=', dateStr, ', dateDate=', dateDate);\r\n  return dateDate;\r\n}\r\n\r\n// 定义表单校验规则\r\nconst validateSchedule = async (rule, value, callback) => {\r\n  // console.log(rule.field)\r\n  // console.log(value)\r\n\r\n  let url, h, date;\r\n  // 转换日期为字符串\r\n  let dateStr = dateToStr(editForm.value.date);\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  switch (rule.field) {\r\n    case 'date':\r\n      console.log('date=', value);\r\n      if (editForm.value.time == 0) {\r\n        h = 8;\r\n      } else {\r\n        h = 14;\r\n      }\r\n      date = new Date(value.getFullYear(), value.getMonth(), value.getDate(), h, 0, 0, 0);\r\n      if (date.getTime() < new Date().getTime()) {\r\n        callback(new Error('所选日期不得早于当前日期'));\r\n      } else {\r\n        url = '/api/bsns/schedules/checkSchedule?id=' + editForm.value.id + '&date=' + dateStr + '&time=' + editForm.value.time + '&workerId=' + editForm.value.workerId;\r\n      }\r\n      break;\r\n    default:\r\n      console.log('value=', value);\r\n      break;\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  // console.log(url);\r\n  if (url) {\r\n    // console.log('向后台发送请求');\r\n    let res = await AxiosUtil.post(url);\r\n    // console.log(res.data);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  date: [\r\n    {required: true, message: '日期不能为空', trigger: 'blur'},\r\n    {validator: validateSchedule, trigger: 'change'},\r\n    {validator: validateSchedule, trigger: 'blur'},\r\n  ],\r\n  time: [\r\n    {required: true, message: '班次不能为空', trigger: 'blur'},\r\n  ],\r\n  roomId: [\r\n    {required: true, message: '诊室不能为空', trigger: 'blur'},\r\n  ],\r\n  workerId: [\r\n    {required: true, message: '值班人员不能为空', trigger: 'blur'},\r\n  ],\r\n  capacity: [\r\n    {required: true, message: '接纳人数不能为空', trigger: 'blur'},\r\n  ],\r\n  disabled: [\r\n    {required: true, message: '状态不能为空', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (editProps) => {\r\n  if (editProps.id == -1) {\r\n    editForm.value = {\r\n      id: -1,\r\n      date: editProps.date,\r\n      time: editProps.time,\r\n      departmentId: editProps.departmentId,\r\n      roomId: '',\r\n      workerId: '',\r\n      capacity: 25,\r\n      disabled: false,\r\n    };\r\n    console.log('清空表单...');\r\n  } else {\r\n    let res = await AxiosUtil.get('/api/bsns/schedules/' + editProps.id);\r\n    console.log(res.data);\r\n    if (res.data.code == 20010) {\r\n      let schedule = res.data.schedule;\r\n      // 转换字符串为日期\r\n      schedule.date = strToDate(schedule.date);\r\n      // 更新表格数据\r\n      editForm.value = schedule;\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  }\r\n  // 向后台请求科室列表\r\n  let res1 = await AxiosUtil.get('/api/bsns/departments');\r\n  console.log(res1.data);\r\n  if (res1.data.code == 20010) {\r\n    let departments = [];\r\n    res1.data.departmentList.forEach(item => {\r\n      item.name = \"+ \" + item.name;\r\n      departments.push(item);\r\n      item.children.forEach(child => {\r\n        child.name = \"••• \" + child.name;\r\n        departments.push(child);\r\n      })\r\n    });\r\n    // 更新科室列表\r\n    departmentList.value = departments;\r\n  } else {\r\n    ElMessage({\r\n      message: res1.data.msg,\r\n      type: 'error',\r\n    });\r\n    // 清空科室列表\r\n    departmentList.value = [];\r\n  }\r\n  // 向后台请求诊室列表\r\n  let res2 = await AxiosUtil.get('/api/bsns/rooms/getByDepartmentId/' + editForm.value.departmentId);\r\n  console.log(res2.data);\r\n  if (res2.data.code == 20010) {\r\n    // 更新诊室列表\r\n    roomList.value = res2.data.roomList;\r\n  } else {\r\n    ElMessage({\r\n      message: res2.data.msg,\r\n      type: 'error',\r\n    });\r\n    // 清空诊室列表\r\n    roomList.value = [];\r\n  }\r\n  // 向后台请求岗位列表\r\n  let res3 = await AxiosUtil.get('/api/bsns/workers/getByDepartmentId/' + editForm.value.departmentId);\r\n  console.log(res3.data);\r\n  if (res3.data.code == 20010) {\r\n    // 更新岗位列表\r\n    workerList.value = res3.data.workerList;\r\n  } else {\r\n    ElMessage({\r\n      message: res3.data.msg,\r\n      type: 'error',\r\n    });\r\n    // 清空岗位列表\r\n    workerList.value = [];\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      // 转换日期为字符串\r\n      let dateStr = dateToStr(editForm.value.date);\r\n      let realEditForm = {\r\n        id: editForm.value.id,\r\n        date: dateStr,\r\n        time: editForm.value.time,\r\n        departmentId: editForm.value.departmentId,\r\n        roomId: editForm.value.roomId,\r\n        workerId: editForm.value.workerId,\r\n        capacity: editForm.value.capacity,\r\n        disabled: editForm.value.disabled,\r\n      }\r\n      if (editForm.value.id == -1) {\r\n        console.log('提交新增...');\r\n        url = '/api/bsns/schedules';\r\n        res = await AxiosUtil.post(url, realEditForm);\r\n        console.log(\"新增排班 res.data= \", res.data);\r\n      } else {\r\n        console.log('提交修改...');\r\n        url = '/api/bsns/schedules';\r\n        res = await AxiosUtil.put(url, realEditForm);\r\n        console.log(\"修改排班 res.data= \", res.data);\r\n      }\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 处理删除记录\r\nconst handleDelete = async (id) => {\r\n  id = [id];\r\n  console.log('删除...', id);\r\n  let url = '/api/bsns/schedules/' + id.join(',');\r\n  console.log('url=', url);\r\n  let res = await AxiosUtil.del(url);\r\n  console.log('res=', res);\r\n  if (res.data.code == 20040) {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'success',\r\n    });\r\n    emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n    handleCancel();\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.editProps);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","editDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","date","time","departmentId","roomId","workerId","capacity","disabled","departmentList","roomList","workerList","dateToStr","dateDate","year","getFullYear","month","getMonth","getDate","dateStr","console","log","strToDate","parseInt","substring","Date","validateSchedule","async","rule","value","callback","url","h","field","getTime","Error","res","AxiosUtil","data","code","msg","editFormRules","reactive","required","message","trigger","validator","editFormRef","handleReset","editProps","schedule","ElMessage","type","res1","departments","forEach","item","push","children","child","res2","res3","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","realEditForm","handleDelete","join","watch","__exports__"],"sourceRoot":""}