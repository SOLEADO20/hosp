{"version":3,"file":"js/866.dadc856d.js","mappings":"kPA0OA,EAAe,CACbA,KAAM,c,wPAtKFC,GAAoBC,EAAAA,EAAAA,IAAS,CAEjCC,MACE,OAAOC,EAAMH,iBACd,EACDI,IAAIC,GACFC,EAAK,2BAA4BD,EAClC,IAIGE,GAAWC,EAAAA,EAAAA,IAAI,CACnBC,IAAK,EACLV,KAAM,GACNW,KAAM,GACNC,UAAU,EACVC,KAAM,KAGFC,EAAeC,MAAOC,EAAMC,EAAOC,KAIvC,IAAIC,EAiBJ,GAfkB,QAAdH,EAAKI,MACHH,GAASA,EAAMI,OAAS,GAC1BH,EAAS,IAAII,MAAM,kBAEnBH,EAAM,+BAAiCX,EAASS,MAAMP,GAAK,SAAWO,EAEjD,QAAdD,EAAKI,QACVH,GAASA,EAAMI,OAAS,GAC1BH,EAAS,IAAII,MAAM,kBAEnBH,EAAM,+BAAiCX,EAASS,MAAMP,GAAK,SAAWO,GAKtEE,EAAK,CAEP,IAAII,QAAYC,EAAAA,GAAAA,KAAeL,GAEV,GAAjBI,EAAIE,KAAKd,KACXO,EAAS,IAAII,MAAMC,EAAIE,KAAKC,MAE5BR,GAEH,GAIGS,GAAgBC,EAAAA,EAAAA,IAAS,CAC7B5B,KAAM,CACJ,CAAC6B,UAAU,EAAMC,QAAS,WAAYC,QAAS,QAC/C,CAACC,UAAWlB,EAAciB,QAAS,UACnC,CAACC,UAAWlB,EAAciB,QAAS,SAErCpB,KAAM,CACJ,CAACkB,UAAU,EAAMC,QAAS,WAAYC,QAAS,QAC/C,CAACC,UAAWlB,EAAciB,QAAS,UACnC,CAACC,UAAWlB,EAAciB,QAAS,SAErCnB,SAAU,CACR,CAACiB,UAAU,EAAMC,QAAS,SAAUC,QAAS,SAE/ClB,KAAM,CACJ,CAACgB,UAAU,EAAOI,IAAK,IAAKH,QAAS,iBAAkBC,QAAS,WAK9DG,GAAczB,EAAAA,EAAAA,IAAI,MAGlB0B,EAAcpB,UAClB,IAAW,GAAPL,EACFF,EAASS,MAAQ,CACfP,IAAK,EACLV,KAAM,GACNW,KAAM,GACNC,UAAU,EACVC,KAAM,IAERuB,QAAQC,IAAI,eACP,CACL,IAAId,QAAYC,EAAAA,GAAAA,IAAc,kBAAoBd,GAElD,GADA0B,QAAQC,IAAId,EAAIE,MACK,OAAjBF,EAAIE,KAAKd,KAAe,CAC1B,IAAI2B,EAAOf,EAAIE,KAAKa,KAEpB9B,EAASS,MAAQqB,CAClB,MACCC,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,UAGVJ,QAAQC,IAAI,WACb,GAIGI,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,oBAChBC,MAAK,KACJF,GAAM,IAEPG,OAAM,QAJX,EAUIC,EAAe,KACnB7C,EAAkBgB,OAAQ,CAA1B,EAII8B,EAAgB,KAEpBb,EAAYjB,MAAM+B,UAASjC,UACzB,GAAIkC,EAAO,CAET,IAAI9B,EAAKI,GACiB,GAAtBf,EAASS,MAAMP,IACjB0B,QAAQC,IAAI,WACZlB,EAAM,iBACNI,QAAYC,EAAAA,GAAAA,KAAeL,EAAKX,EAASS,OACzCmB,QAAQC,IAAI,kBAAmBd,EAAIE,QAEnCW,QAAQC,IAAI,WACZlB,EAAM,iBACNI,QAAYC,EAAAA,GAAAA,IAAcL,EAAKX,EAASS,OACxCmB,QAAQC,IAAI,kBAAmBd,EAAIE,OAEhB,OAAjBF,EAAIE,KAAKd,MAAkC,OAAjBY,EAAIE,KAAKd,OACrC4B,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,YAERjC,EAAK,gBACLuC,MAEAP,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,SAGX,IA5BH,E,OAiCFU,EAAAA,EAAAA,IAAMjD,GAAoBK,IACR,GAAZA,GACF6B,EAAY/B,EAAMM,GACnB,I,s2DChOH,MAAMyC,EAAc,EAEpB,O,kKCwKA,EAAe,CACbnD,KAAM,mB,uNA7HFoD,GAAyBlD,EAAAA,EAAAA,IAAS,CAEtCC,MACE,OAAOC,EAAMgD,sBACd,EACD/C,IAAIC,GACFC,EAAK,gCAAiCD,EACvC,IAIG+C,GAAgB5C,EAAAA,EAAAA,IAAI,CACxBC,IAAK,IAID4C,EAAY,CAChBC,MAAO,OACPC,SAAU,YAINC,GAAWhD,EAAAA,EAAAA,IAAI,IAGfiD,GAAUjD,EAAAA,EAAAA,IAAI,MAGdkD,EAAoB,CAAClC,EAAMmC,EAASC,KAAhB,EAKpB1B,EAAcpB,UAClB,IACE,IAAI+C,QAAatC,EAAAA,GAAAA,IAAc,kBAC3BuC,QAAavC,EAAAA,GAAAA,IAAc,kBAAoBd,GAGnD,GAFA0B,QAAQC,IAAIyB,EAAKrC,MACjBW,QAAQC,IAAI0B,EAAKtC,MACK,OAAlBqC,EAAKrC,KAAKd,MAAmC,OAAlBoD,EAAKtC,KAAKd,KAAe,CAEtD8C,EAASxC,MAAQ6C,EAAKrC,KAAKuC,aAE3B,IAAIC,EAAoB,GACxBF,EAAKtC,KAAKa,KAAK4B,SAASC,SAAQC,IAC9BH,EAAkBI,KAAKD,EAAK1D,GAA5B,IAEFgD,EAAQzC,MAAMqD,eAAeL,GAE7BZ,EAAcpC,MAAQ8C,EAAKtC,KAAKa,IACjC,MACCC,EAAAA,EAAAA,IAAU,CACRT,QAASgC,EAAKrC,KAAKC,IACnBc,KAAM,WAERD,EAAAA,EAAAA,IAAU,CACRT,QAASiC,EAAKtC,KAAKC,IACnBc,KAAM,UAGVJ,QAAQC,IAAI,WAGb,CAFC,MAAOkC,GACPnC,QAAQC,IAAI,KAAMkC,EACnB,GAIG9B,EAAeC,IACnBC,EAAAA,EAAAA,QAAqB,oBAChBC,MAAK,KACJF,GAAM,IAEPG,OAAM,QAJX,EAUIC,EAAe,KACnBM,EAAuBnC,OAAQ,CAA/B,EAII8B,EAAgBhC,UACpB,IAAII,EAAKI,EACTa,QAAQC,IAAI,aACZlB,EAAM,4BAA8BkC,EAAcpC,MAAMP,GACxD,IACEa,QAAYC,EAAAA,GAAAA,IAAcL,EAAKuC,EAAQzC,MAAMuD,kBAC7CpC,QAAQC,IAAI,uBAAwBd,EAAIE,MACnB,OAAjBF,EAAIE,KAAKd,OACX4B,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,YAERjC,EAAK,gBACLuC,MAEAP,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,SASX,CANC,MAAO+B,GACPnC,QAAQC,IAAI,KAAMkC,IAClBhC,EAAAA,EAAAA,IAAU,CACRT,QAAS,QAAUyC,EACnB/B,KAAM,SAET,G,OAIHU,EAAAA,EAAAA,IAAME,GAAyB9C,IACb,GAAZA,GACF6B,EAAY/B,EAAMM,GACnB,I,k7BClKH,MAAMyC,EAAc,EAEpB,O,6LC8YA,QAAe,CACbnD,KAAM,S,gCA3SR,MAAMyE,GAAY7C,EAAAA,EAAAA,IAAS,CACzB8C,MAAO,GACPC,YAAa,EACbC,SAAU,KAINF,GAAQjE,EAAAA,EAAAA,IAAI,IAGZoE,GAAQpE,EAAAA,EAAAA,IAAI,IAGZqE,GAAyBrE,EAAAA,EAAAA,KAAI,GAG7BsE,GAAoBtE,EAAAA,EAAAA,IAAI,IAGxBuE,GAAiBvE,EAAAA,EAAAA,IAAI,KAGrBwE,GAAmBxE,EAAAA,EAAAA,KAAI,GAGvByE,GAAYzE,EAAAA,EAAAA,IAAI,CACpB,CACEC,GAAI,YACJV,KAAM,QACNW,KAAM,KACNE,KAAM,SACNqD,SAAU,CACR,CACE,GAAM,EACN,KAAQ,QAEV,CACE,GAAM,EACN,KAAQ,QAEV,CACE,GAAM,EACN,KAAQ,SAGZtD,UAAU,EACVuE,WAAY,sBACZC,WAAY,uBAEd,CACE1E,GAAI,WACJV,KAAM,OACNW,KAAM,SACNE,KAAM,WACNqD,SAAU,CACR,CACE,GAAM,EACN,KAAQ,QAEV,CACE,GAAM,EACN,KAAQ,QAEV,CACE,GAAM,EACN,KAAQ,SAGZtD,UAAU,EACVuE,WAAY,sBACZC,WAAY,yBAKVnF,GAAoBQ,EAAAA,EAAAA,KAAI,GAGxB2C,GAAyB3C,EAAAA,EAAAA,KAAI,GAG7B4E,GAAS5E,EAAAA,EAAAA,KAAK,GAGd6E,GAAY7E,EAAAA,EAAAA,IAAI,IAMhB8E,EAAc,KAElBd,EAAUE,YAAc,EAIpBF,EAAUC,OAASA,EAAMzD,OAC3BmB,QAAQC,IAAI,iBACZmD,KAEAf,EAAUC,MAAQA,EAAMzD,KACzB,EAIGwE,EAAe1E,UACdL,EAQHA,EAAK,CAACA,IANNA,EAAK,GACLqE,EAAkB9D,MAAMkD,SAAQuB,IAC9BhF,EAAG2D,KAAKqB,EAAKhF,GAAb,KAMJ0B,QAAQC,IAAI,QAAS3B,GACrB,IAAIS,EAAM,kBAAoBT,EAAGiF,KAAK,KACtCvD,QAAQC,IAAI,OAAQlB,GACpB,IAAII,QAAYC,EAAAA,GAAAA,IAAcL,GAC9BiB,QAAQC,IAAI,OAAQd,GACC,OAAjBA,EAAIE,KAAKd,OACX4B,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,kBAEFgD,MAENjD,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,SAET,EAIGoD,EAAoBlF,IACxB0B,QAAQC,IAAI,UAAW3B,GACvB2E,EAAOpE,MAAQP,EACf0C,EAAuBnC,OAAQ,CAA/B,EAII4E,EAAcnF,IACdA,GACF0B,QAAQC,IAAI,QAAS3B,GACrB2E,EAAOpE,MAAQP,EACf4E,EAAUrE,MAAQ,SAElBmB,QAAQC,IAAI,QAAS3B,GACrB2E,EAAOpE,OAAS,EAChBqE,EAAUrE,MAAQ,QAEpBhB,EAAkBgB,OAAQ,CAA1B,EAOI6E,EAAoBC,IACxB3D,QAAQC,IAAK,GAAE0D,mBAAf,EAIIC,EAAuBD,IAC3B3D,QAAQC,IAAK,iBAAgB0D,IAA7B,EAIIE,EAAyBC,IAC7BnB,EAAkB9D,MAAQiF,EAE1BpB,EAAuB7D,MAAuB,GAAfiF,EAAK7E,OACpCe,QAAQC,IAAI,QAAS6D,EAArB,EAIIC,EAAoBpF,UAIxBqF,EAAIC,SAAU,EACd,IAAIlF,EAAM,iCAAmCiF,EAAI1F,GAAK,IAAM0F,EAAIxF,SAIhE,IACE,IAAIW,QAAYC,EAAAA,GAAAA,IAAcL,GACT,OAAjBI,EAAIE,KAAKd,MACX4B,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,cAGRD,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,UAER4D,EAAIxF,UAAYwF,EAAIxF,SASvB,CAPC,MAAO2D,GACPnC,QAAQC,IAAI,KAAMkC,IAClBhC,EAAAA,EAAAA,IAAU,CACRT,QAAS,QAAUyC,EACnB/B,KAAM,UAER4D,EAAIxF,UAAYwF,EAAIxF,QACrB,CAGDwF,EAAIC,SAAU,CAAd,EAIIC,EAAc,CAACrF,EAAOmF,IACnBA,EAAIxF,WAAaK,EAIpBuE,EAAYzE,UAChB,IAAII,EAAM,kBAAoBoF,IAAAA,UAAa9B,GAC3CrC,QAAQC,IAAI,OAAQlB,GAEpB,IAAII,QAAYC,EAAAA,GAAAA,IAAcL,GAE9B,GADAiB,QAAQC,IAAI,eAAgBd,GACP,OAAjBA,EAAIE,KAAKd,KAAe,CAE1B,IAAI6F,EAAWjF,EAAIE,KAAK+E,SACxBA,EAASrC,SAAQ7B,IACf,IAAI4B,EAAW,GACf5B,EAAK4B,SAASC,SAAQC,IACfa,EAAiBhE,MAGH,KAAbmD,EAAK5B,MAAa0B,EAASG,KAAKD,GAFnB,KAAbA,EAAK5B,MAAa0B,EAASG,KAAKD,EAGrC,IAEH9B,EAAK4B,SAAWA,CAAhB,IAEFgB,EAAUjE,MAAQuF,EAElB3B,EAAM5D,MAAQM,EAAIE,KAAKoD,KACxB,MACCtC,EAAAA,EAAAA,IAAU,CACRT,QAASP,EAAIE,KAAKC,IAClBc,KAAM,SAET,EAGHgD,KAGAtC,EAAAA,EAAAA,IAAMuB,GAAW1D,MAAO0F,EAASC,KAE/B,GAAID,EAAQ7B,UAAY8B,EAAQ9B,SAAU,CACxC,IAAI+B,EAAcD,EAAQ9B,UAAY8B,EAAQ/B,YAAc,GAAK,EACjE8B,EAAQ9B,YAAciC,KAAKC,KAAKF,EAAcF,EAAQ7B,SACvD,CACDxC,QAAQC,IAAIyE,KAAKC,MAAQ,cACzB3E,QAAQC,IAAIoC,SACNe,GAAN,IAIF,MAAMwB,EAAiB,IAAIC,gBAAgBC,IACzC,IAAK,MAAMC,KAASD,EAElB,GAAuB,YAAnBC,EAAMC,OAAO1G,GAAkB,CACjC,IAAI2G,EAIJ,GAAIF,EAAMG,eAAgB,CAExB,MAAMA,EAAiBC,MAAMC,QAAQL,EAAMG,gBAAkBH,EAAMG,eAAe,GAAKH,EAAMG,eAC7FD,EAAiBC,EAAeG,SACjC,MACCJ,EAAiBF,EAAMO,YAAYC,OAGrC3C,EAAe/D,MAAQoG,CAExB,CACF,I,OAIHO,EAAAA,EAAAA,KAAU,KACR,MAAMC,EAAWC,SAASC,eAAe,YACzCf,EAAegB,QAAQH,EAAvB,I,sjKCtYF,MAAM1E,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://hosp/./src/views/sys/role/EditDialog.vue","webpack://hosp/./src/views/sys/role/EditDialog.vue?2132","webpack://hosp/./src/views/sys/role/GrantMenuDialog.vue","webpack://hosp/./src/views/sys/role/GrantMenuDialog.vue?81ec","webpack://hosp/./src/views/sys/role/index.vue","webpack://hosp/./src/views/sys/role/index.vue?54ba"],"sourcesContent":["<template>\r\n  <el-dialog v-model=\"editDialogVisible\" :title=\"title\" :before-close=\"handleClose\" width=\"600px\" draggable>\r\n    <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        inline\r\n        label-width=\"80px\"\r\n        label-position=\"right\"\r\n        status-icon>\r\n      <el-form-item label=\"角色名称\" prop=\"name\" style=\"width: 48%;\">\r\n        <el-input v-model=\"editForm.name\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"角色代号\" prop=\"code\" style=\"width: 40%;\">\r\n        <el-input v-model=\"editForm.code\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"状态\" prop=\"disabled\" style=\"width: 40%;\">\r\n        <el-switch\r\n            v-model=\"editForm.disabled\"\r\n            style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\"\r\n            active-text=\"启用\"\r\n            inactive-text=\"禁用\"\r\n            :active-value=\"false\"\r\n            :inactive-value=\"true\"\r\n            width=\"50px\"\r\n        />\r\n      </el-form-item>\r\n      <el-form-item label=\"备注\" prop=\"note\" style=\"width: 100%;\">\r\n        <el-input v-model=\"editForm.note\" type=\"textarea\" :rows=\"5\"/>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n    default: ''\r\n  }\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“编辑”对话框的显示状态\r\nconst editDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  name: '',\r\n  code: '',\r\n  disabled: false,\r\n  note: '',\r\n});\r\n\r\nconst validateRole = async (rule, value, callback) => {\r\n  // console.log(rule.field)\r\n  // console.log(value)\r\n\r\n  let url;\r\n  // 基础格式验证通过后，才给 url 赋值。\r\n  if (rule.field == 'name') {\r\n    if (value && value.length > 16) {\r\n      callback(new Error('角色名称长度不可超过16位'));\r\n    } else {\r\n      url = '/api/sys/roles/checkRole?id=' + editForm.value.id + '&name=' + value;\r\n    }\r\n  } else if (rule.field == 'code') {\r\n    if (value && value.length > 16) {\r\n      callback(new Error('角色代号长度不可超过16位'));\r\n    } else {\r\n      url = '/api/sys/roles/checkRole?id=' + editForm.value.id + '&code=' + value;\r\n    }\r\n  }\r\n  // url 有值，才向后台发送验证请求。\r\n  // console.log(url);\r\n  if (url) {\r\n    // console.log('向后台发送请求');\r\n    let res = await AxiosUtil.post(url);\r\n    // console.log(res.data);\r\n    if (res.data.code == 1) {\r\n      callback(new Error(res.data.msg));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  name: [\r\n    {required: true, message: '角色名称不能为空', trigger: 'blur'},\r\n    {validator: validateRole, trigger: 'change'},\r\n    {validator: validateRole, trigger: 'blur'},\r\n  ],\r\n  code: [\r\n    {required: true, message: '角色代号不能为空', trigger: 'blur'},\r\n    {validator: validateRole, trigger: 'change'},\r\n    {validator: validateRole, trigger: 'blur'},\r\n  ],\r\n  disabled: [\r\n    {required: true, message: '状态不能为空', trigger: 'blur'},\r\n  ],\r\n  note: [\r\n    {required: false, max: 192, message: '备注信息不可超过192个字符', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  if (id == -1) {\r\n    editForm.value = {\r\n      id: -1,\r\n      name: '',\r\n      code: '',\r\n      disabled: false,\r\n      note: '',\r\n    };\r\n    console.log('清空表单...');\r\n  } else {\r\n    let res = await AxiosUtil.get('/api/sys/roles/' + id);\r\n    console.log(res.data);\r\n    if (res.data.code == 20010) {\r\n      let role = res.data.role;\r\n      // 更新表格数据\r\n      editForm.value = role;\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      if (editForm.value.id == -1) {\r\n        console.log('提交新增...');\r\n        url = '/api/sys/roles';\r\n        res = await AxiosUtil.post(url, editForm.value);\r\n        console.log(\"新增角色 res.data= \", res.data);\r\n      } else {\r\n        console.log('提交修改...');\r\n        url = '/api/sys/roles';\r\n        res = await AxiosUtil.put(url, editForm.value);\r\n        console.log(\"修改角色 res.data= \", res.data);\r\n      }\r\n      if (res.data.code == 20020 || res.data.code == 20030) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-dialog v-model=\"grantMenuDialogVisible\" title=\"分配权限\" :before-close=\"handleClose\" width=\"30%\" draggable>\r\n    <el-form :model=\"grantMenuForm\">\r\n      <el-form-item>\r\n        <el-tree\r\n            :props=\"treeProps\"\r\n            :data=\"treeData\"\r\n            ref=\"treeRef\"\r\n            node-key=\"id\"\r\n            show-checkbox\r\n            default-expand-all\r\n            check-strictly\r\n            @check-change=\"handleCheckChange\"\r\n        />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"handleReset(id)\">重置</el-button>\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">确定</el-button>\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessageBox, ElMessage} from \"element-plus\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  grantMenuDialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n    default: -1\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:grantMenuDialogVisible', 'handleSubmit']);\r\n\r\n// 定义“分配权限”对话框的显示状态\r\nconst grantMenuDialogVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.grantMenuDialogVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:grantMenuDialogVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义表单数据\r\nconst grantMenuForm = ref({\r\n  id: -1,\r\n});\r\n\r\n// 定义Tree树形组件属性\r\nconst treeProps = {\r\n  label: 'name',\r\n  children: 'children',\r\n}\r\n\r\n// 定义Tree树形组件的展示数据（即所有可选项）\r\nconst treeData = ref([]);\r\n\r\n// 定义Tree树形组件引用\r\nconst treeRef = ref(null);\r\n\r\n// 处理选择集的变化\r\nconst handleCheckChange = (data, checked, indeterminate) => {\r\n  // console.log(data, checked, indeterminate)\r\n}\r\n\r\n// 表单重置事件\r\nconst handleReset = async (id) => {\r\n  try {\r\n    let res1 = await AxiosUtil.get('/api/sys/menus');\r\n    let res2 = await AxiosUtil.get('/api/sys/roles/' + id);\r\n    console.log(res1.data);\r\n    console.log(res2.data);\r\n    if (res1.data.code == 20010 && res2.data.code == 20010) {\r\n      // 更新树形组件的数据源\r\n      treeData.value = res1.data.menuListTree;\r\n      // 更新树形组件的已选项\r\n      let checkedMenuIdList = [];\r\n      res2.data.role.menuList.forEach(menu => {\r\n        checkedMenuIdList.push(menu.id);\r\n      });\r\n      treeRef.value.setCheckedKeys(checkedMenuIdList);\r\n      // 更新表单数据\r\n      grantMenuForm.value = res2.data.role;\r\n    } else {\r\n      ElMessage({\r\n        message: res1.data.msg,\r\n        type: 'error',\r\n      });\r\n      ElMessage({\r\n        message: res2.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n    console.log('从后台填充...');\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n  }\r\n}\r\n\r\n// 定义关闭对话框前的确认操作\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('确认在未保存的情况下关闭对话框？')\r\n      .then(() => {\r\n        done()\r\n      })\r\n      .catch(() => {\r\n        // catch error\r\n      })\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  grantMenuDialogVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = async () => {\r\n  let url, res;\r\n  console.log('提交权限分配...');\r\n  url = '/api/sys/roles/grantMenu/' + grantMenuForm.value.id;\r\n  try {\r\n    res = await AxiosUtil.put(url, treeRef.value.getCheckedKeys());\r\n    console.log(\"分配给角色权限菜单 res.data= \", res.data);\r\n    if (res.data.code == 20030) {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'success',\r\n      });\r\n      emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n      handleCancel(); // 关闭对话框\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n    }\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n    ElMessage({\r\n      message: '操作失败！' + e,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(grantMenuDialogVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset(props.id);\r\n  }\r\n})\r\n\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"GrantMenuDialog\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./GrantMenuDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GrantMenuDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-container>\r\n    <!--操作台-->\r\n    <el-header class=\"operatingFloor\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"7\">\r\n          <el-input v-model=\"query\" placeholder=\"搜索角色...\" @keyup.enter=\"handleQuery\" clearable/>\r\n        </el-col>\r\n        <el-button type=\"primary\" :icon=\"Search\" @click=\"handleQuery\">查询</el-button>\r\n        <el-button type=\"success\" :icon=\"DocumentAdd\" @click=\"handleEdit(null)\" v-if=\"hasAnyAuthority('system:role:add')\">新增</el-button>\r\n        <el-popconfirm title=\"您确定要批量删除这些记录吗？\" @confirm=\"handleDelete(null)\" v-if=\"hasAnyAuthority('system:role:delete')\">\r\n          <template #reference>\r\n            <el-button type=\"danger\" :icon=\"Delete\" :disabled=\"batchDeleteBtnDisabled\">批量删除</el-button>\r\n          </template>\r\n        </el-popconfirm>\r\n        <el-checkbox label=\"切换菜单预览为父级\" v-model=\"isShowParentMenu\" @change=\"fetchData\" style=\"margin-left: 12px;\"/>\r\n      </el-row>\r\n    </el-header>\r\n    <el-main style=\"padding: 5px; background: aliceblue;\" id=\"mainView\">\r\n      <el-table\r\n          :data=\"tableData\"\r\n          :max-height=\"tableMaxHeight\"\r\n          :default-sort=\"{ prop: 'id', order: 'ascending' }\"\r\n          @selection-change=\"handleSelectionChange\"\r\n          style=\"width: 100%\"\r\n          highlight-current-row\r\n          stripe>\r\n        <el-table-column type=\"selection\" width=\"40\" align=\"center\"/>\r\n        <el-table-column prop=\"id\" label=\"角色ID\" width=\"90\" header-align=\"center\" sortable fixed/>\r\n        <el-table-column prop=\"name\" label=\"角色名称\" width=\"120\" header-align=\"center\" sortable fixed/>\r\n        <el-table-column prop=\"code\" label=\"角色代号\" width=\"100\" header-align=\"center\"/>\r\n        <el-table-column prop=\"disabled\" label=\"状态\" width=\"76\" align=\"center\"\r\n                         :filters=\"[{ text: '启用', value: false },{ text: '禁用', value: true },]\"\r\n                         :filter-method=\"filterState\">\r\n          <template #default=\"{row}\">\r\n            <el-switch\r\n                v-model=\"row.disabled\"\r\n                inline-prompt\r\n                style=\"--el-switch-on-color: #13ce66; --el-switch-off-color: #ff4949\"\r\n                active-text=\"启用\"\r\n                inactive-text=\"禁用\"\r\n                :active-value=\"false\"\r\n                :inactive-value=\"true\"\r\n                width=\"50px\"\r\n                :loading=\"row.loading\"\r\n                @change=\"handleStateChange(row)\"\r\n                :disabled=\"!hasAnyAuthority('system:role:edit')\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160\" header-align=\"center\" sortable/>\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\" width=\"160\" header-align=\"center\" sortable/>\r\n        <el-table-column prop=\"note\" label=\"备注\" width=\"200\" header-align=\"center\"/>\r\n        <el-table-column prop=\"menuList\" label=\"菜单预览\" min-width=\"400\" align=\"center\">\r\n          <template #default=\"scope\">\r\n            <el-tag type=\"warning\" size=\"small\" v-for=\"item in scope.row.menuList\" :key=\"item.id\">{{\r\n                item.name\r\n              }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"250\" align=\"right\" header-align=\"center\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" :icon=\"Tools\" @click=\"handleGrantMenus(scope.row.id)\" v-if=\"hasAnyAuthority('system:role:edit')\">分配权限</el-button>\r\n            <el-button type=\"primary\" :icon=\"Edit\" @click=\"handleEdit(scope.row.id)\" v-if=\"hasAnyAuthority('system:role:edit')\"/>\r\n            <el-popconfirm title=\"您确定要删除这条记录吗？\" @confirm=\"handleDelete(scope.row.id)\" v-if=\"hasAnyAuthority('system:role:delete')\">\r\n              <template #reference>\r\n                <el-button type=\"danger\" :icon=\"Delete\"/>\r\n              </template>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-main>\r\n    <el-footer style=\"background: powderblue;height: 32px;display: flex;align-items: center;justify-content: flex-end;\">\r\n      <el-pagination\r\n          v-model:currentPage=\"queryForm.currentPage\"\r\n          v-model:page-size=\"queryForm.pageSize\"\r\n          :page-sizes=\"[5, 10, 20, 50, 100]\"\r\n          small\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n      />\r\n    </el-footer>\r\n  </el-container>\r\n  <EditDialog v-model:edit-dialog-visible=\"editDialogVisible\" :id=\"editId\" :title=\"editTitle\"\r\n              @handleSubmit=\"fetchData\"/>\r\n  <GrantMenuDialog v-model:grant-menu-dialog-visible=\"grantMenuDialogVisible\" :id=\"editId\" @handleSubmit=\"fetchData\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport {Search, DocumentAdd, Delete, Tools, Edit,} from '@element-plus/icons-vue'\r\nimport {onMounted, reactive, ref, watch} from \"vue\";\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport EditDialog from \"./EditDialog\";\r\nimport GrantMenuDialog from \"./GrantMenuDialog\";\r\nimport qs from \"qs\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\n/*====以下为一些数据的定义====*/\r\n\r\n// 定义表单的查询查询条件\r\nconst queryForm = reactive({\r\n  query: '', // 查找的字符\r\n  currentPage: 1, // 当前页数\r\n  pageSize: 10, // 页面记录容量\r\n});\r\n\r\n// 定义临时的查询关键词\r\nconst query = ref('');\r\n\r\n// 定义从分页组件的总记录数\r\nconst total = ref(40);\r\n\r\n// 定义批量删除按钮是否禁用\r\nconst batchDeleteBtnDisabled = ref(true);\r\n\r\n// 定义已选择的记录\r\nconst multipleSelection = ref([]);\r\n\r\n// 定义表格的最大高度\r\nconst tableMaxHeight = ref(400);\r\n\r\n// 定义是否切换菜单预览为父级\r\nconst isShowParentMenu = ref(false);\r\n\r\n// 定义表格数据\r\nconst tableData = ref([\r\n  {\r\n    id: 10075286712,\r\n    name: '超级管理员',\r\n    code: 'su',\r\n    note: '拥有最高权限',\r\n    menuList: [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"用户管理\",\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"name\": \"角色管理\",\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"name\": \"权限管理\",\r\n      }\r\n    ],\r\n    disabled: false,\r\n    createTime: '2022-09-23 20:10:01',\r\n    updateTime: '2022-10-18 18:16:18',\r\n  },\r\n  {\r\n    id: 1007448077,\r\n    name: '管理员1',\r\n    code: 'admin1',\r\n    note: '拥有部分高级权限',\r\n    menuList: [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"用户管理\",\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"name\": \"角色管理\",\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"name\": \"权限管理\",\r\n      }\r\n    ],\r\n    disabled: false,\r\n    createTime: '2022-09-23 20:10:01',\r\n    updateTime: '2022-10-18 18:16:18',\r\n  },\r\n]);\r\n\r\n// 定义编辑对话框的显示状态\r\nconst editDialogVisible = ref(false);\r\n\r\n// // 定义角色分配对话框的显示状态\r\nconst grantMenuDialogVisible = ref(false);\r\n\r\n// 定义传入编辑对话框的id值\r\nconst editId = ref(-1);\r\n\r\n// 定义传入编辑对话框的title值\r\nconst editTitle = ref('');\r\n\r\n\r\n/*====以下为各按钮的点击事件====*/\r\n\r\n// 处理通过关键字查询\r\nconst handleQuery = () => {\r\n  // 设置当前页码为1\r\n  queryForm.currentPage = 1;\r\n  // 由于设置了当queryForm发生变化时才从后台重新拉取数据，\r\n  // 因此若查找的字符实际上未发生变化则需要手动刷新数据\r\n  // 即先点查询按钮，再进行翻页等操作\r\n  if (queryForm.query == query.value) {\r\n    console.log('手动刷新：关键字不变...');\r\n    fetchData();\r\n  } else {\r\n    queryForm.query = query.value;\r\n  }\r\n}\r\n\r\n// 处理删除记录\r\nconst handleDelete = async (id) => {\r\n  if (!id) {\r\n    // 不传入参数时，为批量删除\r\n    id = [];\r\n    multipleSelection.value.forEach(item => {\r\n      id.push(item.id);\r\n    });\r\n  } else {\r\n    // 不传入参数时，为单个删除\r\n    id = [id];\r\n  }\r\n  console.log('删除...', id);\r\n  let url = '/api/sys/roles/' + id.join(',');\r\n  console.log('url=', url);\r\n  let res = await AxiosUtil.del(url);\r\n  console.log('res=', res);\r\n  if (res.data.code == 20040) {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'success',\r\n    });\r\n    await fetchData();\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 处理分配权限\r\nconst handleGrantMenus = (id) => {\r\n  console.log('分配角色...', id);\r\n  editId.value = id;\r\n  grantMenuDialogVisible.value = true;\r\n}\r\n\r\n// 处理新增、编辑\r\nconst handleEdit = (id) => {\r\n  if (id) {\r\n    console.log('修改...', id);\r\n    editId.value = id;\r\n    editTitle.value = '角色修改';\r\n  } else {\r\n    console.log('新增...', id);\r\n    editId.value = -1;\r\n    editTitle.value = '角色添加';\r\n  }\r\n  editDialogVisible.value = true;\r\n}\r\n\r\n\r\n/*====以下为一些监听以及其他函数====*/\r\n\r\n// 处理页面容量的改变\r\nconst handleSizeChange = (val) => {\r\n  console.log(`${val} items per page`);\r\n}\r\n\r\n// 处理页码的改变\r\nconst handleCurrentChange = (val) => {\r\n  console.log(`current page: ${val}`);\r\n}\r\n\r\n// 处理选择集的改变\r\nconst handleSelectionChange = (list) => {\r\n  multipleSelection.value = list;\r\n  // 更新批量删除按钮的可用状态\r\n  batchDeleteBtnDisabled.value = list.length == 0;\r\n  console.log('新选择= ', list);\r\n}\r\n\r\n// 处理状态的改变\r\nconst handleStateChange = async (row) => {\r\n  // console.log('状态变化...', row.id);\r\n\r\n  // 先设置元素为加载状态\r\n  row.loading = true;\r\n  let url = '/api/sys/roles/updateDisabled/' + row.id + '/' + row.disabled;\r\n  // console.log(url);\r\n\r\n  // 为保证程序能正常走完，发送请求要用 try...catch 包围\r\n  try {\r\n    let res = await AxiosUtil.put(url);\r\n    if (res.data.code == 20030) {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'success',\r\n      });\r\n    } else {\r\n      ElMessage({\r\n        message: res.data.msg,\r\n        type: 'error',\r\n      });\r\n      row.disabled = !row.disabled; // 恢复显示为修改前的状态\r\n    }\r\n  } catch (e) {\r\n    console.log('e=', e);\r\n    ElMessage({\r\n      message: '操作失败！' + e,\r\n      type: 'error',\r\n    });\r\n    row.disabled = !row.disabled; // 恢复显示为修改前的状态\r\n  }\r\n\r\n  // 请求结束后取消元素的加载状态\r\n  row.loading = false;\r\n}\r\n\r\n// 处理按状态筛选记录\r\nconst filterState = (value, row) => {\r\n  return row.disabled === value;\r\n}\r\n\r\n// 从后台获取数据\r\nconst fetchData = async () => {\r\n  let url = '/api/sys/roles?' + qs.stringify(queryForm);\r\n  console.log('url=', url);\r\n  // 从后台获取数据\r\n  let res = await AxiosUtil.get(url);\r\n  console.log(\"更新角色列表 res= \", res);\r\n  if (res.data.code == 20010) {\r\n    // 对权限菜单预览进行筛选\r\n    let roleList = res.data.roleList;\r\n    roleList.forEach(role => {\r\n      let menuList = [];\r\n      role.menuList.forEach(menu => {\r\n        if (!isShowParentMenu.value) {\r\n          if (menu.type == 'M') menuList.push(menu);\r\n        } else {\r\n          if (menu.type == 'F') menuList.push(menu);\r\n        }\r\n      });\r\n      role.menuList = menuList;\r\n    });\r\n    tableData.value = roleList;\r\n    // 更新分页组件总记录数\r\n    total.value = res.data.total;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\nfetchData();\r\n\r\n// 当表单的查询查询条件发生变化时，重新拉取数据\r\nwatch(queryForm, async (newForm, oldForm) => {\r\n  // 如果改变每页容量，则确保当前页的第一条记录在新的结果中仍然出现\r\n  if (newForm.pageSize != oldForm.pageSize) {\r\n    let currentItem = oldForm.pageSize * (oldForm.currentPage - 1) + 1;\r\n    newForm.currentPage = Math.ceil(currentItem / newForm.pageSize);\r\n  }\r\n  console.log(Date.now() + ' 重新拉取数据...');\r\n  console.log(queryForm);\r\n  await fetchData();\r\n});\r\n\r\n// 新建一个ResizeObserver用于监视表格容器尺寸的变化\r\nconst resizeObserver = new ResizeObserver((entries) => {\r\n  for (const entry of entries) {\r\n    // 仅对指定id的元素生效\r\n    if (entry.target.id == 'mainView') {\r\n      let mainViewHeight;\r\n      // 由于兼容性问题，获取元素高度时需谨慎\r\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserver\r\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/ResizeObserverEntry\r\n      if (entry.contentBoxSize) {\r\n        // Firefox implements `contentBoxSize` as a single content rect, rather than an array\r\n        const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\r\n        mainViewHeight = contentBoxSize.blockSize;\r\n      } else {\r\n        mainViewHeight = entry.contentRect.height;\r\n      }\r\n      // 设置表格的最大高度为表格容器的高度\r\n      tableMaxHeight.value = mainViewHeight;\r\n      // console.log('mainViewHeight= ', mainViewHeight);\r\n    }\r\n  }\r\n});\r\n\r\n// 在组件完成初始渲染并创建 DOM 节点后开始监视表格容器\r\nonMounted(() => {\r\n  const mainView = document.getElementById('mainView');\r\n  resizeObserver.observe(mainView);\r\n});\r\n\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"index\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*操作台*/\r\n.operatingFloor {\r\n  /*display: flex;*/\r\n  /*align-items: center; !*align-items 属性可以使元素在交叉轴方向对齐*!*/\r\n  /*justify-content: flex-start; !*justify-content属性用来使元素在主轴方向上对齐*!*/\r\n  height: 48px;\r\n  padding: 8px 10px;\r\n\r\n}\r\n\r\n.el-tag--small {\r\n  margin-left: 5px;\r\n}\r\n\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=452a2bf6&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-452a2bf6\"]])\n\nexport default __exports__"],"names":["name","editDialogVisible","computed","get","props","set","newValue","emit","editForm","ref","id","code","disabled","note","validateRole","async","rule","value","callback","url","field","length","Error","res","AxiosUtil","data","msg","editFormRules","reactive","required","message","trigger","validator","max","editFormRef","handleReset","console","log","role","ElMessage","type","handleClose","done","ElMessageBox","then","catch","handleCancel","handleConfirm","validate","valid","watch","__exports__","grantMenuDialogVisible","grantMenuForm","treeProps","label","children","treeData","treeRef","handleCheckChange","checked","indeterminate","res1","res2","menuListTree","checkedMenuIdList","menuList","forEach","menu","push","setCheckedKeys","e","getCheckedKeys","queryForm","query","currentPage","pageSize","total","batchDeleteBtnDisabled","multipleSelection","tableMaxHeight","isShowParentMenu","tableData","createTime","updateTime","editId","editTitle","handleQuery","fetchData","handleDelete","item","join","handleGrantMenus","handleEdit","handleSizeChange","val","handleCurrentChange","handleSelectionChange","list","handleStateChange","row","loading","filterState","qs","roleList","newForm","oldForm","currentItem","Math","ceil","Date","now","resizeObserver","ResizeObserver","entries","entry","target","mainViewHeight","contentBoxSize","Array","isArray","blockSize","contentRect","height","onMounted","mainView","document","getElementById","observe"],"sourceRoot":""}