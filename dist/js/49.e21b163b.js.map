{"version":3,"file":"js/49.e21b163b.js","mappings":"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","sources":["webpack://hosp/./src/components/Menu.vue","webpack://hosp/./src/components/Menu.vue?ef75","webpack://hosp/./src/views/center/booking/EditDrawer.vue","webpack://hosp/./src/views/center/booking/EditDrawer.vue?173f","webpack://hosp/./src/views/center/booking/index.vue","webpack://hosp/./src/views/center/booking/index.vue?2a17"],"sourcesContent":["<template>\r\n  <el-scrollbar>\r\n    <el-menu>\r\n\r\n      <template v-for=\"menu in menuData\" :key=\"menu.path+menu.name\">\r\n        <!--菜单项的index值，以及v-for的key值，现已暂时改为path值与name值的合体，因为path值可能会重复-->\r\n        <el-sub-menu v-if=\"menu.children!=undefined&&menu.children.length>0\" :index=\"menu.path+menu.name\">\r\n          <template #title>\r\n            <el-icon><component v-if=\"menu.icon!=''\" :is=\"menu.icon\"/></el-icon>\r\n            {{ menu.name }}\r\n          </template>\r\n          <template v-for=\"menuItem in menu.children\" :key=\"menuItem.path+menuItem.name\">\r\n            <el-menu-item :index=\"menuItem.path+menuItem.name\" @click=\"$emit('selectMenu', menu, menuItem)\">\r\n              <template #title>\r\n                <el-icon><component v-if=\"menuItem.icon!=''\" :is=\"menuItem.icon\"/></el-icon>\r\n                {{ menuItem.name }}\r\n              </template>\r\n            </el-menu-item>\r\n          </template>\r\n        </el-sub-menu>\r\n        <el-menu-item v-else :index=\"menu.path+menu.name\" @click=\"$emit('selectMenu', menu)\">\r\n          <template #title>\r\n            <el-icon><component v-if=\"menu.icon!=''\" :is=\"menu.icon\"/></el-icon>\r\n            {{ menu.name }}\r\n          </template>\r\n        </el-menu-item>\r\n      </template>\r\n\r\n    </el-menu>\r\n  </el-scrollbar>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Menu\",\r\n  props: ['menuData'],\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import { render } from \"./Menu.vue?vue&type=template&id=83f96748\"\nimport script from \"./Menu.vue?vue&type=script&lang=js\"\nexport * from \"./Menu.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <el-drawer v-model=\"editDrawerVisible\" direction=\"rtl\">\r\n    <template #header>\r\n      <h4>预约 {{ scheduleInfo.departmentInfo.name }} {{ scheduleInfo.doctorInfo.name }}医生</h4>\r\n    </template>\r\n    <template #default>\r\n      <el-descriptions\r\n          title=\"医生信息卡\"\r\n          :column=\"2\"\r\n          size=\"default\"\r\n          border\r\n      >\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <InfoFilled/>\r\n              </el-icon>\r\n              工号\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.workerId }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <InfoFilled/>\r\n              </el-icon>\r\n              姓名\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.doctorInfo.name }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <QuestionFilled/>\r\n              </el-icon>\r\n              性别\r\n            </div>\r\n          </template>\r\n          {{ (scheduleInfo.doctorInfo.sex) == '0' ? '男' : '女' }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <Iphone/>\r\n              </el-icon>\r\n              电话\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.doctorInfo.tel }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item>\r\n          <template #label>\r\n            <div class=\"cell-item\">\r\n              <el-icon>\r\n                <EditPen/>\r\n              </el-icon>\r\n              特长\r\n            </div>\r\n          </template>\r\n          {{ scheduleInfo.doctorInfo.note }}\r\n        </el-descriptions-item>\r\n      </el-descriptions>\r\n    </template>\r\n    <template #footer>\r\n      <el-form\r\n          ref=\"editFormRef\"\r\n          :model=\"editForm\"\r\n          :rules=\"editFormRules\"\r\n          label-width=\"100px\"\r\n          label-position=\"right\"\r\n          style=\"margin-bottom: 25%;\"\r\n      >\r\n        <el-form-item label=\"选择就诊人\" prop=\"patientId\">\r\n          <el-radio-group v-model=\"editForm.patientId\">\r\n            <el-radio v-for=\"patient in patientList\" :key=\"patient.patientId\" :label=\"patient.patientId\">\r\n              {{ patient.relation }} {{ patient.patientInfo.name }}\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"flex: auto\">\r\n        <el-button @click=\"handleCancel\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleConfirm\">预约</el-button>\r\n      </div>\r\n    </template>\r\n  </el-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, defineEmits, computed, ref, watch, reactive} from 'vue';\r\nimport AxiosUtil from \"@/utils/AxiosUtil\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport store from \"@/store\";\r\n\r\n// 定义传入该子组件的参数\r\nconst props = defineProps({\r\n  editDrawerVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  scheduleInfo: {\r\n    type: Object,\r\n    required: true,\r\n    default: () => {\r\n      return {\r\n        id: 6,\r\n        date: \"2022-11-08T16:00:00.000Z\",\r\n        time: 0,\r\n        departmentId: 17,\r\n        roomId: 20,\r\n        workerId: 14,\r\n        capacity: 24,\r\n        departmentInfo: {\r\n          name: \"体检科\",\r\n          id: 17\r\n        },\r\n        roomInfo: {\r\n          id: 20,\r\n          disabled: false,\r\n          deleted: false,\r\n          roomNo: 205,\r\n          departmentId: 17,\r\n          note: \"体检科诊室\",\r\n          departmentInfo: null\r\n        },\r\n        doctorInfo: {\r\n          id: 15,\r\n          name: \"付玉琳\",\r\n          idNo: null,\r\n          sex: true,\r\n          tel: 17788889997,\r\n          note: \"擅长健康检查\"\r\n        }\r\n      };\r\n    }\r\n  },\r\n});\r\n\r\n// 定义组件（自定义）事件\r\nconst emit = defineEmits(['update:editDrawerVisible', 'handleSubmit']);\r\n\r\n// 定义“预约”抽屉的显示状态\r\nconst editDrawerVisible = computed({\r\n  // 只读！读取时从父组件获取，更新时更新父组件\r\n  get() {\r\n    return props.editDrawerVisible;\r\n  },\r\n  set(newValue) {\r\n    emit('update:editDrawerVisible', newValue);\r\n  }\r\n});\r\n\r\n// 定义本地用户信息\r\nconst userInfo = ref(store.getters.GET_USERINFO);\r\n\r\n// 定义就诊人列表\r\nconst patientList = ref([]);\r\n\r\n// 定义表单数据\r\nconst editForm = ref({\r\n  id: -1,\r\n  patientId: -1,\r\n  scheduleId: props.scheduleInfo.id,\r\n  userId: userInfo.value.id,\r\n});\r\n\r\n// 定义表单验证规则\r\nconst editFormRules = reactive({\r\n  patientId: [\r\n    {required: true, message: '请选择就诊人', trigger: 'blur'},\r\n  ],\r\n})\r\n\r\n// 定义表单引用\r\nconst editFormRef = ref(null);\r\n\r\n// 表单重置事件\r\nconst handleReset = async () => {\r\n  // 从后台获取数据\r\n  let res1 = await AxiosUtil.get('/api/center/users/' + userInfo.value.id);\r\n  let res2 = await AxiosUtil.get('/api/center/patients?userId=' + userInfo.value.id);\r\n  console.log(\"更新用户信息 res= \", res1);\r\n  console.log(\"更新就诊人信息 res= \", res2);\r\n  if (res1.data.code == 20010 && res2.data.code == 20010) {\r\n    // 为本人构造就诊人数据\r\n    let personInfo = res1.data.user.personInfo;\r\n    let patient = {\r\n      id: -1,\r\n      userId: res1.data.user.id,\r\n      patientId: personInfo.id,\r\n      relation: '本人',\r\n      note: '无',\r\n      patientInfo: personInfo,\r\n    };\r\n    // 更新就诊人列表\r\n    patientList.value = res2.data.patientList;\r\n    patientList.value.unshift(patient);\r\n    // 更新表单数据\r\n    editForm.value = {\r\n      id: -1,\r\n      patientId: personInfo.id,\r\n      scheduleId: props.scheduleInfo.id,\r\n      userId: userInfo.value.id,\r\n    };\r\n  } else {\r\n    ElMessage({\r\n      message: res1.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n}\r\n\r\n// 定义对话框关闭事件\r\nconst handleCancel = () => {\r\n  editDrawerVisible.value = false;\r\n}\r\n\r\n// 定义确认按钮事件\r\nconst handleConfirm = () => {\r\n  // 表单验证\r\n  editFormRef.value.validate(async valid => {\r\n    if (valid) {\r\n      // 表单验证通过\r\n      let url, res;\r\n      console.log('提交新增...');\r\n      url = '/api/center/appointments';\r\n      res = await AxiosUtil.post(url, editForm.value);\r\n      console.log(\"新增预约 res.data= \", res.data);\r\n      if (res.data.code == 20020) {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'success',\r\n        });\r\n        emit('handleSubmit'); // 触发自定义事件，使父组件刷新数据\r\n        handleCancel(); // 关闭对话框\r\n      } else {\r\n        ElMessage({\r\n          message: res.data.msg,\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// 当对话框重新显示时重置表单\r\nwatch(editDrawerVisible, (newValue) => {\r\n  if (newValue == true) {\r\n    handleReset();\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"EditDrawer\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cell-item {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 42px;\r\n}\r\n</style>","import script from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditDrawer.vue?vue&type=style&index=0&id=34e27b16&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-34e27b16\"]])\n\nexport default __exports__","<template>\r\n  <el-aside width=\"250px\">\r\n    <Menu :menu-data=\"menuData\" @select-menu=\"selectMenu\"/>\r\n  </el-aside>\r\n  <el-container>\r\n    <!--操作台-->\r\n    <el-header class=\"operatingFloor\">\r\n      <el-row :gutter=\"20\">\r\n        <el-date-picker\r\n            v-model=\"queryForm.selectedDate\"\r\n            type=\"week\"\r\n            format=\"[第] ww [周]\"\r\n            placeholder=\"选择一周\"\r\n            :clearable=\"false\"\r\n            style=\"margin: 0 10px;\"\r\n            disabled\r\n        />\r\n      </el-row>\r\n      <el-popover\r\n          placement=\"bottom\"\r\n          :title=\"departmentInfo.name\"\r\n          :width=\"500\"\r\n          trigger=\"hover\"\r\n          :content=\"departmentInfo.note\"\r\n      >\r\n        <template #reference>\r\n          <el-button style=\"margin-left: 12px;\">{{ departmentInfo.name }}介绍</el-button>\r\n        </template>\r\n      </el-popover>\r\n    </el-header>\r\n    <el-main style=\"padding: 5px; background: aliceblue;\" id=\"mainView\">\r\n      <el-scrollbar>\r\n        <el-calendar v-model=\"queryForm.selectedDate\" :range=\"dateRange\" ref=\"calendar\">\r\n          <template #header=\"{ date }\">\r\n            <span>{{ date }}</span>\r\n            <span></span>\r\n            <el-button-group>\r\n              <el-button size=\"small\" @click=\"handlePreviousWeek\">上一周</el-button>\r\n              <el-button size=\"small\" @click=\"selectDate('today')\">今天</el-button>\r\n              <el-button size=\"small\" @click=\"handleNextWeek\">下一周</el-button>\r\n            </el-button-group>\r\n          </template>\r\n          <template #date-cell=\"{ data }\">\r\n            <p :class=\"data.isSelected ? 'is-selected' : ''\">\r\n              {{ data.day.split('-').slice(1).join('-') }}\r\n            </p>\r\n            <el-badge :value=\"getDateData(data.date, 0).length\" :hidden=\"getDateData(data.date, 0).length<1\">\r\n              <el-button @click=\"handleSelectDate(data.date, 0)\">查看上午</el-button>\r\n            </el-badge>\r\n            <el-badge :value=\"getDateData(data.date, 1).length\" :hidden=\"getDateData(data.date, 1).length<1\">\r\n              <el-button @click=\"handleSelectDate(data.date, 1)\">查看下午</el-button>\r\n            </el-badge>\r\n          </template>\r\n        </el-calendar>\r\n        <el-divider>{{ dateToStr(queryForm.selectedDate) }} {{ selectedTime == 0 ? '上午' : '下午' }} 的排班信息</el-divider>\r\n        <el-card v-for=\"schedule in targetScheduleData\" :key=\"schedule.id\"\r\n                 style=\"margin-top: 20px;margin-left: 12px;width: 600px;float: left;\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <div>\r\n                <el-avatar shape=\"square\" size=\"default\" :src=\"getServerUrl()+'/image/userProfile/'+schedule.profile\"/>\r\n                <span>&nbsp;{{ schedule.departmentInfo.name }} · 排班信息卡</span>\r\n              </div>\r\n              <el-button type=\"warning\" @click=\"handleEdit(schedule)\" v-if=\"hasAnyAuthority('center:appointment:add')\">\r\n                预约\r\n              </el-button>\r\n            </div>\r\n          </template>\r\n          <el-descriptions\r\n              :column=\"4\"\r\n              size=\"default\"\r\n              border\r\n          >\r\n            <el-descriptions-item>\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <InfoFilled/>\r\n                  </el-icon>\r\n                  工号\r\n                </div>\r\n              </template>\r\n              {{ schedule.workerId }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item width=\"68px\">\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <InfoFilled/>\r\n                  </el-icon>\r\n                  姓名\r\n                </div>\r\n              </template>\r\n              {{ schedule.doctorInfo.name }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item width=\"38px\">\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <QuestionFilled/>\r\n                  </el-icon>\r\n                  性别\r\n                </div>\r\n              </template>\r\n              {{ (schedule.doctorInfo.sex) == '0' ? '男' : '女' }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item width=\"68px\">\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <Iphone/>\r\n                  </el-icon>\r\n                  电话\r\n                </div>\r\n              </template>\r\n              {{ schedule.doctorInfo.tel }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item width=\"68px\">\r\n              <template #label>\r\n                <div class=\"cell-item\">\r\n                  <el-icon>\r\n                    <EditPen/>\r\n                  </el-icon>\r\n                  特长\r\n                </div>\r\n              </template>\r\n              {{ schedule.doctorInfo.note }}\r\n            </el-descriptions-item>\r\n          </el-descriptions>\r\n        </el-card>\r\n      </el-scrollbar>\r\n    </el-main>\r\n  </el-container>\r\n  <EditDrawer :schedule-info=\"scheduleInfo\" v-model:edit-drawer-visible=\"editDrawerVisible\" @handleSubmit=\"test\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref, watch} from \"vue\";\r\nimport AxiosUtil, {getServerUrl} from \"@/utils/AxiosUtil\";\r\nimport qs from \"qs\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport Menu from \"@/components/Menu\";\r\nimport EditDrawer from \"./EditDrawer\";\r\n\r\n/*====以下为一些数据的定义====*/\r\n\r\n// 定义菜单数据（科室列表）\r\nlet menuData = ref([]);\r\n\r\n// 定义日历的排班数据\r\nlet scheduleData = ref([\r\n  {\r\n    id: 998,\r\n    date: new Date(2022, 10, 1, 0, 0, 0, 0),\r\n    time: 0,\r\n    departmentId: 0,\r\n    roomId: 10075286712,\r\n    workerId: 9980,\r\n    capacity: 20,\r\n    disabled: false,\r\n    departmentInfo: {\r\n      id: 0,\r\n      name: '顶级科室',\r\n    },\r\n    roomInfo: {\r\n      roomNo: 103,\r\n      disabled: false,\r\n    },\r\n    doctorInfo: {\r\n      name: '欧阳修米',\r\n      idNo: '430111200012310089',\r\n      tel: 18877776666,\r\n      sex: true,\r\n    },\r\n  },\r\n]);\r\n\r\n// 定义已选日期的排班数据\r\nconst targetScheduleData = ref([]);\r\n\r\n// 定义表单的查询条件\r\nconst queryForm = reactive({\r\n  departmentId: 0, // 科室ID\r\n  weekViewEnabled: true, // 是否启用周视图\r\n  selectedDate: new Date(), // 选定的日期\r\n});\r\n\r\n// 定义当前所选科室的信息\r\nconst departmentInfo = ref({\r\n  id: -1,\r\n  name: '',\r\n  note: '',\r\n});\r\n\r\n// 定义查询上午还是下午\r\nconst selectedTime = ref(1);\r\n\r\n// 定义日历显示的起止日期\r\nconst dateRange = ref([\r\n  new Date(queryForm.selectedDate.getTime() - 1000 * 60 * 60 * 24 * queryForm.selectedDate.getDay()),\r\n  new Date(queryForm.selectedDate.getTime() + 1000 * 60 * 60 * 24 * (6 - queryForm.selectedDate.getDay()))\r\n]);\r\n\r\n// 定义日历组件的引用\r\nconst calendar = ref()\r\n\r\n// 定义预约抽屉的显示状态\r\nconst editDrawerVisible = ref(false);\r\n\r\n// 定义传入预约抽屉的排班属性\r\nconst scheduleInfo = ref({\r\n  id: 6,\r\n  date: \"2022-11-08T16:00:00.000Z\",\r\n  time: 0,\r\n  departmentId: 17,\r\n  roomId: 20,\r\n  workerId: 14,\r\n  capacity: 24,\r\n  departmentInfo: {\r\n    name: \"体检科\",\r\n    id: 17\r\n  },\r\n  roomInfo: {\r\n    id: 20,\r\n    disabled: false,\r\n    deleted: false,\r\n    roomNo: 205,\r\n    departmentId: 17,\r\n    note: \"体检科诊室\",\r\n    departmentInfo: null\r\n  },\r\n  doctorInfo: {\r\n    id: 15,\r\n    name: \"付玉琳\",\r\n    idNo: null,\r\n    sex: true,\r\n    tel: 17788889997,\r\n    note: \"擅长健康检查\"\r\n  }\r\n});\r\n\r\n/*====以下为各按钮的点击事件====*/\r\n\r\n// 处理切换上一周视图\r\nconst handlePreviousWeek = () => {\r\n  queryForm.selectedDate = new Date(queryForm.selectedDate.getTime() - 1000 * 60 * 60 * 24 * 7);\r\n}\r\n\r\n// 处理切换下一周视图\r\nconst handleNextWeek = () => {\r\n  queryForm.selectedDate = new Date(queryForm.selectedDate.getTime() + 1000 * 60 * 60 * 24 * 7);\r\n}\r\n\r\n// 处理点击上个月、今天、下个月\r\nconst selectDate = (val) => {\r\n  calendar.value.selectDate(val)\r\n}\r\n\r\n// 处理选择科室\r\nconst selectMenu = (menu, menuItem) => {\r\n  console.log('选择科室', menu, menuItem);\r\n  if (menuItem) {\r\n    queryForm.departmentId = menuItem.path;\r\n    departmentInfo.value = menuItem;\r\n  } else {\r\n    queryForm.departmentId = menu.path;\r\n    departmentInfo.value = menu;\r\n  }\r\n}\r\n\r\nconst handleSelectDate = (date, time) => {\r\n  queryForm.selectedDate = date;\r\n  // queryForm.weekViewEnabled = true;\r\n  selectedTime.value = time;\r\n}\r\n\r\n// 处理新增\r\nconst handleEdit = (schedule) => {\r\n  console.log('新增...', schedule);\r\n  scheduleInfo.value = schedule;\r\n  editDrawerVisible.value = true;\r\n}\r\n\r\n/*====以下为一些监听以及其他函数====*/\r\n\r\n// 获取指定日期、班次的排班\r\nconst getDateData = (date, time) => {\r\n  let curYear = date.getFullYear();\r\n  let curMonth = date.getMonth();\r\n  let curDate = date.getDate();\r\n  let dateData = [];\r\n  for (const schedule of scheduleData.value) {\r\n    if (schedule.date.getFullYear() == curYear && schedule.date.getMonth() == curMonth && schedule.date.getDate() == curDate && (time == null || schedule.time == time)) {\r\n      dateData.push(schedule);\r\n    }\r\n  }\r\n  return dateData;\r\n}\r\n\r\n// 转换日期为字符串\r\nconst dateToStr = (dateDate) => {\r\n  let year = dateDate.getFullYear();\r\n  let month = (dateDate.getMonth() + 1);\r\n  let date = dateDate.getDate();\r\n  let dateStr = year + '-' + (month < 10 ? '0' + month : month) + '-' + (date < 10 ? '0' + date : date);\r\n  console.log('dateToStr dateDate=', dateDate, ', dateStr=', dateStr);\r\n  return dateStr;\r\n}\r\n\r\n// 转换字符串为日期\r\nconst strToDate = (dateStr) => {\r\n  let year = parseInt(dateStr.substring(0, 4));\r\n  let month = parseInt(dateStr.substring(5, 7));\r\n  let date = parseInt(dateStr.substring(8, 10));\r\n  // console.log(year, month, date);\r\n  let dateDate = new Date(year, month - 1, date, 0, 0, 0, 0);\r\n  console.log('strToDate dateStr=', dateStr, ', dateDate=', dateDate);\r\n  return dateDate;\r\n}\r\n\r\n// 从后台获取数据\r\nconst fetchData = async () => {\r\n  // 转换日期为字符串\r\n  let dateStr = dateToStr(queryForm.selectedDate);\r\n  let realQueryForm = {\r\n    departmentId: queryForm.departmentId,\r\n    weekViewEnabled: queryForm.weekViewEnabled,\r\n    selectedDate: dateStr,\r\n  }\r\n  let url = '/api/bsns/schedules?' + qs.stringify(realQueryForm);\r\n  console.log('url=', url);\r\n  // 从后台获取数据\r\n  let res = await AxiosUtil.get(url);\r\n  console.log(\"更新排班列表 res= \", res);\r\n  if (res.data.code == 20010) {\r\n    // 转换字符串为日期\r\n    let scheduleList = [];\r\n    res.data.scheduleList.forEach(schedule => {\r\n      schedule.date = strToDate(schedule.date);\r\n      scheduleList.push(schedule);\r\n    });\r\n    // 更新日历数据\r\n    scheduleData.value = scheduleList;\r\n  } else {\r\n    ElMessage({\r\n      message: res.data.msg,\r\n      type: 'error',\r\n    });\r\n  }\r\n  // 向后台请求科室列表\r\n  let res2 = await AxiosUtil.get('/api/bsns/departments');\r\n  console.log(res2.data);\r\n  if (res2.data.code == 20010) {\r\n    // let departments = [];\r\n    let menus = [];\r\n    res2.data.departmentList.forEach(item => {\r\n      let menu = {\r\n        name: item.name,\r\n        path: item.id,\r\n        note: item.note,\r\n        children: [],\r\n      };\r\n      item.children.forEach(child => {\r\n        let subMenu = {\r\n          name: child.name,\r\n          path: child.id,\r\n          note: child.note,\r\n          children: [],\r\n        };\r\n        menu.children.push(subMenu);\r\n      });\r\n      menus.push(menu);\r\n    });\r\n    // 更新科室列表\r\n    menuData.value = menus;\r\n  }\r\n}\r\n\r\nfetchData();\r\n\r\nconst test = () => {\r\n  console.log()\r\n}\r\n\r\n// 当选定日期变化时，重新计算日历的起止日期\r\nwatch(queryForm, (newValue, oldValue) => {\r\n  console.log('watch queryForm.selectedDate=', newValue.selectedDate);\r\n  if (queryForm.weekViewEnabled) {\r\n    let start = new Date(newValue.selectedDate.getTime() - 1000 * 60 * 60 * 24 * newValue.selectedDate.getDay());\r\n    let end = new Date(newValue.selectedDate.getTime() + 1000 * 60 * 60 * 24 * (6 - newValue.selectedDate.getDay()));\r\n    // 更新日历的起止日期\r\n    dateRange.value = [start, end];\r\n  } else {\r\n    // 取消绑定日历的起止日期\r\n    dateRange.value = null;\r\n  }\r\n  console.log(Date.now() + ' 重新拉取数据...');\r\n  console.log(queryForm);\r\n  fetchData();\r\n  targetScheduleData.value = getDateData(newValue.selectedDate, selectedTime.value);\r\n}, {deep: true});\r\n\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"index\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*操作台*/\r\n.operatingFloor {\r\n  display: flex;\r\n  align-items: center; /*align-items 属性可以使元素在交叉轴方向对齐*/\r\n  justify-content: flex-start; /*justify-content属性用来使元素在主轴方向上对齐*/\r\n  height: 48px;\r\n  padding: 8px 10px;\r\n\r\n}\r\n\r\n.el-tag--small {\r\n  margin-left: 5px;\r\n}\r\n\r\n.is-selected {\r\n  color: #1989fa;\r\n}\r\n\r\n.weekViewCellHeight {\r\n  color: #ff4949;\r\n}\r\n\r\n#mainView :deep(.el-calendar-table .el-calendar-day) {\r\n  /*height: var(--el-calendar-cell-width);*/\r\n  height: auto;\r\n  /*height: 200px;*/\r\n  cursor: auto;\r\n}\r\n\r\n#mainView :deep(.el-card) {\r\n  /*margin-top: 1px;*/\r\n  margin: 5px 5px;\r\n  /*cursor: pointer;*/\r\n}\r\n\r\n#mainView :deep(.el-card__body) {\r\n  /*padding: var(--el-card-padding);*/\r\n  padding: 5px 5px;\r\n  text-align: center;\r\n}\r\n\r\n/*卡片头部*/\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-header div {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n\r\n.cell-item {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 42px;\r\n}\r\n\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=2357ce72&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\DYZQ2\\\\Desktop\\\\redo\\\\hosp\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2357ce72\"]])\n\nexport default __exports__"],"names":["_createBlock","_component_el_scrollbar","_createVNode","_component_el_menu","_createElementBlock","_Fragment","_renderList","$props","menu","path","name","undefined","children","length","_component_el_sub_menu","index","title","_component_el_icon","icon","_resolveDynamicComponent","key","_toDisplayString","menuItem","_component_el_menu_item","onClick","_ctx","props","__exports__","render","editDrawerVisible","computed","get","set","newValue","emit","userInfo","ref","store","patientList","editForm","id","patientId","scheduleId","scheduleInfo","userId","value","editFormRules","reactive","required","message","trigger","editFormRef","handleReset","async","res1","AxiosUtil","res2","console","log","data","code","personInfo","user","patient","relation","note","patientInfo","unshift","ElMessage","msg","type","handleCancel","handleConfirm","validate","valid","url","res","watch","menuData","scheduleData","date","Date","time","departmentId","roomId","workerId","capacity","disabled","departmentInfo","roomInfo","roomNo","doctorInfo","idNo","tel","sex","targetScheduleData","queryForm","weekViewEnabled","selectedDate","selectedTime","dateRange","getTime","getDay","calendar","deleted","handlePreviousWeek","handleNextWeek","selectDate","val","selectMenu","handleSelectDate","handleEdit","schedule","getDateData","curYear","getFullYear","curMonth","getMonth","curDate","getDate","dateData","push","dateToStr","dateDate","year","month","dateStr","strToDate","parseInt","substring","fetchData","realQueryForm","qs","scheduleList","forEach","menus","departmentList","item","child","subMenu","test","oldValue","start","end","now","deep"],"sourceRoot":""}